// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils/index disableRangeCreater 1`] = `
Array [
  Object {
    "documentation": "Adds a column in an existing table",
    "insertText": "ADD",
    "kind": 0,
    "label": "ADD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds a constraint after a table is already created",
    "insertText": "ADD CONSTRAINT",
    "kind": 0,
    "label": "ADD CONSTRAINT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns true if all of the subquery values meet the 
condition",
    "insertText": "ALL",
    "kind": 0,
    "label": "ALL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds, deletes, or modifies columns in a table, or changes the data 
type of a column in a table",
    "insertText": "ALTER",
    "kind": 0,
    "label": "ALTER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Changes the data type of a column in a table",
    "insertText": "ALTER COLUMN",
    "kind": 0,
    "label": "ALTER COLUMN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds, deletes, or modifies columns in a table",
    "insertText": "ALTER TABLE",
    "kind": 0,
    "label": "ALTER TABLE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Only includes rows where both conditions is true",
    "insertText": "AND",
    "kind": 0,
    "label": "AND",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns true if any of the subquery values meet the 
condition",
    "insertText": "ANY",
    "kind": 0,
    "label": "ANY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Renames a column or table with an alias",
    "insertText": "AS",
    "kind": 0,
    "label": "AS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Sorts the result set in ascending order",
    "insertText": "ASC",
    "kind": 0,
    "label": "ASC",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a back up of an existing database",
    "insertText": "BACKUP DATABASE",
    "kind": 0,
    "label": "BACKUP DATABASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Selects values within a given range",
    "insertText": "BETWEEN",
    "kind": 0,
    "label": "BETWEEN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates different outputs based on conditions",
    "insertText": "CASE",
    "kind": 0,
    "label": "CASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A constraint that limits the value that can be placed in a 
column",
    "insertText": "CHECK",
    "kind": 0,
    "label": "CHECK",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Changes the data type of a column or deletes a column in a table",
    "insertText": "COLUMN",
    "kind": 0,
    "label": "COLUMN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds or deletes a constraint",
    "insertText": "CONSTRAINT",
    "kind": 0,
    "label": "CONSTRAINT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a database, index, view, table, or procedure",
    "insertText": "CREATE",
    "kind": 0,
    "label": "CREATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a new SQL database",
    "insertText": "CREATE DATABASE",
    "kind": 0,
    "label": "CREATE DATABASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates an index on a table (allows duplicate values)",
    "insertText": "CREATE INDEX",
    "kind": 0,
    "label": "CREATE INDEX",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Updates a view",
    "insertText": "CREATE OR REPLACE VIEW",
    "kind": 0,
    "label": "CREATE OR REPLACE VIEW",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a new table in the database",
    "insertText": "CREATE TABLE",
    "kind": 0,
    "label": "CREATE TABLE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a stored procedure",
    "insertText": "CREATE PROCEDURE",
    "kind": 0,
    "label": "CREATE PROCEDURE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a unique index on a table (no duplicate values)",
    "insertText": "CREATE UNIQUE INDEX",
    "kind": 0,
    "label": "CREATE UNIQUE INDEX",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a view based on the result set of a SELECT statement",
    "insertText": "CREATE VIEW",
    "kind": 0,
    "label": "CREATE VIEW",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates or deletes an SQL database",
    "insertText": "DATABASE",
    "kind": 0,
    "label": "DATABASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A constraint that provides a default value for a column",
    "insertText": "DEFAULT",
    "kind": 0,
    "label": "DEFAULT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes rows from a table",
    "insertText": "DELETE",
    "kind": 0,
    "label": "DELETE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Sorts the result set in descending order",
    "insertText": "DESC",
    "kind": 0,
    "label": "DESC",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Selects only distinct (different) values",
    "insertText": "DISTINCT",
    "kind": 0,
    "label": "DISTINCT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes a column, constraint, database, index, table, or view",
    "insertText": "DROP",
    "kind": 0,
    "label": "DROP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes a column in a table",
    "insertText": "DROP COLUMN",
    "kind": 0,
    "label": "DROP COLUMN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes a UNIQUE, PRIMARY KEY, FOREIGN KEY, or CHECK constraint",
    "insertText": "DROP CONSTRAINT",
    "kind": 0,
    "label": "DROP CONSTRAINT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes an existing SQL database",
    "insertText": "DROP DATABASE",
    "kind": 0,
    "label": "DROP DATABASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes a DEFAULT constraint",
    "insertText": "DROP DEFAULT",
    "kind": 0,
    "label": "DROP DEFAULT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes an index in a table",
    "insertText": "DROP INDEX",
    "kind": 0,
    "label": "DROP INDEX",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes an existing table in the database",
    "insertText": "DROP TABLE",
    "kind": 0,
    "label": "DROP TABLE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes a view",
    "insertText": "DROP VIEW",
    "kind": 0,
    "label": "DROP VIEW",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Executes a stored procedure",
    "insertText": "EXEC",
    "kind": 0,
    "label": "EXEC",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Tests for the existence of any record in a subquery",
    "insertText": "EXISTS",
    "kind": 0,
    "label": "EXISTS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A constraint that is a key used to link two tables together",
    "insertText": "FOREIGN KEY",
    "kind": 0,
    "label": "FOREIGN KEY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies which table to select or delete data from",
    "insertText": "FROM",
    "kind": 0,
    "label": "FROM",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns all rows when there is a match in either left table or right table",
    "insertText": "FULL OUTER JOIN",
    "kind": 0,
    "label": "FULL OUTER JOIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Groups the result set (used with aggregate functions: COUNT, MAX, MIN, SUM, 
AVG)",
    "insertText": "GROUP BY",
    "kind": 0,
    "label": "GROUP BY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Used instead of WHERE with aggregate functions",
    "insertText": "HAVING",
    "kind": 0,
    "label": "HAVING",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Allows you to specify multiple values in a WHERE clause",
    "insertText": "IN",
    "kind": 0,
    "label": "IN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates or deletes an index in a table ",
    "insertText": "INDEX",
    "kind": 0,
    "label": "INDEX",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns rows that have matching values in both tables",
    "insertText": "INNER JOIN",
    "kind": 0,
    "label": "INNER JOIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Inserts new rows in a table",
    "insertText": "INSERT INTO",
    "kind": 0,
    "label": "INSERT INTO",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Copies data from one table into another table",
    "insertText": "INSERT INTO SELECT",
    "kind": 0,
    "label": "INSERT INTO SELECT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Tests for empty values",
    "insertText": "IS NULL",
    "kind": 0,
    "label": "IS NULL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Tests for non-empty values",
    "insertText": "IS NOT NULL",
    "kind": 0,
    "label": "IS NOT NULL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Joins tables",
    "insertText": "JOIN",
    "kind": 0,
    "label": "JOIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns all rows from the left table, and the matching rows from the right 
table",
    "insertText": "LEFT JOIN",
    "kind": 0,
    "label": "LEFT JOIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Searches for a specified pattern in a column",
    "insertText": "LIKE",
    "kind": 0,
    "label": "LIKE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies the number of records to return in the result set",
    "insertText": "LIMIT",
    "kind": 0,
    "label": "LIMIT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Only includes rows where a condition is not true",
    "insertText": "NOT",
    "kind": 0,
    "label": "NOT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A constraint that enforces a column to not accept NULL values",
    "insertText": "NOT NULL",
    "kind": 0,
    "label": "NOT NULL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Includes rows where either condition is true",
    "insertText": "OR",
    "kind": 0,
    "label": "OR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Sorts the result set in ascending or descending order",
    "insertText": "ORDER BY",
    "kind": 0,
    "label": "ORDER BY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns all rows when there is a match in either left table or right table",
    "insertText": "OUTER JOIN",
    "kind": 0,
    "label": "OUTER JOIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A constraint that uniquely identifies each record in a database table",
    "insertText": "PRIMARY KEY",
    "kind": 0,
    "label": "PRIMARY KEY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A stored procedure",
    "insertText": "PROCEDURE",
    "kind": 0,
    "label": "PROCEDURE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns all rows from the right table, and the matching rows from the 
left table",
    "insertText": "RIGHT JOIN",
    "kind": 0,
    "label": "RIGHT JOIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies the number of records to return in the result set",
    "insertText": "ROWNUM",
    "kind": 0,
    "label": "ROWNUM",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Selects data from a database",
    "insertText": "SELECT",
    "kind": 0,
    "label": "SELECT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Selects only distinct (different) values",
    "insertText": "SELECT DISTINCT",
    "kind": 0,
    "label": "SELECT DISTINCT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Copies data from one table into a new table",
    "insertText": "SELECT INTO",
    "kind": 0,
    "label": "SELECT INTO",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies the number of records to return in the result set",
    "insertText": "SELECT TOP",
    "kind": 0,
    "label": "SELECT TOP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies which columns and values that should be updated in a table",
    "insertText": "SET",
    "kind": 0,
    "label": "SET",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates a table, or adds, deletes, or modifies columns in a table, or 
deletes a table or data inside a table",
    "insertText": "TABLE",
    "kind": 0,
    "label": "TABLE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies the number of records to return in the result set",
    "insertText": "TOP",
    "kind": 0,
    "label": "TOP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Deletes the data inside a table, but not the table itself",
    "insertText": "TRUNCATE TABLE",
    "kind": 0,
    "label": "TRUNCATE TABLE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Combines the result set of two or more SELECT statements (only 
distinct values)",
    "insertText": "UNION",
    "kind": 0,
    "label": "UNION",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Combines the result set of two or more SELECT statements (allows 
duplicate values)",
    "insertText": "UNION ALL",
    "kind": 0,
    "label": "UNION ALL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A constraint that ensures that all values in a column are unique",
    "insertText": "UNIQUE",
    "kind": 0,
    "label": "UNIQUE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Updates existing rows in a table",
    "insertText": "UPDATE",
    "kind": 0,
    "label": "UPDATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Specifies the values of an INSERT INTO statement",
    "insertText": "VALUES",
    "kind": 0,
    "label": "VALUES",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates, updates, or deletes a view",
    "insertText": "VIEW",
    "kind": 0,
    "label": "VIEW",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Filters a result set to include only records that fulfill a specified 
condition",
    "insertText": "WHERE",
    "kind": 0,
    "label": "WHERE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the ASCII value for the specific character",
    "insertText": "ASCII",
    "kind": undefined,
    "label": "ASCII",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the length of a string (in characters)",
    "insertText": "CHAR_LENGTH",
    "kind": undefined,
    "label": "CHAR_LENGTH",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the length of a string (in characters)",
    "insertText": "CHARACTER_LENGTH",
    "kind": undefined,
    "label": "CHARACTER_LENGTH",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds two or more expressions together",
    "insertText": "CONCAT",
    "kind": undefined,
    "label": "CONCAT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds two or more expressions together with a separator",
    "insertText": "CONCAT_WS",
    "kind": undefined,
    "label": "CONCAT_WS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the index position of a value in a list of values",
    "insertText": "FIELD",
    "kind": undefined,
    "label": "FIELD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the position of a string within a list of strings",
    "insertText": "FIND_IN_SET",
    "kind": undefined,
    "label": "FIND_IN_SET",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Formats a number to a format like \\"#,###,###.##\\", rounded to a 
specified number 
of decimal places",
    "insertText": "FORMAT",
    "kind": undefined,
    "label": "FORMAT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Inserts a string within a string at the specified position and for a certain 
number of characters",
    "insertText": "INSERT",
    "kind": undefined,
    "label": "INSERT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the position of the first occurrence of a string in another string",
    "insertText": "INSTR",
    "kind": undefined,
    "label": "INSTR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a string to lower-case",
    "insertText": "LCASE",
    "kind": undefined,
    "label": "LCASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts a number of characters from a string (starting from left)",
    "insertText": "LEFT",
    "kind": undefined,
    "label": "LEFT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the length of a string (in bytes)",
    "insertText": "LENGTH",
    "kind": undefined,
    "label": "LENGTH",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the position of the first occurrence of a substring in a string",
    "insertText": "LOCATE",
    "kind": undefined,
    "label": "LOCATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a string to lower-case",
    "insertText": "LOWER",
    "kind": undefined,
    "label": "LOWER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Left-pads a string with another string, to a certain length",
    "insertText": "LPAD",
    "kind": undefined,
    "label": "LPAD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Removes leading spaces from a string",
    "insertText": "LTRIM",
    "kind": undefined,
    "label": "LTRIM",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts a substring from a string (starting at any position)",
    "insertText": "MID",
    "kind": undefined,
    "label": "MID",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the position of the first occurrence of a substring in a string",
    "insertText": "POSITION",
    "kind": undefined,
    "label": "POSITION",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Repeats a string as many times as specified",
    "insertText": "REPEAT",
    "kind": undefined,
    "label": "REPEAT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Replaces all occurrences of a substring within a string, with a new 
substring",
    "insertText": "REPLACE",
    "kind": undefined,
    "label": "REPLACE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Reverses a string and returns the result",
    "insertText": "REVERSE",
    "kind": undefined,
    "label": "REVERSE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts a number of characters from a string (starting from right)",
    "insertText": "RIGHT",
    "kind": undefined,
    "label": "RIGHT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Right-pads a string with another string, to a certain length",
    "insertText": "RPAD",
    "kind": undefined,
    "label": "RPAD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Removes trailing spaces from a string",
    "insertText": "RTRIM",
    "kind": undefined,
    "label": "RTRIM",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a string of the specified number of space characters",
    "insertText": "SPACE",
    "kind": undefined,
    "label": "SPACE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Compares two strings",
    "insertText": "STRCMP",
    "kind": undefined,
    "label": "STRCMP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts a substring from a string (starting at any position)",
    "insertText": "SUBSTR",
    "kind": undefined,
    "label": "SUBSTR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts a substring from a string (starting at any position)",
    "insertText": "SUBSTRING",
    "kind": undefined,
    "label": "SUBSTRING",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a substring of a string before a specified number of 
delimiter occurs",
    "insertText": "SUBSTRING_INDEX",
    "kind": undefined,
    "label": "SUBSTRING_INDEX",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Removes leading and trailing spaces from a string",
    "insertText": "TRIM",
    "kind": undefined,
    "label": "TRIM",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a string to upper-case",
    "insertText": "UCASE",
    "kind": undefined,
    "label": "UCASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a string to upper-case",
    "insertText": "UPPER",
    "kind": undefined,
    "label": "UPPER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the absolute value of a number",
    "insertText": "ABS",
    "kind": undefined,
    "label": "ABS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the arc cosine of a number",
    "insertText": "ACOS",
    "kind": undefined,
    "label": "ACOS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the arc sine of a number",
    "insertText": "ASIN",
    "kind": undefined,
    "label": "ASIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the arc tangent of one or two numbers",
    "insertText": "ATAN",
    "kind": undefined,
    "label": "ATAN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the arc tangent of two numbers",
    "insertText": "ATAN2",
    "kind": undefined,
    "label": "ATAN2",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the average value of an expression",
    "insertText": "AVG",
    "kind": undefined,
    "label": "AVG",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the smallest integer value that is >= to a number",
    "insertText": "CEIL",
    "kind": undefined,
    "label": "CEIL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the smallest integer value that is >= to a number",
    "insertText": "CEILING",
    "kind": undefined,
    "label": "CEILING",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the cosine of a number",
    "insertText": "COS",
    "kind": undefined,
    "label": "COS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the cotangent of a number",
    "insertText": "COT",
    "kind": undefined,
    "label": "COT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the number of records returned by a select query",
    "insertText": "COUNT",
    "kind": undefined,
    "label": "COUNT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a value in radians to degrees",
    "insertText": "DEGREES",
    "kind": undefined,
    "label": "DEGREES",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Used for integer division",
    "insertText": "DIV",
    "kind": undefined,
    "label": "DIV",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns e raised to the power of a specified number",
    "insertText": "EXP",
    "kind": undefined,
    "label": "EXP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the largest integer value that is <= to a number",
    "insertText": "FLOOR",
    "kind": undefined,
    "label": "FLOOR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the greatest value of the list of arguments",
    "insertText": "GREATEST",
    "kind": undefined,
    "label": "GREATEST",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the smallest value of the list of arguments",
    "insertText": "LEAST",
    "kind": undefined,
    "label": "LEAST",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the natural logarithm of a number",
    "insertText": "LN",
    "kind": undefined,
    "label": "LN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the natural logarithm of a number, or the logarithm of a number to a 
specified base",
    "insertText": "LOG",
    "kind": undefined,
    "label": "LOG",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the natural logarithm of a number to base 10",
    "insertText": "LOG10",
    "kind": undefined,
    "label": "LOG10",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the natural logarithm of a number to base 2",
    "insertText": "LOG2",
    "kind": undefined,
    "label": "LOG2",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the maximum value in a set of values",
    "insertText": "MAX",
    "kind": undefined,
    "label": "MAX",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the minimum value in a set of values",
    "insertText": "MIN",
    "kind": undefined,
    "label": "MIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the remainder of a number divided by another number",
    "insertText": "MOD",
    "kind": undefined,
    "label": "MOD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the value of PI",
    "insertText": "PI",
    "kind": undefined,
    "label": "PI",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the value of a number raised to the power of another number",
    "insertText": "POW",
    "kind": undefined,
    "label": "POW",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the value of a number raised to the power of another number",
    "insertText": "POWER",
    "kind": undefined,
    "label": "POWER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a degree value into radians",
    "insertText": "RADIANS",
    "kind": undefined,
    "label": "RADIANS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a random number",
    "insertText": "RAND",
    "kind": undefined,
    "label": "RAND",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Rounds a number to a specified number of decimal places",
    "insertText": "ROUND",
    "kind": undefined,
    "label": "ROUND",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the sign of a number",
    "insertText": "SIGN",
    "kind": undefined,
    "label": "SIGN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the sine of a number",
    "insertText": "SIN",
    "kind": undefined,
    "label": "SIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the square root of a number",
    "insertText": "SQRT",
    "kind": undefined,
    "label": "SQRT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Calculates the sum of a set of values",
    "insertText": "SUM",
    "kind": undefined,
    "label": "SUM",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the tangent of a number",
    "insertText": "TAN",
    "kind": undefined,
    "label": "TAN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Truncates a number to the specified number of decimal places",
    "insertText": "TRUNCATE",
    "kind": undefined,
    "label": "TRUNCATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds a time/date interval to a date and then returns the date",
    "insertText": "ADDDATE",
    "kind": undefined,
    "label": "ADDDATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds a time interval to a time/datetime and then returns the time/datetime",
    "insertText": "ADDTIME",
    "kind": undefined,
    "label": "ADDTIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date",
    "insertText": "CURDATE",
    "kind": undefined,
    "label": "CURDATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date",
    "insertText": "CURRENT_DATE",
    "kind": undefined,
    "label": "CURRENT_DATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current time",
    "insertText": "CURRENT_TIME",
    "kind": undefined,
    "label": "CURRENT_TIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date and time",
    "insertText": "CURRENT_TIMESTAMP",
    "kind": undefined,
    "label": "CURRENT_TIMESTAMP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current time",
    "insertText": "CURTIME",
    "kind": undefined,
    "label": "CURTIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts the date part from a datetime expression",
    "insertText": "DATE",
    "kind": undefined,
    "label": "DATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the number of days between two date values",
    "insertText": "DATEDIFF",
    "kind": undefined,
    "label": "DATEDIFF",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds a time/date interval to a date and then returns the date",
    "insertText": "DATE_ADD",
    "kind": undefined,
    "label": "DATE_ADD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Formats a date",
    "insertText": "DATE_FORMAT",
    "kind": undefined,
    "label": "DATE_FORMAT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Subtracts a time/date interval from a date and then returns the date",
    "insertText": "DATE_SUB",
    "kind": undefined,
    "label": "DATE_SUB",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the day of the month for a given date",
    "insertText": "DAY",
    "kind": undefined,
    "label": "DAY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the weekday name for a given date",
    "insertText": "DAYNAME",
    "kind": undefined,
    "label": "DAYNAME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the day of the month for a given date",
    "insertText": "DAYOFMONTH",
    "kind": undefined,
    "label": "DAYOFMONTH",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the weekday index for a given date",
    "insertText": "DAYOFWEEK",
    "kind": undefined,
    "label": "DAYOFWEEK",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the day of the year for a given date",
    "insertText": "DAYOFYEAR",
    "kind": undefined,
    "label": "DAYOFYEAR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts a part from a given date",
    "insertText": "EXTRACT",
    "kind": undefined,
    "label": "EXTRACT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a date from a numeric datevalue",
    "insertText": "FROM_DAYS",
    "kind": undefined,
    "label": "FROM_DAYS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the hour part for a given date",
    "insertText": "HOUR",
    "kind": undefined,
    "label": "HOUR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts the last day of the month for a given date",
    "insertText": "LAST_DAY",
    "kind": undefined,
    "label": "LAST_DAY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date and time",
    "insertText": "LOCALTIME",
    "kind": undefined,
    "label": "LOCALTIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date and time",
    "insertText": "LOCALTIMESTAMP",
    "kind": undefined,
    "label": "LOCALTIMESTAMP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates and returns a date based on a year and a number of days value",
    "insertText": "MAKEDATE",
    "kind": undefined,
    "label": "MAKEDATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Creates and returns a time based on an hour, minute, and second value",
    "insertText": "MAKETIME",
    "kind": undefined,
    "label": "MAKETIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the microsecond part of a time/datetime",
    "insertText": "MICROSECOND",
    "kind": undefined,
    "label": "MICROSECOND",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the minute part of a time/datetime",
    "insertText": "MINUTE",
    "kind": undefined,
    "label": "MINUTE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the month part for a given date",
    "insertText": "MONTH",
    "kind": undefined,
    "label": "MONTH",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the name of the month for a given date",
    "insertText": "MONTHNAME",
    "kind": undefined,
    "label": "MONTHNAME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date and time",
    "insertText": "NOW",
    "kind": undefined,
    "label": "NOW",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Adds a specified number of months to a period",
    "insertText": "PERIOD_ADD",
    "kind": undefined,
    "label": "PERIOD_ADD",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the difference between two periods",
    "insertText": "PERIOD_DIFF",
    "kind": undefined,
    "label": "PERIOD_DIFF",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the quarter of the year for a given date value",
    "insertText": "QUARTER",
    "kind": undefined,
    "label": "QUARTER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the seconds part of a time/datetime",
    "insertText": "SECOND",
    "kind": undefined,
    "label": "SECOND",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a time value based on the specified seconds",
    "insertText": "SEC_TO_TIME",
    "kind": undefined,
    "label": "SEC_TO_TIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a date based on a string and a format",
    "insertText": "STR_TO_DATE",
    "kind": undefined,
    "label": "STR_TO_DATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Subtracts a time/date interval from a date and then returns the date",
    "insertText": "SUBDATE",
    "kind": undefined,
    "label": "SUBDATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Subtracts a time interval from a datetime and then returns the time/datetime",
    "insertText": "SUBTIME",
    "kind": undefined,
    "label": "SUBTIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current date and time",
    "insertText": "SYSDATE",
    "kind": undefined,
    "label": "SYSDATE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Extracts the time part from a given time/datetime",
    "insertText": "TIME",
    "kind": undefined,
    "label": "TIME",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Formats a time by a specified format",
    "insertText": "TIME_FORMAT",
    "kind": undefined,
    "label": "TIME_FORMAT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a time value into seconds",
    "insertText": "TIME_TO_SEC",
    "kind": undefined,
    "label": "TIME_TO_SEC",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the difference between two time/datetime expressions",
    "insertText": "TIMEDIFF",
    "kind": undefined,
    "label": "TIMEDIFF",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a datetime value based on a date or datetime value",
    "insertText": "TIMESTAMP",
    "kind": undefined,
    "label": "TIMESTAMP",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the number of days between a date and date \\"0000-00-00\\"",
    "insertText": "TO_DAYS",
    "kind": undefined,
    "label": "TO_DAYS",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the week number for a given date",
    "insertText": "WEEK",
    "kind": undefined,
    "label": "WEEK",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the weekday number for a given date",
    "insertText": "WEEKDAY",
    "kind": undefined,
    "label": "WEEKDAY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the week number for a given date",
    "insertText": "WEEKOFYEAR",
    "kind": undefined,
    "label": "WEEKOFYEAR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the year part for a given date",
    "insertText": "YEAR",
    "kind": undefined,
    "label": "YEAR",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the year and week number for a given date",
    "insertText": "YEARWEEK",
    "kind": undefined,
    "label": "YEARWEEK",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a binary representation of a number",
    "insertText": "BIN",
    "kind": undefined,
    "label": "BIN",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a value to a binary string",
    "insertText": "BINARY",
    "kind": undefined,
    "label": "BINARY",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Goes through conditions and return a value when the first condition is 
met",
    "insertText": "CASE",
    "kind": undefined,
    "label": "CASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a value (of any type) into a specified datatype",
    "insertText": "CAST",
    "kind": undefined,
    "label": "CAST",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the first non-null value in a list",
    "insertText": "COALESCE",
    "kind": undefined,
    "label": "COALESCE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the unique connection ID for the current connection",
    "insertText": "CONNECTION_ID",
    "kind": undefined,
    "label": "CONNECTION_ID",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a number from one numeric base system to another",
    "insertText": "CONV",
    "kind": undefined,
    "label": "CONV",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Converts a value into the specified datatype or character set",
    "insertText": "CONVERT",
    "kind": undefined,
    "label": "CONVERT",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the user name and host name for the MySQL account that the server 
used to authenticate the current client",
    "insertText": "CURRENT_USER",
    "kind": undefined,
    "label": "CURRENT_USER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the name of the current database",
    "insertText": "DATABASE",
    "kind": undefined,
    "label": "DATABASE",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns a value if a condition is TRUE, or another value if a condition is FALSE",
    "insertText": "IF",
    "kind": undefined,
    "label": "IF",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Return a specified value if the expression is NULL, otherwise return the 
expression",
    "insertText": "IFNULL",
    "kind": undefined,
    "label": "IFNULL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns 1 or 0 depending on whether an expression is NULL",
    "insertText": "ISNULL",
    "kind": undefined,
    "label": "ISNULL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the AUTO_INCREMENT id of the last row that has been inserted or 
updated in a table",
    "insertText": "LAST_INSERT_ID",
    "kind": undefined,
    "label": "LAST_INSERT_ID",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Compares two expressions and returns NULL if they are equal. Otherwise, the 
first expression is returned",
    "insertText": "NULLIF",
    "kind": undefined,
    "label": "NULLIF",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current MySQL user name and host name",
    "insertText": "SESSION_USER",
    "kind": undefined,
    "label": "SESSION_USER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current MySQL user name and host name",
    "insertText": "SYSTEM_USER",
    "kind": undefined,
    "label": "SYSTEM_USER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current MySQL user name and host name",
    "insertText": "USER",
    "kind": undefined,
    "label": "USER",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "Returns the current version of the MySQL database",
    "insertText": "VERSION",
    "kind": undefined,
    "label": "VERSION",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "A field with a NULL value is a field with no value.",
    "insertText": "NULL",
    "kind": undefined,
    "label": "NULL",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "The INSERT INTO statement is used to insert new records in a table.",
    "insertText": "INSERT INTO \${1:tableName} VALUES(\${2:value});",
    "insertTextRules": 0,
    "kind": undefined,
    "label": "INSERT:snippet",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "The CREATE TABLE statement is used to create a new table in a database.",
    "insertText": "CREATE TABLE \${1:table_name} (
	\${2:column} \${3:datatype}
);",
    "insertTextRules": 0,
    "kind": undefined,
    "label": "CREATE:snippet",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "The SELECT statement is used to select data from a database.",
    "insertText": "SELECT \${1:column} FROM \${2:table_name};",
    "insertTextRules": 0,
    "kind": undefined,
    "label": "SELECT:snippet",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
  Object {
    "documentation": "show tables;",
    "insertText": "show tables;",
    "insertTextRules": 0,
    "kind": undefined,
    "label": "SHOW:snippet",
    "range": Object {
      "endColumn": 0,
      "endLineNumber": 0,
      "startColumn": 0,
      "startLineNumber": 0,
    },
  },
]
`;
