<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dtstack.batch.dao.RoleDao">

    <sql id="select_content_fragment">
        id,tenant_id,project_id,role_name,role_type,role_value,role_desc,create_user_id,modify_user_id,gmt_create,gmt_modified,is_deleted
    </sql>

    <sql id="select_where_fragment">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND id = #{model.id}
            </if>
            <if test="model.tenantId != null">
                AND tenant_id = #{model.tenantId}
            </if>
            <if test="model.projectId != null">
                AND project_id = #{model.projectId}
            </if>
            <if test="model.roleName != null">
                AND role_name = #{model.roleName}
            </if>
            <if test="model.roleType != null">
                AND role_type = #{model.roleType}
            </if>
            <if test="model.roleValue != null">
                AND role_value = #{model.roleValue}
            </if>
            <if test="model.roleDesc != null">
                AND role_desc = #{model.roleDesc}
            </if>
            <if test="model.createUserId != null">
                AND create_user_id = #{model.createUserId}
            </if>
            <if test="model.modifyUserId != null">
                AND modify_user_id = #{model.modifyUserId}
            </if>
            <if test="model.gmtCreate != null">
                AND gmt_create = #{model.gmtCreate}
            </if>
            <if test="model.gmtModified != null">
                AND gmt_modified = #{model.gmtModified}
            </if>
            <if test="model.isDeleted != null">
                AND is_deleted = #{model.isDeleted}
            </if>
            <if test="model.roleNameLike!=null">
                AND role_name LIKE CONCAT('%',#{model.roleNameLike},'%')
            </if>
        </trim>
    </sql>

    <sql id="update_fragment">
        <set>
           gmt_modified = now(),
            <if test="id != null">
                id = #{id},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="roleName != null">
                role_name = #{roleName},
            </if>
            <if test="roleType != null">
                role_type = #{roleType},
            </if>
            <if test="roleValue != null">
                role_value = #{roleValue},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
    </sql>

    <select id="getOne" resultType="com.dtstack.batch.domain.Role">
        select
        <include refid="select_content_fragment"/>
        from rdos_role
        where id = #{roleId} and is_deleted = 0
    </select>

    <select id="listSystemDefaultRole" resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        WHERE project_id=-1 AND tenant_id=-1 AND is_deleted=0
    </select>

    <select id="getSystemDefaultRoleByRoleValue" resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        WHERE role_value=#{roleValue} AND project_id=-1 AND tenant_id=-1 AND is_deleted=0 limit 1
    </select>

    <update id="deleteById">
        UPDATE rdos_role SET  is_deleted=1 , gmt_modified=now(), modify_user_id = #{modifyUserId} WHERE   id=#{id} AND  is_deleted=0
    </update>

    <select id="getByName" resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        WHERE role_name=#{name} AND tenant_id=#{tenantId} AND project_id=#{projectId} AND is_deleted=0 limit 1
    </select>

    <select id="getByProjectIdAndRoleValue" resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        WHERE project_id=#{projectId} AND role_value=#{roleValue} and is_deleted=0 limit 1
    </select>

    <select id="getByProjectIdAndRoleValues" resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        WHERE project_id=#{projectId} and is_deleted=0
        <if test="roleValues != null and roleValues.size() > 0">
            And role_value in
            <foreach collection="roleValues" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="listByTenantIdAndProjectIdAndRoleName" parameterType="com.dtstack.dtcenter.common.pager.PageQuery"
            resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        <include refid="select_where_fragment"/>
        order by Field (role_value, 8,1,9,2,3,6,5,4,7) limit #{start} , #{pageSize}
    </select>

    <insert id="insert" parameterType="com.dtstack.batch.domain.Role" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_role
        (tenant_id,project_id,role_name,role_type,role_value,role_desc,create_user_id,modify_user_id)
        VALUES
        (#{tenantId},#{projectId},#{roleName},#{roleType},#{roleValue},#{roleDesc},#{createUserId},#{createUserId})
    </insert>

    <update id="update">
        UPDATE rdos_role
        <include refid="update_fragment"/>
        WHERE id=#{id}
    </update>

    <select id="countByProjectIdAndTenantIdAndRoleName" resultType="java.lang.Integer">
        SELECT count(1)
        FROM rdos_role
        WHERE project_id=#{projectId} AND tenant_id=#{tenantId}
        <if test="roleName != null">
            AND role_name LIKE CONCAT('%',#{roleName},'%')
        </if>
        limit 1
    </select>

    <select id="getDefaultTenantOwner" resultType="java.lang.Long">
        select
        id
        from  rdos_role
        where tenant_id = #{tenantId} and role_value = 1 and is_deleted = 0
        limit 1
    </select>

    <select id="listByTenantIdAndRoleValue" resultType="com.dtstack.batch.domain.Role">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_role
        WHERE is_deleted=0
        AND tenant_id = #{tenantId}
        <if test="roleValues != null and roleValues.size() > 0">
            AND role_value in
            <foreach collection="roleValues" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="deleteByProjectId" parameterType="java.lang.Long">
        UPDATE rdos_role
        SET is_deleted = 1, gmt_modified = now(), modify_user_id = #{userId}
        WHERE project_id = #{projectId} AND is_deleted = 0;
    </update>
</mapper>