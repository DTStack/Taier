<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.batch.dao.BatchTaskRecordDao">

    <sql id="select_content_fragment">
      id,tenant_id,project_id,record_type,task_id,operator_id,operate_time,gmt_create,gmt_modified,is_deleted
    </sql>

    <sql id="select_where_fragment">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND id = #{model.id}
            </if>
            <if test="model.tenantId != null">
                AND tenant_id = #{model.tenantId}
            </if>
            <if test="model.projectId != null">
                AND project_id = #{model.projectId}
            </if>
            <if test="model.recordType != null">
                AND record_type = #{model.recordType}
            </if>
            <if test="model.taskId != null">
                AND task_id = #{model.taskId}
            </if>
            <if test="model.operatorId != null">
                AND operator_id = #{model.operatorId}
            </if>
            <if test="model.operateTime != null">
                AND operate_time = #{model.operateTime}
            </if>
            <if test="model.gmtCreate != null">
                AND gmt_create = #{model.gmtCreate}
            </if>
            <if test="model.gmtModified != null">
                AND gmt_modified = #{model.gmtModified}
            </if>
            <if test="model.isDeleted != null">
                AND is_deleted = #{model.isDeleted}
            </if>
        </trim>
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="tenantId != null">
                AND tenant_id = #{tenantId}
            </if>
            <if test="projectId != null">
                AND project_id = #{projectId}
            </if>
            <if test="recordType != null">
                AND record_type = #{recordType}
            </if>
            <if test="taskId != null">
                AND task_id = #{taskId}
            </if>
            <if test="operatorId != null">
                AND operator_id = #{operatorId}
            </if>
            <if test="operateTime != null">
                AND operate_time = #{operateTime}
            </if>
            <if test="gmtCreate != null">
                AND gmt_create = #{gmtCreate}
            </if>
            <if test="gmtModified != null">
                AND gmt_modified = #{gmtModified}
            </if>
            <if test="isDeleted != null">
                AND is_deleted = #{isDeleted}
            </if>
        </set>
    </sql>

    <select id="getOne" resultType="BatchTaskRecord">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_record
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <select id="generalQuery" parameterType="com.dtstack.batch.web.pager.PageQuery" resultType="BatchTaskRecord">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_record
        <include refid="select_where_fragment"/>
        <if test="orderBy != null and sort != null">
            order by ${orderBy} ${sort}
        </if>
        <if test="orderBy != null and sort == null">
            order by ${orderBy} desc
        </if>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </select>

    <select id="generalCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM rdos_batch_task_record
        <include refid="select_where_fragment"/>
        limit 1
    </select>

    <delete id="deleteById">
        UPDATE rdos_batch_task_record SET is_deleted = 1, gmt_modified = now(), operator_id = #{operatorId}
        WHERE task_id = #{taskId} AND is_deleted = 0 AND project_id = #{projectId}
    </delete>

    <select id="listByProjectId" resultType="BatchTaskRecord">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_record
        WHERE project_id = #{projectId} and is_deleted = 0
    </select>

    <select id="listByIds" resultType="BatchTaskRecord">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_record
        WHERE 1=1
        <if test="ids != null and ids.size() > 0">
            AND id IN
            <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>

    </select>

    <insert id="insert" parameterType="BatchTaskRecord" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_batch_task_record
          (tenant_id,project_id,record_type,task_id,operator_id,operate_time,gmt_create,gmt_modified,is_deleted)
        VALUES
          (#{tenantId},#{projectId},#{recordType},#{taskId},#{operatorId},#{operateTime},now(),now(),#{isDeleted})
    </insert>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO rdos_batch_task_record
          (
          tenant_id,project_id,record_type,
          task_id,operator_id,operate_time,
          gmt_create,gmt_modified,is_deleted
          )
        VALUES 
          <foreach collection="records" item="batchTaskRecord" index="index" separator=",">
              (
              #{batchTaskRecord.tenantId},#{batchTaskRecord.projectId},#{batchTaskRecord.recordType},
              #{batchTaskRecord.taskId},#{batchTaskRecord.operatorId},#{batchTaskRecord.operateTime},
              now(),now(),#{batchTaskRecord.isDeleted}
              )
          </foreach>
    </insert>

    <update id="deleteByProjectId" parameterType="java.lang.Long">
        UPDATE rdos_batch_task_record
        SET is_deleted = 1, gmt_modified = now()
        WHERE project_id = #{projectId} AND is_deleted = 0;
    </update>

</mapper>
