<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.batch.dao.BatchTaskResourceDao">

    <sql id="select_content_fragment">
      id,task_id,resource_id,resource_type,project_id,tenant_id,gmt_create,gmt_modified,is_deleted
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="taskId != null">
                task_id = #{taskId},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType},
            </if>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
    </sql>

    <select id="listByTaskId" resultType="BatchTaskResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_resource
        WHERE task_id = #{taskId}

        <if test="resourceType != null">
            and resource_type = #{resourceType}
        </if>

        and project_id = #{projectId} and is_deleted = 0
    </select>

    <select id="getByTaskIdAndResourceId" resultType="BatchTaskResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_resource
        WHERE task_id = #{taskId} and project_id = #{projectId} and resource_id = #{resourceId} and resource_type = #{resourceType}
        and is_deleted = 0 limit 1
    </select>

    <delete id="deleteByTaskId">
        DELETE FROM rdos_batch_task_resource
        WHERE task_id = #{taskId}
        and project_id = #{projectId}
        and is_deleted = 0
        <if test="resourceType != null">
            and resource_type = #{resourceType}
        </if>
    </delete>

    <update id="logicDeleteByTaskId">
        UPDATE
        rdos_batch_task_resource
        SET is_deleted = 1 WHERE
        task_id = #{taskId}
        and project_id = #{projectId}
        and is_deleted = 0
        <if test="resourceType != null">
            and resource_type = #{resourceType}
        </if>
    </update>

    <select id="listByResourceId" resultType="BatchTaskResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_resource
        WHERE resource_id = #{resourceId} and is_deleted = 0
    </select>

    <insert id="insert" parameterType="BatchTaskResource" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_batch_task_resource
          (task_id,resource_id,resource_type,project_id,tenant_id,gmt_create,gmt_modified,is_deleted)
        VALUES
          (#{taskId},#{resourceId},#{resourceType},#{projectId},#{tenantId},now(),now(),0)
    </insert>

    <update id="update" parameterType="BatchTaskResource">
        UPDATE
        rdos_batch_task_resource
        <include refid="update_fragment"/>
        WHERE
        id = #{id} AND is_deleted = 0
    </update>

    <update id="deleteByTenantId" parameterType="java.lang.Long">
        UPDATE rdos_batch_task_resource
        SET is_deleted = 1, gmt_modified = now()
        WHERE tenant_id = #{tenantId} AND is_deleted = 0;
    </update>

</mapper>
