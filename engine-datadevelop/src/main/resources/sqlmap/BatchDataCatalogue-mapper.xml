<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.batch.dao.BatchDataCatalogueDao">

    <sql id="select_content_fragment">
      id,tenant_id,node_name,node_pid,order_val,path,level,gmt_create,gmt_modified,create_user_id,is_deleted
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="nodeName != null">
                node_name = #{nodeName},
            </if>
            <if test="nodePid != null">
                node_pid = #{nodePid},
            </if>
            <if test="orderVal != null">
                order_val = #{orderVal},
            </if>
            <if test="path != null">
                path = #{path},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
    </sql>

    <select id="getOne" resultType="BatchDataCatalogue">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_hive_catalogue
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <insert id="insert" parameterType="BatchDataCatalogue" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_hive_catalogue
          (tenant_id,node_name,node_pid,order_val,path,level,create_user_id)
        VALUES
          (#{tenantId},#{nodeName},#{nodePid},#{orderVal},#{path},#{level},#{createUserId})
    </insert>

    <update id="update" parameterType="BatchDataCatalogue">
        UPDATE
        rdos_hive_catalogue
        <include refid="update_fragment"/>
        WHERE
        id = #{id} AND is_deleted = 0
    </update>

    <delete id="deleteById">
        UPDATE rdos_hive_catalogue SET is_deleted = 1, gmt_modified = #{gmtModified}
        WHERE id = #{id}
        AND is_deleted = 0
    </delete>

    <select id="listByTenantIdAndPId" resultType="BatchDataCatalogue">
        select
        <include refid="select_content_fragment"/>
        from rdos_hive_catalogue
        where tenant_id = #{tenantId} and node_pid = #{nodePid} AND is_deleted = 0
    </select>

    <select id="listByTenantId" resultType="BatchDataCatalogue">
        select
        <include refid="select_content_fragment"/>
        from rdos_hive_catalogue where tenant_id = #{tenantId} AND is_deleted = 0
    </select>

    <select id="countByNodePid" resultType="java.lang.Integer">
        SELECT  count(1) from rdos_hive_catalogue
        where node_pid = #{nodePid} AND is_deleted = 0
    </select>

    <select id="getByNodeNameAndNodePid" resultType="BatchDataCatalogue">
        select
        <include refid="select_content_fragment"/>
        from rdos_hive_catalogue
        where tenant_id = #{tenantId}
        and node_pid = #{nodePid}
        and node_name = #{nodeName}
        and is_deleted = 0
        limit 1
    </select>

    <select id="listByIds" resultType="BatchDataCatalogue">
        select
        <include refid="select_content_fragment"/>
        from rdos_hive_catalogue
        where tenant_id = #{tenantId} and is_deleted = 0
        and id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getRootIdByTenantId" resultType="java.lang.Long">
        select id from rdos_hive_catalogue
         where tenant_id = #{tenantId} and node_pid = 0 AND is_deleted = 0 limit 1
    </select>

    <select id="getRootByTenantId" resultType="BatchDataCatalogue">
        select
        <include refid="select_content_fragment"/>
        from rdos_hive_catalogue
        where tenant_id = #{tenantId} and node_pid = 0 AND is_deleted = 0 limit 1
    </select>
</mapper>
