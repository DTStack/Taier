<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dtstack.batch.dao.RolePermissionDao">

    <sql id="select_content_fragment">
        id,role_id,permission_id,gmt_create,gmt_modified,is_deleted,create_user_id,modify_user_id,tenant_id,project_id
    </sql>

    <select id="listByRoleId" resultType="com.dtstack.batch.domain.RolePermission">
        select
        <include refid="select_content_fragment"/>
        from rdos_role_permission
        where role_id = #{roleId} and is_deleted=0
    </select>

    <select id="listPermissionIdsByRoleId" resultType="java.lang.Long">
        select  permission_id from rdos_role_permission
        where role_id = #{roleId} AND is_deleted=0
    </select>

    <update id="deleteByRoleIdAndPermissionIds">
        update rdos_role_permission set is_deleted = 1, gmt_modified=now(), modify_user_id=#{modifyUserId}
        where role_id = #{roleId} and permission_id in
        <foreach item="permissionId" index="index" collection="permissionIds" separator="," open="(" close=")">
            #{permissionId}
        </foreach>
        and is_deleted = 0
    </update>

    <insert id="insert" parameterType="com.dtstack.batch.domain.RolePermission" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_role_permission
        (role_id,permission_id,tenant_id,project_id,create_user_id,modify_user_id)
        VALUES
        (#{roleId},#{permissionId}, #{tenantId}, #{projectId}, #{createUserId}, #{createUserId})
    </insert>
</mapper>