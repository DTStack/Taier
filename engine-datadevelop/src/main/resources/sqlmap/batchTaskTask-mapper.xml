<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.batch.dao.BatchTaskTaskDao">

    <sql id="select_content_fragment">
      id,task_id,parent_task_id,project_id,tenant_id,parent_apptype,gmt_create,gmt_modified,is_deleted
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="taskId != null">
                task_id = #{taskId},
            </if>
            <if test="parentTaskId != null">
                parent_task_id = #{parentTaskId},
            </if>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="gmtCreate != null">
                gmt_create = now(),
            </if>
            <if test="gmtModified != null">
                gmt_modified = now(),
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
    </sql>

    <select id="listByTaskId" resultType="BatchTaskTask">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_task
        WHERE task_id = #{taskId} and is_deleted = 0 order by gmt_modified
    </select>

    <select id="listByParentTaskId" resultType="BatchTaskTask">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_task
        WHERE parent_task_id = #{parentTaskId} and is_deleted = 0
    </select>

    <delete id="deleteByTaskId">
        DELETE FROM rdos_batch_task_task
        WHERE task_id = #{taskId}
    </delete>

    <delete id="deleteByParentId">
        DELETE FROM rdos_batch_task_task
        WHERE parent_task_id = #{parentId} and parent_apptype = #{parentAppType}
    </delete>

    <delete id="delete">
        DELETE FROM rdos_batch_task_task
        WHERE id = #{id}
    </delete>

    <insert id="insert" parameterType="BatchTaskTask" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_batch_task_task
          (task_id,parent_task_id,project_id,tenant_id,parent_apptype,gmt_create,gmt_modified,is_deleted)
        VALUES
          (#{taskId},#{parentTaskId},#{projectId},#{tenantId},#{parentAppType},now(),now(),0)
    </insert>

    <update id="update" parameterType="BatchTaskTask">
        UPDATE
        rdos_batch_task_task
        <include refid="update_fragment"/>
        WHERE
        id = #{id} AND is_deleted = 0
    </update>

    <update id="deleteByTenantId">
        UPDATE rdos_batch_task_task
        SET is_deleted = 1, gmt_modified = now()
        WHERE tenant_id = #{tenantId} AND parent_apptype = #{parentAppType} AND is_deleted = 0
    </update>

    <select id="listTaskTaskByTaskIds" resultType="BatchTaskTask">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_task_task
        WHERE task_id in
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
        and is_deleted = 0
    </select>
</mapper>
