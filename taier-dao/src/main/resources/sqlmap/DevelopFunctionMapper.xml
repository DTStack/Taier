<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.taier.dao.mapper.DevelopFunctionMapper">

    <sql id="select_content_fragment">
        id,name,class_name,purpose,command_formate,param_desc,node_pid,tenant_id,create_user_id,modify_user_id,udf_type,type,gmt_create,gmt_modified,is_deleted,task_type,sql_text
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="className != null">
                class_name = #{className},
            </if>
            <if test="purpose != null">
                purpose = #{purpose},
            </if>
            <if test="commandFormate != null">
                command_formate = #{commandFormate},
            </if>
            <if test="paramDesc != null">
                param_desc = #{paramDesc},
            </if>
            <if test="nodePid != null">
                node_pid = #{nodePid},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="taskType !=null">
                task_type = #{taskType},
            </if>
            <if test="udfType !=null">
                udf_type = #{udfType},
            </if>
            <if test="sqlText !=null">
                sql_text = #{sqlText},
            </if>
            gmt_modified = now()
        </set>
    </sql>


    <select id="listByNodePidAndTenantId" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        WHERE tenant_id = #{tenantId} and node_pid = #{nodePid} and is_deleted = 0
    </select>

    <select id="listSystemFunction" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        WHERE type=1 and is_deleted = 0 and tenant_id=-1
        <if test="taskType !=null">
           AND  task_type = #{taskType}
        </if>
    </select>

    <select id="listTenantFunction" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        WHERE is_deleted = 0
        <if test="functionType != null">
            AND `type` = #{functionType}
        </if>
        <if test="tenantId != null">
            AND tenant_Id = #{tenantId}
        </if>
        <if test="taskType !=null">
            AND task_type = #{taskType}
        </if>
    </select>


    <select id="listTenantByFunction" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        WHERE is_deleted = 0 and tenant_id = #{tenantId}
        <if test="taskType !=null">
            AND task_type = #{taskType}
        </if>

    </select>

    <select id="listByNameAndTenantId" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        WHERE name = #{name} and tenant_id = #{tenantId}  and is_deleted = 0
    </select>

    <select id="getByNameAndTenantId" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        WHERE name = #{name} and tenant_id = #{tenantId} and is_deleted = 0 limit 1
    </select>

    <select id="listNameByTenantId" resultType="java.lang.String">
        SELECT name
        FROM develop_function
        WHERE tenant_id = #{tenantId}
          and is_deleted = 0
        <if test="taskType !=null">
            AND  task_type = #{taskType}
        </if>
    </select>

    <select id="generalQuery" parameterType="com.dtstack.taier.dao.pager.PageQuery" resultType="com.dtstack.taier.dao.domain.DevelopFunction">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_function
        where tenant_id = #{model.tenantId}
        and type = #{model.type} and is_deleted = 0
        <if test="model.functionModifyUserId != null">
            and modify_user_id = #{model.functionModifyUserId}
        </if>
        <if test="model.functionName != null">
            and name like CONCAT('%',#{model.functionName},'%')
        </if>
        <if test="model.startTime != null">
            and to_days(gmt_modified) >= to_days(#{model.startTime})
        </if>
        <if test="model.endTime != null">
            and to_days(#{model.endTime}) >= to_days(gmt_modified)
        </if>

        <if test="orderBy != null and sort != null">
            order by ${orderBy} ${sort}
        </if>
        <if test="orderBy != null and sort == null">
            order by ${orderBy} desc
        </if>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </select>

    <select id="generalCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM develop_function
        where tenant_id = #{model.tenantId}
        and type = #{model.type} and is_deleted = 0
        <if test="model.functionModifyUserId != null">
            and modify_user_id = #{model.functionModifyUserId}
        </if>
        <if test="model.functionName != null">
            and name like CONCAT('%',#{model.functionName},'%')
        </if>
        <if test="model.startTime != null">
            and to_days(gmt_modified) >= to_days(#{model.startTime})
        </if>
        <if test="model.endTime != null">
            and to_days(#{model.endTime}) >= to_days(gmt_modified)
        </if>
    </select>


</mapper>
