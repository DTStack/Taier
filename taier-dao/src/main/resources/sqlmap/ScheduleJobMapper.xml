<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.taier.dao.mapper.ScheduleJobMapper">

    <sql id="select_content_fragment">
        bj.id,bj.tenant_id,bj.job_id,bj.job_key,bj.job_name,bj.task_id,bj.gmt_create,bj.gmt_modified,bj.create_user_id,bj.is_deleted,bj.type,bj.is_restart,
        bj.cyc_time,dependency_type,flow_job_id,bj.period_type,bj.status,bj.task_type,bj.fill_id,bj.exec_start_time,bj.exec_end_time,bj.exec_time,bj.submit_time,bj.retry_num,max_retry_num,
        bj.node_address,bj.version_id,bj.next_cyc_time,bj.compute_type,bj.submit_user_name,bj.engine_job_id,bj.fill_type
    </sql>

    <sql id="select_filed_all">
        `id`,`tenant_id`,`job_id`,`job_key`,`job_name`,`task_id`,`gmt_create`,`gmt_modified`,`create_user_id`,`is_deleted`,`type`,`is_restart`,`cyc_time`
            ,`dependency_type`,`flow_job_id`,`period_type`,`status`,`task_type`,`fill_id`,`exec_start_time`,`exec_end_time`,`exec_time`,`submit_time`,`max_retry_num`,`retry_num`,`node_address`,`version_id`
            ,`next_cyc_time`,`engine_job_id`,`application_id`,`compute_type`,`phase_status`,`submit_user_name`,`fill_type`
    </sql>

    <select id="getByTaskIdAndStatusOrderByIdLimit" resultType="com.dtstack.taier.dao.domain.ScheduleJob">
        SELECT
        *
        FROM schedule_job job
        WHERE job.task_id = #{taskId} and  #{time} > STR_TO_DATE(job.cyc_time,"%Y%m%d%H%i%s")
        and job.status = #{status}
        and job.is_deleted = 0
        <if test="type !=null">
            and job.type = #{type}
        </if>
        order by job.cyc_time desc limit 1
    </select>

    <select id="countTasksByCycTimeTypeAndAddress" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM schedule_job
        WHERE node_address = #{nodeAddress}
        AND type = #{scheduleType}
        AND task_type != 10
        <if test="cycStartTime != null">
            AND cyc_time &gt;= #{cycStartTime}
        </if>
        <if test="cycEndTime != null">
            AND cyc_time &lt; #{cycEndTime}
        </if>
        AND (status = 0 or (status = 10 and task_type in (10, 14)))
        AND is_deleted = 0
    </select>

    <select id="getRdosJobByJobIds" resultType="com.dtstack.taier.dao.domain.ScheduleJob">
        select id,job_id, engine_job_id,application_id,status,exec_start_time,exec_end_time,exec_time,retry_num,gmt_create,gmt_modified,is_deleted,compute_type,cyc_time,tenant_id
        from schedule_job
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0;
    </select>

    <select id="getByName" parameterType="java.lang.String" resultType="com.dtstack.taier.dao.domain.ScheduleJob">
        select <include refid="select_filed_all"/> from schedule_job where job_name = #{jobName} and is_deleted=0 LIMIT 1;
    </select>

    <update id="updateJobStatusByJobIds">
        update schedule_job
        set gmt_modified=now(), status=#{status}
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0;
    </update>

    <select id="countByFillIdGetAllStatus" resultType="com.dtstack.taier.dao.domain.po.CountFillDataJobStatusPO">
        SELECT
        status*1 AS status,
        count(status) AS count,
        fill_id AS fillId
        FROM
        schedule_job
        WHERE
        is_deleted = 0
        AND task_type != 10
        AND type = 1
        AND fill_type IN (0,1)
        AND fill_id in
        <foreach collection="fillIdList" index="index" item="fillId" open="(" close=")" separator=",">
            #{fillId}
        </foreach>
        GROUP BY fill_id,status
    </select>

    <select id="queryJobsStatusStatistics" resultType="com.dtstack.taier.dao.domain.po.StatusCountPO">
        SELECT
        status,
        COUNT(1) as count
        FROM schedule_job
        WHERE
        tenant_id = #{statistics.tenantId}
        <if test="statistics.userId!=null">
            AND `create_user_id` = #{statistics.userId}
        </if>
        <if test="statistics.cycStartTime!=null and statistics.cycStartTime!='' and statistics.cycEndTime!='' and statistics.cycEndTime!=null">
            AND `cyc_time` &gt;= #{statistics.cycStartTime} AND `cyc_time` &lt;= #{statistics.cycEndTime}
        </if>
        <if test="statistics.taskIdList!=null and statistics.taskIdList.size!=0">
            AND task_id IN
            <foreach collection="statistics.taskIdList" open="(" close=")" item="taskId" separator=",">
                #{taskId}
            </foreach>
        </if>
        <if test="statistics.taskTypeList!=null and statistics.taskTypeList.size!=0">
            AND `task_type` IN
            <foreach collection="statistics.taskTypeList" open="(" close=")" item="taskType" separator=",">
                #{taskType}
            </foreach>
        </if>
        <if test="statistics.jobStatusList!=null and statistics.jobStatusList.size!=0">
            AND `status` IN
            <foreach collection="statistics.jobStatusList" open="(" close=")" item="status" separator=",">
                #{status}
            </foreach>
        </if>
        <if test="statistics.taskPeriodTypeList!=null and statistics.taskPeriodTypeList.size!=0">
            AND `period_type` IN
            <foreach collection="statistics.taskPeriodTypeList" open="(" close=")" item="periodType" separator=",">
                #{periodType}
            </foreach>
        </if>
        <if test="statistics.fillTypeList!=null and statistics.fillTypeList.size!=0">
            AND `fill_type` IN
            <foreach collection="statistics.fillTypeList" open="(" close=")" item="fillType" separator=",">
                #{fillType}
            </foreach>
        </if>
        <if test="statistics.type!=null" >
            AND `type` = #{statistics.type}
        </if>
        <if test="statistics.fillId!=null">
            AND `fill_id` = #{statistics.fillId}
        </if>
        GROUP BY status
    </select>

    <select id="listCycleJob" resultType="com.dtstack.taier.dao.domain.ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        ,bj.job_execute_order
        FROM schedule_job bj
        WHERE
        node_address = #{nodeAddress}
        <if test="isEq">
            AND job_execute_order >= #{startId}
        </if>
        <if test="!isEq">
            AND job_execute_order > #{startId}
        </if>
        <if test="type != null">
            AND type = #{type}
        </if>
        AND (status = 0 or ((status = 10 or status=4) and task_type in (10)))
        AND is_deleted = 0
        AND `phase_status` = #{jobPhaseStatus}
        order by job_execute_order asc limit 500
    </select>

    <select id="listSimpleJobByStatusAddress" resultType="com.dtstack.taier.dao.domain.ScheduleJob">
        SELECT id, job_id, type, phase_status
        FROM schedule_job
        WHERE id > #{startId} AND (node_address = #{nodeAddress} or node_address is null)
        <if test="statuses != null">
            AND status IN
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        AND is_deleted = 0
        order by id asc limit 500
    </select>

    <select id="listJobByStatusAddressAndPhaseStatus"
            resultType="com.dtstack.taier.dao.domain.po.SimpleScheduleJobPO">
        SELECT id, job_id, type, phase_status
        FROM schedule_job
        WHERE id > #{startId} AND (node_address = #{nodeAddress} or node_address is null)
        <if test="statuses != null">
            AND status IN
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        AND is_deleted = 0
        AND `phase_status` = #{phaseStatus}
        order by id asc limit 500
    </select>

    <select id="listAfterOrBeforeJobs" resultType="com.dtstack.taier.dao.domain.ScheduleJob">
        SELECT
        `job_id`,`cyc_time`,`status`
        FROM `schedule_job`
        WHERE `task_id` = #{taskId}
        AND type = #{type}
        <choose>
            <when test="isAfter">
                AND `cyc_time` > #{cycTime}
            </when>
            <otherwise>
                <![CDATA[ AND `cyc_time` < ]]> #{cycTime}
            </otherwise>
        </choose>
    </select>

    <update id="updatePhaseStatusById">
        update `schedule_job`
        set `phase_status`=#{update}
        where `id` = #{id}
        and `phase_status` = #{original}
        and `is_deleted`=0;
    </update>

    <update id="updateJobStatusAndExecTime">
        update schedule_job
        set gmt_modified=now()
          , exec_end_time=now()
          , status=#{status}
          , exec_time=timestampdiff(SECOND, exec_start_time, now())
          , exec_start_time = (case when exec_start_time is null then now() else exec_start_time end)
        where job_id = #{jobId};
    </update>

</mapper>
