<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.taier.dao.mapper.DevelopResourceMapper">

    <sql id="select_content_fragment">
      id,tenant_id,node_pid,url,resource_type,resource_name,origin_file_name,resource_desc,gmt_create,gmt_modified,create_user_id,modify_user_id,is_deleted,node_id,compute_type
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="nodePid != null">
                node_pid = #{nodePid},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType},
            </if>
            <if test="resourceName != null">
                resource_name = #{resourceName},
            </if>
            <if test="originFileName != null">
                origin_file_name = #{originFileName},
            </if>
            <if test="resourceDesc != null">
                resource_desc = #{resourceDesc},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            gmt_modified = now()
        </set>
    </sql>

    <select id="getOne" resultType="com.dtstack.taier.dao.domain.DevelopResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_resource
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <select id="getResourceURLByFunctionId" resultType="java.lang.String">
        SELECT br.url
        FROM develop_function_resource bfr
        INNER JOIN develop_resource br ON bfr.resource_id = br.id
        WHERE bfr.function_id = #{functionId} AND br.is_deleted = 0
        limit 1
    </select>


    <select id="listByIds" resultType="com.dtstack.taier.dao.domain.DevelopResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_resource
        WHERE is_deleted = 0 and id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="listByPidAndTenantId" resultType="com.dtstack.taier.dao.domain.DevelopResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_resource
        WHERE tenant_id = #{tenantId} and node_pid = #{nodePid} AND is_deleted = 0
    </select>

    <select id="listByTenantId" resultType="com.dtstack.taier.dao.domain.DevelopResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_resource
        WHERE tenant_id = #{tenantId} AND is_deleted = 0
    </select>

    <update id="deleteById">
        UPDATE develop_resource
        SET is_deleted = 1,gmt_modified = NOW()
        WHERE id = #{id}
    </update>

    <select id="listByNameAndTenantId" resultType="com.dtstack.taier.dao.domain.DevelopResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_resource
        WHERE tenant_id = #{tenantId} and resource_name = #{resourceName} AND is_deleted = 0
    </select>

    <insert id="insert" parameterType="com.dtstack.taier.dao.domain.DevelopResource" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO develop_resource
          (tenant_id,node_pid,url,resource_type,resource_name,origin_file_name,resource_desc,gmt_create,gmt_modified,create_user_id,modify_user_id,is_deleted,compute_type)
        VALUES
          (#{tenantId},#{nodePid},#{url},#{resourceType},#{resourceName},#{originFileName},#{resourceDesc}, now(), now(),#{createUserId},#{modifyUserId}, 0, #{computeType})
    </insert>

    <update id="update" parameterType="com.dtstack.taier.dao.domain.DevelopResource">
        UPDATE
        develop_resource
        <include refid="update_fragment"/>
        WHERE
        id = #{id} AND is_deleted = 0
    </update>

    <select id="generalQuery" parameterType="com.dtstack.taier.dao.pager.PageQuery" resultType="com.dtstack.taier.dao.domain.DevelopResource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM develop_resource
        where tenant_id = #{model.tenantId} and is_deleted = 0
        <if test="model.resourceModifyUserId != null">
            and modify_user_id = #{model.resourceModifyUserId}
        </if>
        <if test="model.resourceName != null">
            and resource_name like CONCAT('%',#{model.resourceName},'%')
        </if>
        <if test="model.startTime != null">
            and to_days(gmt_modified) >= to_days(#{model.startTime})
        </if>
        <if test="model.endTime != null">
            and to_days(#{model.endTime}) >= to_days(gmt_modified)
        </if>

        <if test="orderBy != null and sort != null">
            order by ${orderBy} ${sort}
        </if>
        <if test="orderBy != null and sort == null">
            order by ${orderBy} desc
        </if>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </select>

    <select id="generalCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM develop_resource
        where tenant_id = #{model.tenantId} and is_deleted = 0
        <if test="model.resourceModifyUserId != null">
            and modify_user_id = #{model.resourceModifyUserId}
        </if>
        <if test="model.resourceName != null">
            and resource_name like CONCAT('%',#{model.resourceName},'%')
        </if>
        <if test="model.startTime != null">
            and to_days(gmt_modified) >= to_days(#{model.startTime})
        </if>
        <if test="model.endTime != null">
            and to_days(#{model.endTime}) >= to_days(gmt_modified)
        </if>
    </select>

</mapper>
