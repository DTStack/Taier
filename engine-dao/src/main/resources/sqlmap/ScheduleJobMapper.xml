<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.mapper.ScheduleJobMapper">

    <select id="countByFillIdGetAllStatus" resultType="java.util.Map">
        SELECT
            status*1 AS status,
            count(bj.status) AS count,
            fill_id AS fillId
        FROM
            schedule_job
        WHERE
            is_deleted = 0
            AND task_type != 10
            AND type = 1
            AND fill_type IN (0,1)
            AND fill_id in
            <foreach collection="fillIdList" index="index" item="fillId" open="(" close=")" separator=",">
                #{fillId}
            </foreach>
        GROUP BY fill_id,status
    </select>

    <select id="getByTaskIdAndStatusOrderByIdLimit" resultType="ScheduleJob">
        SELECT
        *
        FROM schedule_job job
        WHERE job.task_id = #{taskId} and  #{time} > STR_TO_DATE(job.cyc_time,"%Y%m%d%H%i%s")
        and job.status = #{status}
        and job.is_deleted = 0
        <if test="type !=null">
            and job.type = #{type}
        </if>
        order by job.cyc_time desc limit 1
    </select>

    <select id="listJobByStatusAddressAndPhaseStatus"
            resultType="com.dtstack.engine.domain.po.SimpleScheduleJobPO">
        SELECT id, job_id, type, phase_status
        FROM schedule_job
        WHERE id > #{startId} AND (node_address = #{nodeAddress} or node_address is null)
        <if test="statuses != null">
            AND status IN
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        AND is_deleted = 0
        AND `phase_status` = #{phaseStatus}
        order by id asc limit 500
    </select>

    <update id="updateJobStatusAndExecTime">
        update schedule_job set gmt_modified=now(), exec_end_time=now(), status=#{status}, exec_time=timestampdiff(SECOND, exec_start_time, now()) where job_id=#{jobId};
    </update>

</mapper>
