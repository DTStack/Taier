{
    "code": 1,
    "message": null,
    "data": {
        "batchTask": {
            "id": 804,
            "gmtCreate": 1535614204000,
            "gmtModified": 1537155710000,
            "isDeleted": 0,
            "tenantId": 129,
            "projectId": 77,
            "name": "job_dwd_ord_trd_d",
            "taskType": 0,
            "computeType": 1,
            "engineType": 1,
            "sqlText": "CREATE TABLE if NOT EXISTS dwd_ord_trd_d (\norderId             STRING          COMMENT '订单ID'\n,tenantId           STRING          COMMENT '租户ID'\n,shopId             STRING          COMMENT '门店ID'\n,customerId         STRING          COMMENT '顾客ID'\n,memberId           STRING          COMMENT '会员ID'\n,orderTime\t        STRING\t        COMMENT '下单时间'\n,paymentTime\t      STRING\t        COMMENT '结账时间'\n,deliverType\t      BIGINT\t        COMMENT '就餐类型(1:内用;2:外送;3:自提;4:外带;)'\n,sourceChild\t      BIGINT\t        COMMENT '订单子来源(1:ANDROID收银终端;2:IPAD自助终端;3:IPAD收银终端;31:微信官微;32:微信商微;33:微信快捷支付;41:百度外卖;51:百度直达号;61:百度糯米点菜;71:百度地图;81:呼叫中心;91:必胜客自助;92:味千;111:商户官网;131:loyal;141:OnMobile客如云;142:OnMobile os;151:熟客;161:饿了吗;171:点评正餐;181:美团外卖;191:安卓自助;)'\n,tradeNo            STRING          COMMENT '订单编号，门店下唯一'\n,tradePayStatus\t    BIGINT\t        COMMENT '支付状态(1:未支付;2:支付中;3:已支付;4:退款中;5:已退款;6:退款失败;7:预支付;8:等待退款;9:支付失败;)'\n,tradeType          STRING          COMMENT '交易类型 1:SELL:售货 2:REFUND:退货 3:SPLIT:拆单 4:反结账(已收款退货时新生成的订单) 5:反结账退货(已收款退货时新生成的反向订单,金额是销货单的负数)'\n,tradeStatus\t      BIGINT\t        COMMENT '订单状态(1:未处理;2:挂单;3:已确认;4:已完成(全部支付);5:已退货;6:已作废;7:已拒绝;8:已取消;10:已反结账;)'\n-- ,payModelId\t      BIGINT\t        COMMENT '支付方式: -1:会员卡余额,-2:优惠券,-3:现金,-4:银行卡,-5:微信支付,-6:支付宝,-7:百度钱包,-8:百度直达号,-9:积分抵现,-10:百度地图,-11:银联刷卡,-12:百糯到店付,13:百度外卖,-14:饿了么,-15:实体卡支付,-16:大众点评,-17:美团外卖,-18:点评团购券,-19:点评闪惠,-20:临时卡余额,-21:糯米点菜,-22:第三方C端,-23:美团闪惠,-24:美团团购卷,-25:钱包生活,-26:百度糯米团购券,-27:乐富支付'\n-- ,paySource\t        BIGINT\t        COMMENT '支付来源，1：Cashier 2：Kiosk 3：百度外卖 4：百度糯米 5： 百度地图 6： Loyal（短信储值） 7：OnMobile 8：快捷支付 9：熟客 10：portal 11:饿了么 12:大众点评 13：loyal后台 14：美团外卖 15:微信'\n,thirdServiceCharge\tDOUBLE \t        COMMENT '服务费'\n,thirdSubsidies\t    DOUBLE       \t  COMMENT '补贴'\n,shopActualAmount   DOUBLE          COMMENT '商户实收金额'\n,tradeAmount        DOUBLE          COMMENT '订单原始金额'\n,custActualPay      DOUBLE          COMMENT '顾客实付金额'\n,custShouldPay\t    DOUBLE\t        COMMENT '顾客应付金额'\n,dishTotalAmount\t  DOUBLE\t        COMMENT '商品总额'\n,extraAmount\t      DOUBLE\t        COMMENT '附加金额'\n,privilegeAmount\t  DOUBLE          COMMENT '优惠金额'\n,molinAmount\t      DOUBLE      \t  COMMENT '抹零金额'\n,overFlowAmt\t      DOUBLE\t        COMMENT '四舍五入'\n,tradeOverFlow\t    DOUBLE      \t  COMMENT '溢收金额'\n) COMMENT '日订单交易信息明细表'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 100;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE dwd_ord_trd_d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT DISTINCT\n  coalesce(t2.orderId, t1.orderid)                       AS orderid,\n  coalesce(t2.tenantId, t1.tenantId)                     AS tenantId,\n  coalesce(t2.shopId, t1.shopId)                         AS shopId,\n  coalesce(t2.customerId, t1.customerId)                 AS customerId,\n  coalesce(t2.memberId, t1.memberId)                     AS memberId,\n  coalesce(t2.orderTime, t1.orderTime)                   AS orderTime,\n  coalesce(t2.paymentTime, t1.paymentTime)               AS paymentTime,\n  coalesce(t2.deliverType, t1.deliverType)               AS deliverType,\n  coalesce(t2.sourceChild, t1.sourceChild)               AS sourceChild,\n  coalesce(t2.tradeNo, t1.tradeNo)                       AS tradeNo,\n  coalesce(t2.tradePayStatus, t1.tradePayStatus)         AS tradePayStatus,\n  coalesce(t2.tradeType, t1.tradeType)                   AS tradeType,\n  coalesce(t2.tradeStatus, t1.tradeStatus)               AS tradeStatus,\n  coalesce(t2.thirdServiceCharge, t1.thirdServiceCharge) AS thirdServiceCharge,\n  coalesce(t2.thirdSubsidies, t1.thirdSubsidies)         AS thirdSubsidies,\n  coalesce(t2.shopActualAmount, t1.shopActualAmount)     AS shopActualAmount,\n  coalesce(t2.tradeAmount, t1.tradeAmount)               AS tradeAmount,\n  coalesce(t2.custActualPay, t1.custActualPay)           AS custActualPay,\n  coalesce(t2.custShouldPay, t1.custShouldPay)           AS custShouldPay,\n  coalesce(t2.dishTotalAmount, t1.dishTotalAmount)       AS dishTotalAmount,\n  coalesce(t2.extraAmount, t1.extraAmount)               AS extraAmount,\n  coalesce(t2.privilegeAmount, t1.privilegeAmount)       AS privilegesTotal,\n  coalesce(t2.molinAmount, t1.molinAmount)               AS molinAmount,\n  coalesce(t2.overFlowAmt, t1.overFlowAmt)               AS overFlowAmt,\n  coalesce(t2.tradeOverFlow, t1.tradeOverFlow)           AS tradeOverFlow\nFROM\n  (SELECT\n     orderId,\n     tenantId,\n     shopId,\n     customerId,\n     memberId,\n     orderTime,\n     paymentTime,\n     deliverType,\n     sourceChild,\n     tradeNo,\n     tradePayStatus,\n     tradeType,\n     tradeStatus,\n     thirdServiceCharge,\n     thirdSubsidies,\n     shopActualAmount,\n     tradeAmount,\n     custActualPay,\n     custShouldPay,\n     dishTotalAmount,\n     extraAmount,\n     privilegeAmount,\n     molinAmount,\n     overFlowAmt,\n     tradeOverFlow\n   FROM dwd_ord_trd_d WHERE ds = '${key_2d}') t1 FULL OUTER JOIN\n  (SELECT\n     o.id                 AS orderId,\n     o.tenantId           AS tenantId,\n     shop.id              AS shopId,\n     oc.customerId        AS customerId,\n     oc.memberId          AS memberId,\n     o.orderTime          AS orderTime,\n     o.paymentTime        AS paymentTime,\n     o.deliverType        AS deliverType,\n     o.sourceChild        AS sourceChild,\n     o.tradeNo            AS tradeNo,\n     o.tradePayStatus     AS tradePayStatus,\n     o.tradeType          AS tradeType,\n     o.tradeStatus        AS tradeStatus,\n     o.thirdServiceCharge AS thirdServiceCharge,\n     o.thirdSubsidies     AS thirdSubsidies,\n     o.receivedAmount     AS shopActualAmount,\n     o.tradeAmount        AS tradeAmount,\n     o.custActualPay      AS custActualPay,\n     o.custShouldPay      AS custShouldPay,\n     o.dishTotalAmount    AS dishTotalAmount,\n     o.extrachargeTotal   AS extraAmount,\n     o.privilegesTotal    AS privilegeAmount,\n     o.molinAmount        AS molinAmount,\n     o.overFlowAmt        AS overFlowAmt,\n     o.tradeOverFlow      AS tradeOverFlow\n   FROM ods_nrs_sync_keruyun_order o\n     LEFT OUTER JOIN ods_nrs_sync_keruyun_order_customer oc ON o.id = oc.orderId AND oc.ds = '${bdp.system.bizdate}'\n     LEFT OUTER JOIN ods_nrs_tenant_shop shop\n       ON o.tenantId = shop.tenantId AND o.shopId = shop.keruyun_shop_id AND shop.ds = '${bdp.system.bizdate}'\n   WHERE o.ds = '${bdp.system.bizdate}') t2\n    ON t1.tenantId = t2.tenantId AND t1.shopId = t2.shopId AND t1.orderId = t2.orderId AND t1.tradeNo = t2.tradeNo AND\n       t1.customerId = t2.customerId;\n\n",
            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"2\",\"periodType\":\"2\",\"beginDate\":\"2001-01-02\",\"endDate\":\"2121-01-01\"}",
            "periodType": null,
            "scheduleStatus": 2,
            "submitStatus": 1,
            "modifyUserId": 90,
            "createUserId": 90,
            "ownerUserId": 90,
            "version": 67,
            "nodePid": 1163,
            "taskDesc": "",
            "mainClass": "",
            "exeArgs": "",
            "flowId": 0,
            "createUser": {
                "id": 90,
                "gmtCreate": 1535092930000,
                "gmtModified": 1535092930000,
                "isDeleted": 0,
                "userName": "yizhou@dtstack.com",
                "phoneNumber": null,
                "dtuicUserId": 6999,
                "email": "",
                "status": 0,
                "defaultProjectId": null
            },
            "modifyUser": null,
            "ownerUser": null,
            "taskPeriodId": 2,
            "taskPeriodType": "天任务",
            "nodePName": null,
            "readWriteLockVO": null,
            "userId": null,
            "lockVersion": null,
            "taskVariables": null,
            "forceUpdate": false,
            "subNodes": null,
            "relatedTasks": null,
            "createModel": 0,
            "operateModel": 0,
            "pythonVersion": 0,
            "learningType": 0,
            "input": null,
            "output": null,
            "options": null,
            "flowName": null,
            "syncModel": 0,
            "increColumn": null,
            "taskVOS": null,
            "subTaskVOS": null,
            "resourceList": null,
            "refResourceList": null,
            "taskVersions": null,
            "cron": "0 0 2 * * ?"
        },
        "id": 278544,
        "gmtCreate": 1547647311000,
        "gmtModified": 1547647311000,
        "isDeleted": 0,
        "tenantId": null,
        "projectId": null,
        "jobId": "a9fa1f93",
        "jobKey": "cronTrigger_804_20190117020000",
        "jobName": "cronJob_job_dwd_ord_trd_d_20190117020000",
        "status": 18,
        "taskId": 804,
        "createUserId": 90,
        "type": 0,
        "businessDate": "2019-01-16 ",
        "cycTime": "2019-01-17 02:00:00",
        "execStartTime": null,
        "execEndTime": null,
        "execTime": null,
        "execStartDate": null,
        "execEndDate": null,
        "taskPeriodId": 2,
        "taskPeriodType": "天任务",
        "jobVOS": [
            {
                "batchTask": {
                    "id": 805,
                    "gmtCreate": 1535623860000,
                    "gmtModified": 1536739910000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_dws_alg_trd_pay_cust_d",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_1d(\nstatDate            STRING      COMMENT '统计日期'\n,tenantId           STRING      COMMENT '租户ID'\n,shopId             STRING      COMMENT '门店ID'\n,customerId         STRING      COMMENT '顾客ID'\n,max_payment_time   STRING      COMMENT '最近一天最晚支付时间'\n,inter_days_1d      BIGINT      COMMENT '最近一天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_1d    BIGINT      COMMENT '最近一天顾客支付行为次数'\n,pay_amount_1d      DOUBLE      COMMENT '最近一天顾客支付总金额'\n,tot_days_1d        BIGINT      COMMENT '最近一天顾客出现支付行为的天数之和'\n) COMMENT '最近1天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_1d PARTITION(ds)\nSELECT\n  date_add(concat(substr(t.par, 0, 4), '-', substr(t.par, 5, 2), '-', substr(t.par, 7, 2)),1)        AS statDate,\n  t.tenantId              AS tenantId,\n  t.shopId                AS shopId,\n  t.customerId            AS customerId,\n  t.paymentTime           AS max_payment_time,\n  datediff(date_add(concat(substr(t.par, 0, 4), '-', substr(t.par, 5, 2), '-', substr(t.par, 7, 2)),1),\n           t.paymentTime) AS inter_days_1d,\n  t.pay_quantity_1d       AS pay_quantity_1d,\n  t.pay_amount_1d         AS pay_amount_1d,\n  t.tot_days_1d           AS tot_days_1d,\n  t.par                   AS ds\nFROM (\n       SELECT\n         tenantId,\n         min(shopId)                                                              AS shopId,\n         customerId,\n         max(paymentTime)                                                         AS paymentTime,\n         COUNT(1)                                                                 AS pay_quantity_1d,\n         sum(custActualPay)                                                       AS pay_amount_1d,\n         size(collect_set(substr(regexp_replace(paymentTime, '-', ''), 1, 8)))    AS tot_days_1d,\n         date_format(paymentTime, 'yyyyMMdd')                                     AS par\n       FROM dwd_ord_trd_d\n       WHERE ds = '${bdp.system.bizdate}' AND tradePayStatus = 3 AND isnotnull(customerId)\n       GROUP BY tenantId, customerId, date_format(paymentTime, 'yyyyMMdd')) t;\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-02\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 106,
                    "nodePid": 1146,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278692,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "79d7aea1",
                "jobKey": "cronTrigger_805_20190117040000",
                "jobName": "cronJob_job_dws_alg_trd_pay_cust_d_20190117040000",
                "status": 18,
                "taskId": 805,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 890,
                            "gmtCreate": 1536323911000,
                            "gmtModified": 1536819324000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_alg_trd_pay_cust_std",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_std(\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,inter_days_std         BIGINT      COMMENT '历史至今顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_std       BIGINT      COMMENT '历史至今顾客支付行为次数'\n,pay_amount_std         DOUBLE      COMMENT '历史至今顾客支付总金额'\n,tot_days_std           BIGINT      COMMENT '历史至今顾客出现支付行为的天数之和'\n) COMMENT '历史至今算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\n-- INSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\n-- SELECT\n--   date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)                                AS statDate,\n--   coalesce(d.tenantId, std.tenantId)                                 AS tenantId,\n--   coalesce(d.shopId, std.shopId)                                     AS shopId,\n--   coalesce(d.customerId, std.customerId)                             AS customerId,\n--   if(coalesce(d.inter_days_1d,0) = 1, 1, std.inter_days_std + 1)     AS inter_days_std,\n--   coalesce(d.pay_quantity_1d, 0) + coalesce(std.pay_quantity_std, 0) AS pay_quantity_std,\n--   coalesce(d.pay_amount_1d, 0) + coalesce(std.pay_amount_std, 0)     AS pay_amount_std,\n--   coalesce(d.tot_days_1d, 0) + coalesce(std.tot_days_std, 0)         AS tot_days_std\n-- FROM (\n--   SELECT \n--   tenantId,\n--   shopId,\n--   customerId,\n--   inter_days_1d,\n--   pay_quantity_1d,\n--   pay_amount_1d,\n--   tot_days_1d\n--   FROM \n--   dws_alg_trd_pay_cust_1d WHERE ds = '${bdp.system.bizdate}') d\n-- FULL OUTER JOIN (\n--   SELECT \n--   tenantId,\n--   shopId,\n--   customerId,\n--   inter_days_std,\n--   pay_quantity_std,\n--   pay_amount_std,\n--   tot_days_std \n--   FROM dws_alg_trd_pay_cust_std WHERE ds = '${key_2d}') std\n-- ON d.tenantId = std.tenantId AND d.customerId = std.customerId;\n\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_std,\n  sum(pay_quantity_1d)                                    AS pay_quantity_std,\n  sum(pay_amount_1d)                                      AS pay_amount_std,\n  sum(tot_days_1d)                                        AS tot_days_std\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 45,
                            "nodePid": 1146,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278694,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "54595194",
                        "jobKey": "cronTrigger_890_20190117040000",
                        "jobName": "cronJob_job_dws_alg_trd_pay_cust_std_20190117040000",
                        "status": 18,
                        "taskId": 890,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297192,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668893000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "54595194",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 970,
                            "gmtCreate": 1536630854000,
                            "gmtModified": 1536740386000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_alg_trd_pay_cust_3d",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_3d(\nstatDate            STRING      COMMENT '统计日期'\n,tenantId           STRING      COMMENT '租户ID'\n,shopId             STRING      COMMENT '门店ID'\n,customerId         STRING      COMMENT '顾客ID'\n,inter_days_3d      BIGINT      COMMENT '最近3天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_3d    BIGINT      COMMENT '最近3天顾客支付行为次数'\n,pay_amount_3d      DOUBLE      COMMENT '最近3天顾客支付总金额'\n,tot_days_3d        BIGINT      COMMENT '最近3天顾客出现支付行为的天数之和'\n) COMMENT '最近3天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_3d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_3d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_3d,\n  sum(pay_amount_1d)                                      AS pay_amount_3d,\n  sum(tot_days_1d)                                        AS tot_days_3d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_3d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 8,
                            "nodePid": 1146,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278700,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "922a4f2f",
                        "jobKey": "cronTrigger_970_20190117040000",
                        "jobName": "cronJob_job_dws_alg_trd_pay_cust_3d_20190117040000",
                        "status": 18,
                        "taskId": 970,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297198,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668893000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "922a4f2f",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 971,
                            "gmtCreate": 1536633217000,
                            "gmtModified": 1536740399000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_alg_trd_pay_cust_7d",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_7d(\nstatDate            STRING      COMMENT '统计日期'\n,tenantId           STRING      COMMENT '租户ID'\n,shopId             STRING      COMMENT '门店ID'\n,customerId         STRING      COMMENT '顾客ID'\n,inter_days_7d      BIGINT      COMMENT '最近7天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_7d    BIGINT      COMMENT '最近7天顾客支付行为次数'\n,pay_amount_7d      DOUBLE      COMMENT '最近7天顾客支付总金额'\n,tot_days_7d        BIGINT      COMMENT '最近7天顾客出现支付行为的天数之和'\n) COMMENT '最近7天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_7d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_7d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_7d,\n  sum(pay_amount_1d)                                      AS pay_amount_7d,\n  sum(tot_days_1d)                                        AS tot_days_7d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 6,
                            "nodePid": 1146,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278701,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "88828908",
                        "jobKey": "cronTrigger_971_20190117040000",
                        "jobName": "cronJob_job_dws_alg_trd_pay_cust_7d_20190117040000",
                        "status": 18,
                        "taskId": 971,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297199,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668893000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "88828908",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 972,
                            "gmtCreate": 1536633232000,
                            "gmtModified": 1536740408000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_alg_trd_pay_cust_15d",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_15d(\nstatDate             STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,customerId          STRING      COMMENT '顾客ID'\n,inter_days_15d      BIGINT      COMMENT '最近15天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_15d    BIGINT      COMMENT '最近15天顾客支付行为次数'\n,pay_amount_15d      DOUBLE      COMMENT '最近15天顾客支付总金额'\n,tot_days_15d        BIGINT      COMMENT '最近15天顾客出现支付行为的天数之和'\n) COMMENT '最近15天算法信息指标'\nPARTITIONED BY (ds STRING );\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_15d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_15d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_15d,\n  sum(pay_amount_1d)                                      AS pay_amount_15d,\n  sum(tot_days_1d)                                        AS tot_days_15d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_15d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 6,
                            "nodePid": 1146,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278702,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "a413ca41",
                        "jobKey": "cronTrigger_972_20190117040000",
                        "jobName": "cronJob_job_dws_alg_trd_pay_cust_15d_20190117040000",
                        "status": 18,
                        "taskId": 972,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297200,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668893000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "a413ca41",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 973,
                            "gmtCreate": 1536633247000,
                            "gmtModified": 1536740419000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_alg_trd_pay_cust_30d",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_30d(\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,inter_days_30d         BIGINT      COMMENT '最近30天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_30d       BIGINT      COMMENT '最近30天顾客支付行为次数'\n,pay_amount_30d         DOUBLE      COMMENT '最近30天顾客支付总金额'\n,tot_days_30d           BIGINT      COMMENT '最近30天顾客出现支付行为的天数之和'\n) COMMENT '最近30天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_30d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_30d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_30d,\n  sum(pay_amount_1d)                                      AS pay_amount_30d,\n  sum(tot_days_1d)                                        AS tot_days_30d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_30d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 7,
                            "nodePid": 1146,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278703,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "6725441e",
                        "jobKey": "cronTrigger_973_20190117040000",
                        "jobName": "cronJob_job_dws_alg_trd_pay_cust_30d_20190117040000",
                        "status": 18,
                        "taskId": 973,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297201,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668893000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "6725441e",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 1000,
                            "gmtCreate": 1536740547000,
                            "gmtModified": 1537271889000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_alg_cust_label",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_cust_label(\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,label                  BIGINT      COMMENT '顾客未来七天内是否消费：1-是，0-否 (距离今日不足七天算最近区间)'\n) COMMENT '当日顾客未来七天内是否消费标记'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n-------- 前一天 ----------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${bdp.system.bizdate}' AND '${key_f5d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前两天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_2d}')\nSELECT\n  date_add(concat(substr('${key_2d}', 0, 4), '-', substr('${key_2d}', 5, 2), '-', substr('${key_2d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_2d}' AND '${key_f4d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前三天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_3d}')\nSELECT\n  date_add(concat(substr('${key_3d}', 0, 4), '-', substr('${key_3d}', 5, 2), '-', substr('${key_3d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_3d}' AND '${key_f3d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n-------- 前四天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_4d}')\nSELECT\n  date_add(concat(substr('${key_4d}', 0, 4), '-', substr('${key_4d}', 5, 2), '-', substr('${key_4d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_4d}' AND '${key_f2d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前五天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_5d}')\nSELECT\n  date_add(concat(substr('${key_5d}', 0, 4), '-', substr('${key_5d}', 5, 2), '-', substr('${key_5d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_5d}' AND '${key_f1d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前六天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_6d}')\nSELECT\n  date_add(concat(substr('${key_6d}', 0, 4), '-', substr('${key_6d}', 5, 2), '-', substr('${key_6d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_6d}' AND substr('${bdp.system.cyctime}',0,8)) AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前七天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_7d}')\nSELECT\n  date_add(concat(substr('${key_7d}', 0, 4), '-', substr('${key_7d}', 5, 2), '-', substr('${key_7d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 21,
                            "nodePid": 1146,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278705,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "31071b73",
                        "jobKey": "cronTrigger_1000_20190117040000",
                        "jobName": "cronJob_job_dws_alg_cust_label_20190117040000",
                        "status": 18,
                        "taskId": 1000,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297203,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668804000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "31071b73",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 825,
                            "gmtCreate": 1535723066000,
                            "gmtModified": 1537256669000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_ads_alg_pay_cust_info",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS ads_alg_pay_cust_info (\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,sex                    STRING      COMMENT '顾客性别'\n,age                    BIGINT      COMMENT '顾客年龄'\n,level                  BIGINT      COMMENT '顾客等级'\n,inter_days_1d          BIGINT      COMMENT '最近一天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_1d        BIGINT      COMMENT '最近一天顾客支付行为次数'\n,pay_amount_1d          DOUBLE      COMMENT '最近一天顾客支付总金额'\n,tot_days_1d            BIGINT      COMMENT '最近一天顾客出现支付行为的天数之和'\n,inter_days_3d          BIGINT      COMMENT '最近3天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_3d        BIGINT      COMMENT '最近3天顾客支付行为次数'\n,pay_amount_3d          DOUBLE      COMMENT '最近3天顾客支付总金额'\n,tot_days_3d            BIGINT      COMMENT '最近3天顾客出现支付行为的天数之和'\n,inter_days_7d          BIGINT      COMMENT '最近7天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_7d        BIGINT      COMMENT '最近7天顾客支付行为次数'\n,pay_amount_7d          DOUBLE      COMMENT '最近7天顾客支付总金额'\n,tot_days_7d            BIGINT      COMMENT '最近7天顾客出现支付行为的天数之和'\n,inter_days_15d         BIGINT      COMMENT '最近15天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_15d       BIGINT      COMMENT '最近15天顾客支付行为次数'\n,pay_amount_15d         DOUBLE      COMMENT '最近15天顾客支付总金额'\n,tot_days_15d           BIGINT      COMMENT '最近15天顾客出现支付行为的天数之和'\n,inter_days_30d         BIGINT      COMMENT '最近30天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_30d       BIGINT      COMMENT '最近30天顾客支付行为次数'\n,pay_amount_30d         DOUBLE      COMMENT '最近30天顾客支付总金额'\n,tot_days_30d           BIGINT      COMMENT '最近30天顾客出现支付行为的天数之和'\n,inter_days_std         BIGINT      COMMENT '历史至今顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_std       BIGINT      COMMENT '历史至今顾客支付行为次数'\n,pay_amount_std         DOUBLE      COMMENT '历史至今顾客支付总金额'\n,tot_days_std           BIGINT      COMMENT '历史至今顾客出现支付行为的天数之和'\n,label                  BIGINT      COMMENT '未来七天购买情况label'\n) COMMENT '算法信息指汇总表'\nPARTITIONED  BY (ds STRING ) LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n \n\n-------- 前一天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${bdp.system.bizdate}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${bdp.system.bizdate}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${bdp.system.bizdate}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${bdp.system.bizdate}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${bdp.system.bizdate}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${bdp.system.bizdate}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${bdp.system.bizdate}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${bdp.system.bizdate}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n\n\n\n-------- 前二天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${key_2d}')\nSELECT\n  date_add(concat(\n               substr('${key_2d}', 0, 4), '-', substr('${key_2d}', 5, 2), '-',\n               substr('${key_2d}', 7, 2)), 1)            AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${key_2d}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${key_2d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${key_2d}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${key_2d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${key_2d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${key_2d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${key_2d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${key_2d}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n\n-------- 前三天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${key_3d}')\nSELECT\n  date_add(concat(\n               substr('${key_3d}', 0, 4), '-', substr('${key_3d}', 5, 2), '-',\n               substr('${key_3d}', 7, 2)), 1)            AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${key_3d}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${key_3d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${key_3d}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${key_3d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${key_3d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${key_3d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${key_3d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${key_3d}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n\n-------- 前四天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${key_4d}')\nSELECT\n  date_add(concat(\n               substr('${key_4d}', 0, 4), '-', substr('${key_4d}', 5, 2), '-',\n               substr('${key_4d}', 7, 2)), 1)            AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${key_4d}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${key_4d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${key_4d}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${key_4d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${key_4d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${key_4d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${key_4d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${key_4d}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n\n\n-------- 前五天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${key_5d}')\nSELECT\n  date_add(concat(\n               substr('${key_5d}', 0, 4), '-', substr('${key_5d}', 5, 2), '-',\n               substr('${key_5d}', 7, 2)), 1)            AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${key_5d}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${key_5d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${key_5d}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${key_5d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${key_5d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${key_5d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${key_5d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${key_5d}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n\n\n-------- 前六天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${key_6d}')\nSELECT\n  date_add(concat(\n               substr('${key_6d}', 0, 4), '-', substr('${key_6d}', 5, 2), '-',\n               substr('${key_6d}', 7, 2)), 1)            AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${key_6d}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${key_6d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${key_6d}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${key_6d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${key_6d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${key_6d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${key_6d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${key_6d}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n\n\n-------- 前七天 ---------\nINSERT OVERWRITE TABLE  ads_alg_pay_cust_info PARTITION (ds = '${key_7d}')\nSELECT\n  date_add(concat(\n               substr('${key_7d}', 0, 4), '-', substr('${key_7d}', 5, 2), '-',\n               substr('${key_7d}', 7, 2)), 1)            AS statDate,\n  cust.tenantId,\n  cust.shopId,\n  cust.id                                                 AS customerId,\n  cust.sex,\n  cust.age,\n  cust.level,\n  coalesce(rmf_1.inter_days_1d, 0)                        AS inter_days_1d,\n  coalesce(rmf_1.pay_quantity_1d, 0)                      AS pay_quantity_1d,\n  coalesce(rmf_1.pay_amount_1d, 0)                        AS pay_amount_1d,\n  coalesce(rmf_1.tot_days_1d, 0)                          AS tot_days_1d,\n  coalesce(rmf_3.inter_days_3d, 0)                        AS inter_days_3d,\n  coalesce(rmf_3.pay_quantity_3d, 0)                      AS pay_quantity_3d,\n  coalesce(rmf_3.pay_amount_3d, 0)                        AS pay_amount_3d,\n  coalesce(rmf_3.tot_days_3d, 0)                          AS tot_days_3d,\n  coalesce(rmf_7.inter_days_7d, 0)                        AS inter_days_7d,\n  coalesce(rmf_7.pay_quantity_7d, 0)                      AS pay_quantity_7d,\n  coalesce(rmf_7.pay_amount_7d, 0)                        AS pay_amount_7d,\n  coalesce(rmf_7.tot_days_7d, 0)                          AS tot_days_7d,\n  coalesce(rmf_15.inter_days_15d, 0)                      AS inter_days_15d,\n  coalesce(rmf_15.pay_quantity_15d, 0)                    AS pay_quantity_15d,\n  coalesce(rmf_15.pay_amount_15d, 0)                      AS pay_amount_15d,\n  coalesce(rmf_15.tot_days_15d, 0)                        AS tot_days_15d,\n  coalesce(rmf_30.inter_days_30d, 0)                      AS inter_days_30d,\n  coalesce(rmf_30.pay_quantity_30d, 0)                    AS pay_quantity_30d,\n  coalesce(rmf_30.pay_amount_30d, 0)                      AS pay_amount_30d,\n  coalesce(rmf_30.tot_days_30d, 0)                        AS tot_days_30d,\n  coalesce(rmf_st.inter_days_std, 0)                      AS inter_days_std,\n  coalesce(rmf_st.pay_quantity_std, 0)                    AS pay_quantity_std,\n  coalesce(rmf_st.pay_amount_std, 0)                      AS pay_amount_std,\n  coalesce(rmf_st.tot_days_std, 0)                        AS tot_days_std,\n  coalesce(lab.label, 0)                                  AS tot_days_std\nFROM (SELECT\n        tenantId,\n        min(shopId) AS shopId,\n        id,\n        max(sex)    AS sex,\n        max(age)    AS age,\n        max(level)  AS level\n      FROM dim_cust_info\n      WHERE ds = '${key_7d}'\n      GROUP BY tenantId, id\n     ) cust\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_1d   AS inter_days_1d,\n     pay_quantity_1d AS pay_quantity_1d,\n     pay_amount_1d   AS pay_amount_1d,\n     tot_days_1d     AS tot_days_1d\n   FROM dws_alg_trd_pay_cust_1d\n   WHERE ds = '${key_7d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_1 ON cust.tenantId = rmf_1.tenantId AND cust.id = rmf_1.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_3d   AS inter_days_3d,\n     pay_quantity_3d AS pay_quantity_3d,\n     pay_amount_3d   AS pay_amount_3d,\n     tot_days_3d     AS tot_days_3d\n   FROM dws_alg_trd_pay_cust_3d\n   WHERE ds = '${key_7d}' -- AND statDate = date_sub(current_date(),1)\n  ) rmf_3 ON cust.tenantId = rmf_3.tenantId AND cust.id = rmf_3.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_7d   AS inter_days_7d,\n     pay_quantity_7d AS pay_quantity_7d,\n     pay_amount_7d   AS pay_amount_7d,\n     tot_days_7d     AS tot_days_7d\n   FROM dws_alg_trd_pay_cust_7d\n   WHERE ds = '${key_7d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_7 ON cust.tenantId = rmf_7.tenantId AND cust.id = rmf_7.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_15d   AS inter_days_15d,\n     pay_quantity_15d AS pay_quantity_15d,\n     pay_amount_15d   AS pay_amount_15d,\n     tot_days_15d     AS tot_days_15d\n   FROM dws_alg_trd_pay_cust_15d\n   WHERE ds = '${key_7d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_15 ON cust.tenantId = rmf_15.tenantId AND cust.id = rmf_15.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_30d   AS inter_days_30d,\n     pay_quantity_30d AS pay_quantity_30d,\n     pay_amount_30d   AS pay_amount_30d,\n     tot_days_30d     AS tot_days_30d\n   FROM dws_alg_trd_pay_cust_30d\n   WHERE ds = '${key_7d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_30 ON cust.tenantId = rmf_30.tenantId AND cust.id = rmf_30.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     inter_days_std   AS inter_days_std,\n     pay_quantity_std AS pay_quantity_std,\n     pay_amount_std   AS pay_amount_std,\n     tot_days_std     AS tot_days_std\n   FROM dws_alg_trd_pay_cust_std\n   WHERE ds = '${key_7d}' -- AND statDate = date_sub(current_date(),1 )\n  ) rmf_st ON cust.tenantId = rmf_st.tenantId AND cust.id = rmf_st.customerId\n  LEFT OUTER JOIN\n  (SELECT\n     tenantId,\n     customerId,\n     label\n   FROM dws_alg_cust_label\n   WHERE ds = '${key_7d}'\n  ) lab ON cust.tenantId = lab.tenantId AND cust.id = lab.customerId;\n\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 41,
                            "nodePid": 1172,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 30 4 * * ?"
                        },
                        "id": 278815,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "844f90fd",
                        "jobKey": "cronTrigger_825_20190117043000",
                        "jobName": "cronJob_job_ads_alg_pay_cust_info_20190117043000",
                        "status": 18,
                        "taskId": 825,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:30:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1032,
                                    "gmtCreate": 1537031122000,
                                    "gmtModified": 1537414154000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "membership",
                                    "taskType": 6,
                                    "computeType": 1,
                                    "engineType": 5,
                                    "sqlText": "#coding=utf-8\nimport math\nimport pandas as pd\nimport numpy as np\nimport random\nimport datetime as dt\nfrom sklearn.preprocessing import MinMaxScaler, LabelEncoder, StandardScaler\nfrom sklearn.cluster import KMeans\nfrom pyhdfs import HdfsClient\nimport re\nimport pymysql\nfrom sqlalchemy import Column, String, create_engine\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy.ext.declarative import declarative_base\n\nclass Activity_loyalty():\n\n    def __init__(self, hosts,user_name,filepath,date,shop_id=None,tenantid=None):\n\n        self.hdfsdate = None\n        self.host = hosts\n        self.user_name = user_name\n        self.filepath = filepath\n        self.date = dt.datetime.strftime(date,'%Y%m%d')\n        self.activity = None\n        self.loyalty = None\n        self.membership = None\n        self.shop_id = shop_id\n        self.tenantid = tenantid\n\n    def get_all_hdfs_date(self):\n\n        client = HdfsClient(hosts=self.host, user_name=self.user_name)\n        listdir = client.listdir(self.filepath+'ds={}'.format(self.date))\n        col = ['statdate','tenantid','shop_id','customerid','sex','age','level',\n                'inter_days_1d','pay_quantity_1d','pay_amount_1d','tot_days_1d',\n                'inter_days_3d','pay_quantity_3d','pay_amount_3d','tot_days_3d',\n                'inter_days_7d','pay_quantity_7d','pay_amount_7d','tot_days_7d',\n                'inter_days_15d','pay_quantity_15d','pay_amount_15d','tot_days_15d',\n                'inter_days_30d','pay_quantity_30d','pay_amount_30d','tot_days_30d',\n                'inter_days_std','pay_quantity_std','pay_amount_std','tot_days_std','label']\n        dfset = []\n        for t_listdir in listdir:\n            t_file = self.filepath+'ds={}'.format(self.date) +'/' + t_listdir\n            inputfile = client.open(t_file)\n            df = pd.read_table(inputfile, encoding='utf-8',sep='\\x01',header=None)\n            df.columns = col\n            dfset.append(df)\n\n        df = pd.concat(dfset)\n        col_exchange = {\n                'customer_id': 'customer_id', 'statdate': 'start_time', 'sex': 'sex', 'age': 'age','label':'is_buy',\n                 'level': 'level', 'inter_days_1d': 'R_1', 'pay_quantity_1d': 'F_1', 'pay_amount_1d': 'M_1', \n                 'tot_days_1d': 'days_1', 'inter_days_3d': 'R_3', 'pay_quantity_3d': 'F_3', 'pay_amount_3d': 'M_3', \n                 'tot_days_3d': 'days_3', 'inter_days_7d': 'R_7', 'pay_quantity_7d': 'F_7', 'pay_amount_7d': 'M_7',\n                  'tot_days_7d': 'days_7', 'inter_days_15d': 'R_15', 'pay_quantity_15d': 'F_15', 'pay_amount_15d': 'M_15',\n                  'tot_days_15d': 'days_15', 'inter_days_30d': 'R_30', 'pay_quantity_30d': 'F_30', 'pay_amount_30d': 'M_30',\n                   'tot_days_30d': 'days_30', 'inter_days_std': 'R', 'pay_quantity_std': 'F', 'pay_amount_std': 'M'\n                   }\n        df.rename(columns=col_exchange,inplace=True)\n        # df.drop('tenantid',axis=1,inplace=True)\n        df['M'] = df['M']*100\n\n        df['R'] = (df['R'] - 58.81747899159664) / 44.89101608046954\n        df['M'] = (df['M'] - 14333.808403361345) / 25596.820331727085\n        df['F'] = (df['F'] - 4.1549579831932775) / 6.830617289912884\n\n        self.tenantid = list(df['tenantid'])[0]\n        self.shop_id = list(df['shop_id'])[0]\n        self.hdfsdate = df[['R','F','M']]\n\n    \n    def get_activity_class(self,xi,yi):\n        activity = [[4.516837481698389, -1.153674832962138],\n                     [0.856515373352855, -0.997772828507795],\n                     [-0.16837481698389464, -0.5746102449888641],\n                     [-0.314787701317716, 1.1403118040089089]]\n        distance = []\n        for i in activity:\n            distance.append(((xi - i[0])**2 + (yi-i[1])**2)**0.5)\n        return np.argmin(distance)\n\n     \n    def get_loyalty_class(self,xi,yi):\n        lolayty = [[4.516837481698389, 5.30011891471072],\n                   [2.320644216691069, 1.3933836755665567],\n                   [0.856515373352855, 0.4166998657805158],\n                   [-0.314787701317716, -0.3255798296568752]]\n        distance = []\n        for i in lolayty:\n            distance.append(((xi - i[0])**2 + (yi-i[1])**2)**0.5)\n        return np.argmin(distance)\n\n    def get_activity(self):\n\n        df = self.hdfsdate[['R','F']]\n        df = df.reset_index().drop('index',axis=1)\n        for i in df.index:\n            df.loc[i,'activity_class'] = self.get_activity_class(df.loc[i,'F'],df.loc[i,'R'])\n        tmp = df.groupby('activity_class')[['activity_class']].agg('count')\n        tmp.columns = ['rate']\n        tmp = tmp.reset_index()\n        tmp['rate'] = tmp['rate'] / sum(tmp['rate'])\n        # tmp['rate'] = round(tmp['rate'],2)\n        tmp = tmp.set_index('activity_class')\n        self.activity = tmp.reset_index()\n        self.activity.rename(columns={'rate':'percent'},inplace=True)\n        self.activity['people'] = list(map(int,self.activity['percent']*len(self.hdfsdate)))\n        self.activity['percent'] = self.activity['percent']*100\n        self.activity['stat_date'] = self.date\n        # self.activity['shop_id'] = self.shop_id\n        self.activity['tenant_id'] = self.tenantid\n        self.activity['dim'] = self.activity['activity_class'].replace({0:6,1:7,2:8,3:9})\n        self.activity =  self.activity.drop('activity_class',axis=1)\n        \n \n    def get_loyalty(self):\n\n        df = self.hdfsdate[['M','F']]\n        df = df.reset_index().drop('index',axis=1)\n        for i in df.index:\n            df.loc[i,'loyalty_class'] = self.get_loyalty_class(df.loc[i,'F'],df.loc[i,'M'])\n        tmp = df.groupby('loyalty_class')[['loyalty_class']].agg('count')\n        tmp.columns = ['rate']\n        tmp = tmp.reset_index()\n        tmp['rate'] = tmp['rate'] / sum(tmp['rate']) * 100\n        # tmp['rate'] = round(tmp['rate'],2)\n        tmp = tmp.set_index('loyalty_class')\n        self.loyalty = tmp.reset_index()\n        self.loyalty.rename(columns={'rate':'percent'},inplace=True)\n        self.loyalty['stat_date'] = self.date\n        # self.loyalty['shop_id'] = self.shop_id\n        self.loyalty['tenant_id'] = self.tenantid\n        self.loyalty['dim'] = self.loyalty['loyalty_class'].replace({0:49,1:48,2:47,3:46})\n        self.loyalty =  self.loyalty.drop('loyalty_class',axis=1)\n\n    def get_membership(self):\n        df = self.hdfsdate[['R','F','M']]\n        df['R'] = df['R'] * 44.89101608046954 + 58.81747899159664\n        df['M'] = df['M'] * 25596.820331727085 + 14333.808403361345\n        df['F'] = df['F'] * 6.830617289912884 + 4.1549579831932775\n\n        df['membership_class'] = -1\n        df.loc[df['R']>108,'membership_class'] = 4\n        df.loc[(df['F']<=2)&(df['membership_class']==-1),'membership_class'] = 0\n        df.loc[(df['F']<=18)&(df['membership_class']==-1),'membership_class'] = 1\n        df.loc[(df['R']<=13)&(df['membership_class']==-1),'membership_class'] = 2\n        df.loc[df['membership_class']==-1,'membership_class'] = 3\n        tmp = df.groupby('membership_class')[['membership_class']].agg('count')\n        tmp.columns = ['rate']\n        tmp = tmp.reset_index()\n        tmp['rate'] = tmp['rate'] / sum(tmp['rate'])\n        # tmp['rate'] = round(tmp['rate'],2)\n        tmp = tmp.set_index('membership_class')\n        self.membership = tmp.reset_index()\n        self.membership.rename(columns={'rate':'percent'},inplace=True)\n        self.membership['people'] = list(map(int,self.membership['percent']*len(self.hdfsdate)))\n        self.membership['percent'] = self.membership['percent']*100\n        self.membership['stat_date'] = self.date\n        # self.membership['shop_id'] = self.shop_id\n        self.membership['tenant_id'] = self.tenantid\n        self.membership['dim'] = self.membership['membership_class'].replace({0:1,\n            1:2,2:3,3:4,4:5})\n        self.membership =  self.membership.drop('membership_class',axis=1)\n    \n    def activity_to_mysql(self):\n        print('activity_to_mysql...###############################################################')\n        host='172.16.20.6'\n        port = 3306\n        user = 'nrs_zhiquan'\n        password = 'dtstack2018'\n        database = 'nrs_zhiquan'\n        conn = create_engine('mysql+pymysql://{}:{}@{}:3306/{}?charset=utf8'.format(user,password,host,database))\n        pd.io.sql.to_sql(self.activity,\"nrs_mp_daily_activity_stat\",conn,\n                         if_exists='append',index=False)\n\n    def membership_to_mysql(self):\n        print('membership_to_mysql...###############################################################')\n        host='172.16.20.6'\n        port = 3306\n        user = 'nrs_zhiquan'\n        password = 'dtstack2018'\n        database = 'nrs_zhiquan'\n        conn = create_engine('mysql+pymysql://{}:{}@{}:3306/{}?charset=utf8'.format(user,password,host,database))\n        pd.io.sql.to_sql(self.membership,\"nrs_mp_daily_stage_stat\",conn,\n                         if_exists='append',index=False)\n    \n\n    def loyalty_to_mysql(self):\n        print('loyalty_to_mysql...###############################################################')\n        host='172.16.20.6'\n        port = 3306\n        user = 'nrs_zhiquan'\n        password = 'dtstack2018'\n        database = 'nrs_zhiquan'\n        conn = create_engine('mysql+pymysql://{}:{}@{}:3306/{}?charset=utf8'.format(user,password,host,database))\n        pd.io.sql.to_sql(self.loyalty,\"nrs_mp_daily_loyalty_stat\",conn,\n                         if_exists='append',index=False)\n\n\nif __name__=='__main__':\n\n    filepath = '/user/hive/warehouse/intel_card_dev.db/ads_alg_pay_cust_info/'\n    hosts = '172.16.20.5:50070,172.16.20.6:50070'\n    user_name= 'admin'\n    date = dt.datetime.now()\n    activity_loyalty = Activity_loyalty(hosts=hosts,user_name=user_name,filepath=filepath,date=date)\n    activity_loyalty.get_all_hdfs_date()\n    activity_loyalty.get_activity()\n    activity_loyalty.get_loyalty()\n    activity_loyalty.get_membership()\n    activity_loyalty.activity_to_mysql()\n    activity_loyalty.loyalty_to_mysql()\n    activity_loyalty.membership_to_mysql()",
                                    "taskParams": "## 每个worker所占内存，比如1G \r\nworker.memory=1G\r\n\r\n## 每个worker所占的cpu核的数量 \r\nworker.cores=1 \r\n\r\n## 调度队列 \r\nqueue=default ",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"6\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 98,
                                    "createUserId": 98,
                                    "ownerUserId": 98,
                                    "version": 5,
                                    "nodePid": 1141,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "{\"operateModel\":1,\"--python-version\":3,\"--cmd-opts\":\"\",\"--app-type\":\"python\",\"--app-name\":\"membership\"}",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 98,
                                        "gmtCreate": 1536043678000,
                                        "gmtModified": 1536043678000,
                                        "isDeleted": 0,
                                        "userName": "lingyi@dtstack.com",
                                        "phoneNumber": "18868803956",
                                        "dtuicUserId": 7044,
                                        "email": "lingyi@dtstack.com",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 6 * * ?"
                                },
                                "id": 278921,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "ee2184e8",
                                "jobKey": "cronTrigger_1032_20190117060000",
                                "jobName": "cronJob_membership_20190117060000",
                                "status": 18,
                                "taskId": 1032,
                                "createUserId": 98,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 06:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": null,
                                "batchEngineJob": {
                                    "id": 297419,
                                    "gmtCreate": 1547647311000,
                                    "gmtModified": 1547676006000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "ee2184e8",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297313,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547670608000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "844f90fd",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297190,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547668893000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "79d7aea1",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 860,
                    "gmtCreate": 1536145160000,
                    "gmtModified": 1537430157000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_dws_coupon_trd_1d",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS dws_coupon_trd_1d(\nstatDate            STRING    COMMENT '交易日期'\n,tenantId           STRING    COMMENT '租户ID'\n,service_order_id   STRING    COMMENT '发券活动ID'\n,gmv                DOUBLE    COMMENT '当日总营业额'\n,coupon_gmv         DOUBLE    COMMENT '当日核销产生营业额'\n,tc                 BIGINT    COMMENT '当日交易笔数'\n,pct                DOUBLE    COMMENT '当日客单价'\n,trade_user_count   DOUBLE    COMMENT '当日交易人数'\n,coupon_used        BIGINT    COMMENT '当日核销优惠券数量'\n,total_coupon_count STRING    COMMENT '当日优惠券总面额'\n,order_gmv          DOUBLE    COMMENT '当日订单总额'\n) COMMENT '发券后运营指标统计'\nPARTITIONED BY (ds STRING) STORED AS orc LIFECYCLE 1000;\n\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\n\nINSERT OVERWRITE TABLE dws_coupon_trd_1d PARTITION(ds)\nSELECT\n    total.paymentTime                                                      AS statDate, \n    total.tenantId,\n    total.service_order_id                                                 AS service_order_id,\n    sum(total.shopActualAmount)                                            AS gmv,\n    coalesce(sum(CASE\n               WHEN total.coupon_instance_id IS NOT NULL\n                 THEN total.shopActualAmount\n               END),0)                                                     AS coupon_gmv,\n    count(total.orderId)                                                   AS tc,\n    avg(total.shopActualAmount)                                            AS pct,\n    count(total.orderId)                                                   AS trade_user_count,\n    coalesce(sum(CASE\n               WHEN total.coupon_instance_id IS NOT NULL\n                 THEN 1\n               END),0)                                                     AS coupon_used,\n    coalesce(sum(CASE\n               WHEN total.coupon_instance_id IS NOT NULL\n                 THEN total.deno_value\n               END),0)                                                     AS total_coupon_count,\n    sum(tradeAmount)                                                       AS tradeAmount,\n    total.paymentTime                                                      AS ds\nFROM (\nSELECT \n    d.orderId                                AS orderId,\n    d.tenantId,\n    d.shopId,\n    d.customerId,\n    date_format(d.paymentTime,'yyyyMMdd')    AS paymentTime,\n    d.shopActualAmount,\n    d.tradeAmount,\n    d.custActualPay,\n    d.custShouldPay,\n    d.dishTotalAmount,\n    d.extraAmount,\n    d.privilegeAmount,\n    ins.id                                   AS coupon_instance_id,\n    ins.service_order_id                     AS service_order_id,\n    ins.couponType,\n    ins.deno_value,\n    ins.full_value\nFROM \n(SELECT \n    orderId,\n    tenantId,\n    shopId,\n    customerId,\n    paymentTime,\n    tradeNo,\n    shopActualAmount,\n    tradeAmount,\n    custActualPay,\n    custShouldPay,\n    dishTotalAmount,\n    extraAmount,\n    privilegeAmount\n FROM dwd_ord_trd_d WHERE ds = '${bdp.system.bizdate}' and tradeStatus=4) d \nLEFT OUTER JOIN  \n(SELECT \n    id,\n    tenantId,\n    shopId,\n    service_order_id,\n    customerId,\n    checkTime,\n    couponType,\n    send_date,\n    tradeNo,\n    deno_value,\n    full_value\n FROM dwd_coupon_instance_d WHERE ds = '${bdp.system.bizdate}' AND isnotnull(tradeNo) AND couponStatus = 2) ins \n ON d.tenantId = ins.tenantId AND d.tradeNo=ins.tradeNo) total  -- 去掉shopId的关联，因为instance的shopId不准确\nGROUP BY total.tenantId, total.service_order_id, total.paymentTime;\n\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 92,
                    "version": 58,
                    "nodePid": 1189,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278693,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "e46e72a4",
                "jobKey": "cronTrigger_860_20190117040000",
                "jobName": "cronJob_job_dws_coupon_trd_1d_20190117040000",
                "status": 18,
                "taskId": 860,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 1087,
                            "gmtCreate": 1537523628000,
                            "gmtModified": 1537611524000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_coupon_trd_stat_new",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\n-- DROP TABLE dws_coupon_trd_stat_new_nouse;\n-- DROP TABLE dws_coupon_trd_stat_new_use;\n\nCREATE TABLE if NOT EXISTS dws_coupon_trd_stat_new_nouse(\ntenantId            STRING    COMMENT '租户ID'\n,service_order_id   STRING    COMMENT '发券活动ID'\n,gmv                DOUBLE    COMMENT '总营业额'\n,coupon_gmv         DOUBLE    COMMENT '核销产生营业额'\n,tc                 BIGINT    COMMENT '交易笔数'\n,avg_tc             DOUBLE    COMMENT '平均交易笔数'\n,pct                DOUBLE    COMMENT '客单价'\n,trade_user_count   DOUBLE    COMMENT '交易人数'\n,coupon_used        BIGINT    COMMENT '核销优惠券数量'\n,total_coupon_count STRING    COMMENT '优惠券总面额'\n,order_gmv          DOUBLE    COMMENT '订单总额'\n,period             BIGINT    COMMENT '发券周期（单位：天）'\n) COMMENT '发券周期内的未使用优惠券的交易情况'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_coupon_trd_stat_new_nouse PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  d.tenantid,\n  cou.id                          AS service_order_id,\n  sum(gmv)                        AS gmv,\n  sum(coupon_gmv)                 AS coupon_gmv,\n  sum(tc)                         AS tc,\n  avg(tc)                         AS avg_tc,\n  coalesce(sum(gmv) / sum(tc), 0) AS pct,\n  sum(trade_user_count)           AS trade_user_count,\n  sum(coupon_used)                AS coupon_used,\n  sum(total_coupon_count)         AS total_coupon_count,\n  sum(order_gmv)                  AS order_gmv,\n  first(cou.period)               AS period\nFROM\n  (SELECT\n     statdate,\n     tenantid,\n     gmv,\n     coupon_gmv,\n     tc,\n     trade_user_count,\n     coupon_used,\n     total_coupon_count,\n     order_gmv\n   FROM dws_coupon_trd_1d WHERE isnull(service_order_id)) d\n  LEFT OUTER JOIN dim_coupon_order_info cou\n    ON d.tenantid = cou.tenantId AND cou.ds = '${bdp.system.bizdate}'\nWHERE d.statdate >= date_format(cou.start_time, 'yyyyMMdd') AND\n      d.statdate <= date_format(date_add(cou.start_time, cou.period + 7), 'yyyyMMdd')\nGROUP BY d.tenantid,cou.id;\n\n\n\n--------- ----------- -----------\n\n\nCREATE TABLE if NOT EXISTS dws_coupon_trd_stat_new_use(\ntenantId            STRING    COMMENT '租户ID'\n,service_order_id   STRING    COMMENT '发券活动ID'\n,gmv                DOUBLE    COMMENT '总营业额'\n,coupon_gmv         DOUBLE    COMMENT '核销产生营业额'\n,tc                 BIGINT    COMMENT '交易笔数'\n,avg_tc             DOUBLE    COMMENT '平均交易笔数'\n,pct                DOUBLE    COMMENT '客单价'\n,trade_user_count   DOUBLE    COMMENT '交易人数'\n,coupon_used        BIGINT    COMMENT '核销优惠券数量'\n,total_coupon_count STRING    COMMENT '优惠券总面额'\n,order_gmv          DOUBLE    COMMENT '订单总额'\n,period             BIGINT    COMMENT '发券周期（单位：天）'\n) COMMENT '发券周期内的使用优惠券的交易情况'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_coupon_trd_stat_new_use PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  d.tenantid,\n  d.service_order_id              AS service_order_id,\n  sum(gmv)                        AS gmv,\n  sum(coupon_gmv)                 AS coupon_gmv,\n  sum(tc)                         AS tc,\n  avg(tc)                         AS avg_tc,\n  coalesce(sum(gmv) / sum(tc), 0) AS pct,\n  sum(trade_user_count)           AS trade_user_count,\n  sum(coupon_used)                AS coupon_used,\n  sum(total_coupon_count)         AS total_coupon_count,\n  sum(order_gmv)                  AS order_gmv,\n  first(cou.period)               AS period\nFROM\n  (SELECT\n     statdate,\n     tenantid,\n     service_order_id,\n     gmv,\n     coupon_gmv,\n     tc,\n     trade_user_count,\n     coupon_used,\n     total_coupon_count,\n     order_gmv\n   FROM dws_coupon_trd_1d WHERE isnotnull(service_order_id)) d\n  LEFT OUTER JOIN dim_coupon_order_info cou\n    ON d.tenantid = cou.tenantId AND d.service_order_id = cou.id AND cou.ds = '${bdp.system.bizdate}'\nWHERE d.statdate >= date_format(cou.start_time, 'yyyyMMdd') AND\n      d.statdate <= date_format(date_add(cou.start_time, cou.period + 7), 'yyyyMMdd')\nGROUP BY d.tenantid,d.service_order_id;",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"15\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 25,
                            "nodePid": 1188,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 15 4 * * ?"
                        },
                        "id": 278804,
                        "gmtCreate": 1547647312000,
                        "gmtModified": 1547647312000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "86c157b7",
                        "jobKey": "cronTrigger_1087_20190117041500",
                        "jobName": "cronJob_job_dws_coupon_trd_stat_new_20190117041500",
                        "status": 18,
                        "taskId": 1087,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:15:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1040,
                                    "gmtCreate": 1537173434000,
                                    "gmtModified": 1537613526000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "job_ads_nrs_coupon_statistic_comb",
                                    "taskType": 0,
                                    "computeType": 1,
                                    "engineType": 1,
                                    "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\nCREATE TABLE IF NOT EXISTS ads_nrs_bd_coupon_stat_old(\n  tenantId         STRING COMMENT '租户ID',\n  service_order_id STRING COMMENT '发券活动ID',\n  old_avg_tc       DOUBLE COMMENT '历史平均交易数',\n  old_pct          DOUBLE COMMENT '历史客单价',\n  old_apr          DOUBLE COMMENT '历史连带率',\n  old_roi          DOUBLE COMMENT '历史回报率'\n) COMMENT '智能发券前历史记录表' \nPARTITIONED BY(ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_bd_coupon_stat_old PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  coalesce(trd.tenantId, dish.tenantId)                                                   AS tenantId,\n  coalesce(trd.service_order_id, dish.service_order_id)                                   AS service_order_id,\n  coalesce(trd.avg_tc, 0)                                                                 AS old_avg_tc,\n  coalesce(trd.pct, 0)                                                                    AS old_pct,\n  coalesce(coalesce(dish.sales, 0) / coalesce(trd.tc, 0), 0)                              AS old_apr,\n  coalesce(coalesce(trd.gmv, 0) / (coalesce(trd.order_gmv, 0) - coalesce(trd.gmv, 0)), 0) AS old_roi\nFROM\n  (SELECT\n     tenantId,\n     service_order_id,\n     gmv,\n     coupon_gmv,\n     tc,\n     avg_tc,\n     pct,\n     order_gmv\n   FROM dws_coupon_trd_stat_old_nouse\n   WHERE ds = '${bdp.system.bizdate}') trd\n  FULL OUTER JOIN (SELECT\n                     tenantId,\n                     service_order_id,\n                     sales\n                   FROM dws_coupon_dish_stat_old_nouse\n                   WHERE ds = '${bdp.system.bizdate}') dish\n    ON trd.tenantId = dish.tenantId AND trd.service_order_id = dish.service_order_id;\n\n\n-- ###############    ############### --\n\n\nCREATE TABLE IF NOT EXISTS ads_nrs_bd_coupon_stat_new(\n  tenantId         STRING COMMENT '租户ID',\n  service_order_id STRING COMMENT '发券活动ID',\n  gmv              DOUBLE COMMENT '服务期内总营业额',\n  coupon_gmv       DOUBLE COMMENT '服务期内核券营业额',\n  avg_tc           DOUBLE COMMENT '服务期内平均交易数',\n  pct              DOUBLE COMMENT '服务期内客单价',\n  apr              DOUBLE COMMENT '服务期内连带率',\n  coupon_dist      BIGINT COMMENT '总发券量',\n  coupon_acpt      BIGINT COMMENT '券总领取量',\n  coupon_used      BIGINT COMMENT '核销量',\n  roi              DOUBLE COMMENT '服务期内回报率'\n) COMMENT '智能发券周期内记录表' \nPARTITIONED BY(ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_bd_coupon_stat_new PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  coalesce(trd.tenantId, dish.tenantId, send.tenantId)                           AS tenantId,\n  coalesce(trd.service_order_id, dish.service_order_id, send.service_order_id)   AS service_order_id,\n  coalesce(trd.gmv, 0)                                                           AS gmv,\n  coalesce(trd.coupon_gmv, 0)                                                    AS coupon_gmv,\n  coalesce(trd.tc, 0) / coalesce(trd.period + 7, 0)                              AS avg_tc,\n  coalesce(trd.pct, 0)                                                           AS pct,\n  coalesce(coalesce(dish.sales, 0) / coalesce(trd.tc, 0), 0)                     AS apr,\n  coalesce(send.coupon_dist, 0)                                                  AS coupon_dist,\n  coalesce(send.coupon_acpt, 0)                                                  AS coupon_acpt,\n  coalesce(trd.coupon_used, 0)                                                   AS coupon_used,\n  coalesce(coalesce(trd.coupon_gmv, 0) / coalesce(trd.total_coupon_count, 0), 0) AS roi\nFROM\n  (SELECT\n     coalesce(nouse.tenantId, used.tenantId)                                      AS tenantId,\n     coalesce(nouse.service_order_id, used.service_order_id)                      AS service_order_id,\n     coalesce(nouse.gmv, 0) + coalesce(used.gmv, 0)                               AS gmv,\n     coalesce(nouse.coupon_gmv, 0) + coalesce(used.coupon_gmv, 0)                 AS coupon_gmv,\n     coalesce(nouse.tc, 0) + coalesce(used.tc, 0)                                 AS tc,\n     coalesce(\n         (coalesce(nouse.gmv, 0) + coalesce(used.gmv, 0)) /\n         (coalesce(nouse.tc, 0) + coalesce(used.tc, 0)),\n         0)\n                                                                                  AS pct,\n     coalesce(nouse.trade_user_count, 0) + coalesce(used.trade_user_count, 0)     AS trade_user_count,\n     coalesce(nouse.coupon_used, 0) + coalesce(used.coupon_used, 0)               AS coupon_used,\n     coalesce(nouse.total_coupon_count, 0) + coalesce(used.total_coupon_count, 0) AS total_coupon_count,\n     coalesce(nouse.order_gmv, 0) + coalesce(used.order_gmv, 0)                   AS order_gmv,\n     coalesce(nouse.period, used.period)                                          AS period \n   FROM (SELECT\n           tenantId,\n           service_order_id,\n           gmv,\n           coupon_gmv,\n           tc,\n           pct,\n           trade_user_count,\n           coupon_used,\n           total_coupon_count,\n           order_gmv,\n           period\n         FROM dws_coupon_trd_stat_new_nouse\n         WHERE ds = '${bdp.system.bizdate}') nouse FULL OUTER JOIN (SELECT\n                                                                      tenantId,\n                                                                      service_order_id,\n                                                                      gmv,\n                                                                      coupon_gmv,\n                                                                      tc,\n                                                                      pct,\n                                                                      trade_user_count,\n                                                                      coupon_used,\n                                                                      total_coupon_count,\n                                                                      order_gmv,\n                                                                      period\n                                                                    FROM dws_coupon_trd_stat_new_use\n                                                                    WHERE ds = '${bdp.system.bizdate}') used\n       ON nouse.tenantId = used.tenantId AND nouse.service_order_id = used.service_order_id) trd\n  FULL OUTER JOIN (SELECT\n                     coalesce(nouse.tenantId, used.tenantId)                 AS tenantId,\n                     coalesce(nouse.service_order_id, used.service_order_id) AS service_order_id,\n                     coalesce(nouse.sales, 0) + coalesce(used.sales, 0)      AS sales\n                   FROM (SELECT\n                           tenantId,\n                           service_order_id,\n                           sales\n                         FROM dws_coupon_dish_stat_new_nouse\n                         WHERE ds = '${bdp.system.bizdate}') nouse FULL OUTER JOIN (SELECT\n                                                                                      tenantId,\n                                                                                      service_order_id,\n                                                                                      sales\n                                                                                    FROM dws_coupon_dish_stat_new_use\n                                                                                    WHERE\n                                                                                      ds = '${bdp.system.bizdate}') used\n                       ON nouse.tenantId = used.tenantId AND nouse.service_order_id = used.service_order_id) dish\n    ON trd.tenantId = dish.tenantId AND trd.service_order_id = dish.service_order_id\n  FULL OUTER JOIN (SELECT\n                     service_order_id,\n                     tenantId,\n                     sum(coupon_dist)   AS coupon_dist,\n                     sum(coupon_acpt)   AS coupon_acpt \n                   FROM dws_coupon_send_1d\n                   WHERE ds <= '${bdp.system.bizdate}' GROUP BY tenantId,service_order_id) send\n    ON trd.tenantId = send.tenantId AND trd.service_order_id = send.service_order_id;\n\n",
                                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 63,
                                    "nodePid": 1191,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 5 * * ?"
                                },
                                "id": 278855,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "3a0490e9",
                                "jobKey": "cronTrigger_1040_20190117050000",
                                "jobName": "cronJob_job_ads_nrs_coupon_statistic_comb_20190117050000",
                                "status": 18,
                                "taskId": 1040,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 05:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": [
                                    {
                                        "batchTask": {
                                            "id": 1042,
                                            "gmtCreate": 1537234728000,
                                            "gmtModified": 1537613884000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "job_ads_nrs_coupon_statistic",
                                            "taskType": 0,
                                            "computeType": 1,
                                            "engineType": 1,
                                            "sqlText": "CREATE TABLE IF NOT EXISTS ads_nrs_coupon_statistic(\n  id               STRING COMMENT '主键ID',\n  tenantId         STRING COMMENT '租户ID',\n  service_order_id STRING COMMENT '发券活动ID',\n  gmv              DOUBLE COMMENT '服务期内总营业额',\n  coupon_gmv       DOUBLE COMMENT '服务期内核券营业额',\n  avg_tc           DOUBLE COMMENT '服务期内平均交易数',\n  old_avg_tc       DOUBLE COMMENT '历史平均交易数',\n  pct              DOUBLE COMMENT '服务期内客单价',\n  old_pct          DOUBLE COMMENT '历史客单价',\n  apr              DOUBLE COMMENT '服务期内连带率',\n  old_apr          DOUBLE COMMENT '历史连带率',\n  coupon_dist      BIGINT COMMENT '总发券量',\n  coupon_acpt      BIGINT COMMENT '券总领取量',\n  coupon_used      BIGINT COMMENT '核销量',\n  roi              DOUBLE COMMENT '服务期内回报率',\n  old_roi          DOUBLE COMMENT '历史回报率',\n  gmt_created      STRING COMMENT '插入时间',\n  gmt_modified     STRING COMMENT '更新时间'\n)COMMENT '总的智能发券表' \nPARTITIONED BY(ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE ads_nrs_coupon_statistic PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  concat(old.tenantId, '0000', old.service_order_id, '000') AS id,\n  old.tenantId,\n  old.service_order_id,\n  new.gmv,\n  new.coupon_gmv,\n  new.avg_tc,\n  old.old_avg_tc,\n  new.pct,\n  old.old_pct,\n  new.apr,\n  old.old_apr,\n  new.coupon_dist,\n  new.coupon_acpt,\n  new.coupon_used,\n  new.roi,\n  old.old_roi,\n  '${bdp.system.cyctime}'                                             AS gmt_created,\n  '${bdp.system.cyctime}'                                             AS gmt_modified\nFROM ads_nrs_bd_coupon_stat_old old INNER JOIN ads_nrs_bd_coupon_stat_new new\n    ON old.tenantId = new.tenantId AND old.service_order_id = new.service_order_id AND new.ds = '${bdp.system.bizdate}'\nWHERE old.ds = '${bdp.system.bizdate}';\n",
                                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 23,
                                            "nodePid": 1191,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 30 5 * * ?"
                                        },
                                        "id": 278909,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "3a3de813",
                                        "jobKey": "cronTrigger_1042_20190117053000",
                                        "jobName": "cronJob_job_ads_nrs_coupon_statistic_20190117053000",
                                        "status": 18,
                                        "taskId": 1042,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:30:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": [
                                            {
                                                "batchTask": {
                                                    "id": 1044,
                                                    "gmtCreate": 1537252366000,
                                                    "gmtModified": 1537613949000,
                                                    "isDeleted": 0,
                                                    "tenantId": 129,
                                                    "projectId": 77,
                                                    "name": "cdp_dt2mysql_nrs_coupon_statistic",
                                                    "taskType": 2,
                                                    "computeType": 1,
                                                    "engineType": 0,
                                                    "sqlText": "",
                                                    "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"45\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                                    "periodType": null,
                                                    "scheduleStatus": 2,
                                                    "submitStatus": 1,
                                                    "modifyUserId": 90,
                                                    "createUserId": 90,
                                                    "ownerUserId": 90,
                                                    "version": 1,
                                                    "nodePid": 1178,
                                                    "taskDesc": "",
                                                    "mainClass": "",
                                                    "exeArgs": "",
                                                    "flowId": 0,
                                                    "createUser": {
                                                        "id": 90,
                                                        "gmtCreate": 1535092930000,
                                                        "gmtModified": 1535092930000,
                                                        "isDeleted": 0,
                                                        "userName": "yizhou@dtstack.com",
                                                        "phoneNumber": null,
                                                        "dtuicUserId": 6999,
                                                        "email": "",
                                                        "status": 0,
                                                        "defaultProjectId": null
                                                    },
                                                    "modifyUser": null,
                                                    "ownerUser": null,
                                                    "taskPeriodId": 2,
                                                    "taskPeriodType": "天任务",
                                                    "nodePName": null,
                                                    "readWriteLockVO": null,
                                                    "userId": null,
                                                    "lockVersion": null,
                                                    "taskVariables": null,
                                                    "forceUpdate": false,
                                                    "subNodes": null,
                                                    "relatedTasks": null,
                                                    "createModel": 0,
                                                    "operateModel": 0,
                                                    "pythonVersion": 0,
                                                    "learningType": 0,
                                                    "input": null,
                                                    "output": null,
                                                    "options": null,
                                                    "flowName": null,
                                                    "syncModel": 0,
                                                    "increColumn": null,
                                                    "taskVOS": null,
                                                    "subTaskVOS": null,
                                                    "resourceList": null,
                                                    "refResourceList": null,
                                                    "taskVersions": null,
                                                    "cron": "0 45 5 * * ?"
                                                },
                                                "id": 278917,
                                                "gmtCreate": 1547647312000,
                                                "gmtModified": 1547647312000,
                                                "isDeleted": 0,
                                                "tenantId": null,
                                                "projectId": null,
                                                "jobId": "3a93a7a2",
                                                "jobKey": "cronTrigger_1044_20190117054500",
                                                "jobName": "cronJob_cdp_dt2mysql_nrs_coupon_statistic_20190117054500",
                                                "status": 18,
                                                "taskId": 1044,
                                                "createUserId": 90,
                                                "type": 0,
                                                "businessDate": "2019-01-16 ",
                                                "cycTime": "2019-01-17 05:45:00",
                                                "execStartTime": null,
                                                "execEndTime": null,
                                                "execTime": null,
                                                "execStartDate": null,
                                                "execEndDate": null,
                                                "taskPeriodId": 2,
                                                "taskPeriodType": "天任务",
                                                "jobVOS": null,
                                                "batchEngineJob": {
                                                    "id": 297415,
                                                    "gmtCreate": 1547647312000,
                                                    "gmtModified": 1547675105000,
                                                    "isDeleted": 0,
                                                    "status": 18,
                                                    "jobId": "3a93a7a2",
                                                    "engineJobId": null,
                                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                                    "engineLog": "",
                                                    "execStartTime": null,
                                                    "execEndTime": null,
                                                    "execTime": 0
                                                },
                                                "subNodes": null,
                                                "flowJobId": "0",
                                                "relatedJobs": null,
                                                "isDirty": 0
                                            }
                                        ],
                                        "batchEngineJob": {
                                            "id": 297407,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547674205000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "3a3de813",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    }
                                ],
                                "batchEngineJob": {
                                    "id": 297353,
                                    "gmtCreate": 1547647312000,
                                    "gmtModified": 1547672407000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "3a0490e9",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297302,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547669707000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "86c157b7",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 1089,
                            "gmtCreate": 1537527129000,
                            "gmtModified": 1537610999000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_coupon_trd_stat_old",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\n-- DROP TABLE dws_coupon_trd_stat_old_nouse;\n\nCREATE TABLE if NOT EXISTS dws_coupon_trd_stat_old_nouse(\ntenantId            STRING    COMMENT '租户ID'\n,service_order_id   STRING    COMMENT '发券活动ID'\n,gmv                DOUBLE    COMMENT '总营业额'\n,coupon_gmv         DOUBLE    COMMENT '核销产生营业额'\n,tc                 BIGINT    COMMENT '交易笔数'\n,avg_tc             DOUBLE    COMMENT '平均交易笔数'\n,pct                DOUBLE    COMMENT '客单价'\n,trade_user_count   DOUBLE    COMMENT '交易人数'\n,coupon_used        BIGINT    COMMENT '核销优惠券数量'\n,total_coupon_count STRING    COMMENT '优惠券总面额'\n,order_gmv          DOUBLE    COMMENT '订单总额'\n) COMMENT '发券前历史的未使用优惠券的交易情况'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_coupon_trd_stat_old_nouse PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  d.tenantid,\n  cou.id                          AS service_order_id,\n  sum(gmv)                        AS gmv,\n  sum(coupon_gmv)                 AS coupon_gmv,\n  sum(tc)                         AS tc,\n  avg(tc)                         AS avg_tc,\n  coalesce(sum(gmv) / sum(tc), 0) AS pct,\n  sum(trade_user_count)           AS trade_user_count,\n  sum(coupon_used)                AS coupon_used,\n  sum(total_coupon_count)         AS total_coupon_count,\n  sum(order_gmv)                  AS order_gmv\nFROM\n  (SELECT\n     statdate,\n     tenantid,\n     gmv,\n     coupon_gmv,\n     tc,\n     trade_user_count,\n     coupon_used,\n     total_coupon_count,\n     order_gmv\n   FROM dws_coupon_trd_1d ) d\n  LEFT OUTER JOIN dim_coupon_order_info cou\n    ON d.tenantid = cou.tenantId AND cou.ds = '${bdp.system.bizdate}'\nWHERE d.statdate <= date_format(cou.start_time, 'yyyyMMdd')\nGROUP BY d.tenantid,cou.id;\n\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"15\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 7,
                            "nodePid": 1188,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 15 4 * * ?"
                        },
                        "id": 278806,
                        "gmtCreate": 1547647312000,
                        "gmtModified": 1547647312000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "05f94eeb",
                        "jobKey": "cronTrigger_1089_20190117041500",
                        "jobName": "cronJob_job_dws_coupon_trd_stat_old_20190117041500",
                        "status": 18,
                        "taskId": 1089,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:15:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1040,
                                    "gmtCreate": 1537173434000,
                                    "gmtModified": 1537613526000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "job_ads_nrs_coupon_statistic_comb",
                                    "taskType": 0,
                                    "computeType": 1,
                                    "engineType": 1,
                                    "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\nCREATE TABLE IF NOT EXISTS ads_nrs_bd_coupon_stat_old(\n  tenantId         STRING COMMENT '租户ID',\n  service_order_id STRING COMMENT '发券活动ID',\n  old_avg_tc       DOUBLE COMMENT '历史平均交易数',\n  old_pct          DOUBLE COMMENT '历史客单价',\n  old_apr          DOUBLE COMMENT '历史连带率',\n  old_roi          DOUBLE COMMENT '历史回报率'\n) COMMENT '智能发券前历史记录表' \nPARTITIONED BY(ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_bd_coupon_stat_old PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  coalesce(trd.tenantId, dish.tenantId)                                                   AS tenantId,\n  coalesce(trd.service_order_id, dish.service_order_id)                                   AS service_order_id,\n  coalesce(trd.avg_tc, 0)                                                                 AS old_avg_tc,\n  coalesce(trd.pct, 0)                                                                    AS old_pct,\n  coalesce(coalesce(dish.sales, 0) / coalesce(trd.tc, 0), 0)                              AS old_apr,\n  coalesce(coalesce(trd.gmv, 0) / (coalesce(trd.order_gmv, 0) - coalesce(trd.gmv, 0)), 0) AS old_roi\nFROM\n  (SELECT\n     tenantId,\n     service_order_id,\n     gmv,\n     coupon_gmv,\n     tc,\n     avg_tc,\n     pct,\n     order_gmv\n   FROM dws_coupon_trd_stat_old_nouse\n   WHERE ds = '${bdp.system.bizdate}') trd\n  FULL OUTER JOIN (SELECT\n                     tenantId,\n                     service_order_id,\n                     sales\n                   FROM dws_coupon_dish_stat_old_nouse\n                   WHERE ds = '${bdp.system.bizdate}') dish\n    ON trd.tenantId = dish.tenantId AND trd.service_order_id = dish.service_order_id;\n\n\n-- ###############    ############### --\n\n\nCREATE TABLE IF NOT EXISTS ads_nrs_bd_coupon_stat_new(\n  tenantId         STRING COMMENT '租户ID',\n  service_order_id STRING COMMENT '发券活动ID',\n  gmv              DOUBLE COMMENT '服务期内总营业额',\n  coupon_gmv       DOUBLE COMMENT '服务期内核券营业额',\n  avg_tc           DOUBLE COMMENT '服务期内平均交易数',\n  pct              DOUBLE COMMENT '服务期内客单价',\n  apr              DOUBLE COMMENT '服务期内连带率',\n  coupon_dist      BIGINT COMMENT '总发券量',\n  coupon_acpt      BIGINT COMMENT '券总领取量',\n  coupon_used      BIGINT COMMENT '核销量',\n  roi              DOUBLE COMMENT '服务期内回报率'\n) COMMENT '智能发券周期内记录表' \nPARTITIONED BY(ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_bd_coupon_stat_new PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  coalesce(trd.tenantId, dish.tenantId, send.tenantId)                           AS tenantId,\n  coalesce(trd.service_order_id, dish.service_order_id, send.service_order_id)   AS service_order_id,\n  coalesce(trd.gmv, 0)                                                           AS gmv,\n  coalesce(trd.coupon_gmv, 0)                                                    AS coupon_gmv,\n  coalesce(trd.tc, 0) / coalesce(trd.period + 7, 0)                              AS avg_tc,\n  coalesce(trd.pct, 0)                                                           AS pct,\n  coalesce(coalesce(dish.sales, 0) / coalesce(trd.tc, 0), 0)                     AS apr,\n  coalesce(send.coupon_dist, 0)                                                  AS coupon_dist,\n  coalesce(send.coupon_acpt, 0)                                                  AS coupon_acpt,\n  coalesce(trd.coupon_used, 0)                                                   AS coupon_used,\n  coalesce(coalesce(trd.coupon_gmv, 0) / coalesce(trd.total_coupon_count, 0), 0) AS roi\nFROM\n  (SELECT\n     coalesce(nouse.tenantId, used.tenantId)                                      AS tenantId,\n     coalesce(nouse.service_order_id, used.service_order_id)                      AS service_order_id,\n     coalesce(nouse.gmv, 0) + coalesce(used.gmv, 0)                               AS gmv,\n     coalesce(nouse.coupon_gmv, 0) + coalesce(used.coupon_gmv, 0)                 AS coupon_gmv,\n     coalesce(nouse.tc, 0) + coalesce(used.tc, 0)                                 AS tc,\n     coalesce(\n         (coalesce(nouse.gmv, 0) + coalesce(used.gmv, 0)) /\n         (coalesce(nouse.tc, 0) + coalesce(used.tc, 0)),\n         0)\n                                                                                  AS pct,\n     coalesce(nouse.trade_user_count, 0) + coalesce(used.trade_user_count, 0)     AS trade_user_count,\n     coalesce(nouse.coupon_used, 0) + coalesce(used.coupon_used, 0)               AS coupon_used,\n     coalesce(nouse.total_coupon_count, 0) + coalesce(used.total_coupon_count, 0) AS total_coupon_count,\n     coalesce(nouse.order_gmv, 0) + coalesce(used.order_gmv, 0)                   AS order_gmv,\n     coalesce(nouse.period, used.period)                                          AS period \n   FROM (SELECT\n           tenantId,\n           service_order_id,\n           gmv,\n           coupon_gmv,\n           tc,\n           pct,\n           trade_user_count,\n           coupon_used,\n           total_coupon_count,\n           order_gmv,\n           period\n         FROM dws_coupon_trd_stat_new_nouse\n         WHERE ds = '${bdp.system.bizdate}') nouse FULL OUTER JOIN (SELECT\n                                                                      tenantId,\n                                                                      service_order_id,\n                                                                      gmv,\n                                                                      coupon_gmv,\n                                                                      tc,\n                                                                      pct,\n                                                                      trade_user_count,\n                                                                      coupon_used,\n                                                                      total_coupon_count,\n                                                                      order_gmv,\n                                                                      period\n                                                                    FROM dws_coupon_trd_stat_new_use\n                                                                    WHERE ds = '${bdp.system.bizdate}') used\n       ON nouse.tenantId = used.tenantId AND nouse.service_order_id = used.service_order_id) trd\n  FULL OUTER JOIN (SELECT\n                     coalesce(nouse.tenantId, used.tenantId)                 AS tenantId,\n                     coalesce(nouse.service_order_id, used.service_order_id) AS service_order_id,\n                     coalesce(nouse.sales, 0) + coalesce(used.sales, 0)      AS sales\n                   FROM (SELECT\n                           tenantId,\n                           service_order_id,\n                           sales\n                         FROM dws_coupon_dish_stat_new_nouse\n                         WHERE ds = '${bdp.system.bizdate}') nouse FULL OUTER JOIN (SELECT\n                                                                                      tenantId,\n                                                                                      service_order_id,\n                                                                                      sales\n                                                                                    FROM dws_coupon_dish_stat_new_use\n                                                                                    WHERE\n                                                                                      ds = '${bdp.system.bizdate}') used\n                       ON nouse.tenantId = used.tenantId AND nouse.service_order_id = used.service_order_id) dish\n    ON trd.tenantId = dish.tenantId AND trd.service_order_id = dish.service_order_id\n  FULL OUTER JOIN (SELECT\n                     service_order_id,\n                     tenantId,\n                     sum(coupon_dist)   AS coupon_dist,\n                     sum(coupon_acpt)   AS coupon_acpt \n                   FROM dws_coupon_send_1d\n                   WHERE ds <= '${bdp.system.bizdate}' GROUP BY tenantId,service_order_id) send\n    ON trd.tenantId = send.tenantId AND trd.service_order_id = send.service_order_id;\n\n",
                                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 63,
                                    "nodePid": 1191,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 5 * * ?"
                                },
                                "id": 278855,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "3a0490e9",
                                "jobKey": "cronTrigger_1040_20190117050000",
                                "jobName": "cronJob_job_ads_nrs_coupon_statistic_comb_20190117050000",
                                "status": 18,
                                "taskId": 1040,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 05:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": [
                                    {
                                        "batchTask": {
                                            "id": 1042,
                                            "gmtCreate": 1537234728000,
                                            "gmtModified": 1537613884000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "job_ads_nrs_coupon_statistic",
                                            "taskType": 0,
                                            "computeType": 1,
                                            "engineType": 1,
                                            "sqlText": "CREATE TABLE IF NOT EXISTS ads_nrs_coupon_statistic(\n  id               STRING COMMENT '主键ID',\n  tenantId         STRING COMMENT '租户ID',\n  service_order_id STRING COMMENT '发券活动ID',\n  gmv              DOUBLE COMMENT '服务期内总营业额',\n  coupon_gmv       DOUBLE COMMENT '服务期内核券营业额',\n  avg_tc           DOUBLE COMMENT '服务期内平均交易数',\n  old_avg_tc       DOUBLE COMMENT '历史平均交易数',\n  pct              DOUBLE COMMENT '服务期内客单价',\n  old_pct          DOUBLE COMMENT '历史客单价',\n  apr              DOUBLE COMMENT '服务期内连带率',\n  old_apr          DOUBLE COMMENT '历史连带率',\n  coupon_dist      BIGINT COMMENT '总发券量',\n  coupon_acpt      BIGINT COMMENT '券总领取量',\n  coupon_used      BIGINT COMMENT '核销量',\n  roi              DOUBLE COMMENT '服务期内回报率',\n  old_roi          DOUBLE COMMENT '历史回报率',\n  gmt_created      STRING COMMENT '插入时间',\n  gmt_modified     STRING COMMENT '更新时间'\n)COMMENT '总的智能发券表' \nPARTITIONED BY(ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE ads_nrs_coupon_statistic PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  concat(old.tenantId, '0000', old.service_order_id, '000') AS id,\n  old.tenantId,\n  old.service_order_id,\n  new.gmv,\n  new.coupon_gmv,\n  new.avg_tc,\n  old.old_avg_tc,\n  new.pct,\n  old.old_pct,\n  new.apr,\n  old.old_apr,\n  new.coupon_dist,\n  new.coupon_acpt,\n  new.coupon_used,\n  new.roi,\n  old.old_roi,\n  '${bdp.system.cyctime}'                                             AS gmt_created,\n  '${bdp.system.cyctime}'                                             AS gmt_modified\nFROM ads_nrs_bd_coupon_stat_old old INNER JOIN ads_nrs_bd_coupon_stat_new new\n    ON old.tenantId = new.tenantId AND old.service_order_id = new.service_order_id AND new.ds = '${bdp.system.bizdate}'\nWHERE old.ds = '${bdp.system.bizdate}';\n",
                                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 23,
                                            "nodePid": 1191,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 30 5 * * ?"
                                        },
                                        "id": 278909,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "3a3de813",
                                        "jobKey": "cronTrigger_1042_20190117053000",
                                        "jobName": "cronJob_job_ads_nrs_coupon_statistic_20190117053000",
                                        "status": 18,
                                        "taskId": 1042,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:30:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": [
                                            {
                                                "batchTask": {
                                                    "id": 1044,
                                                    "gmtCreate": 1537252366000,
                                                    "gmtModified": 1537613949000,
                                                    "isDeleted": 0,
                                                    "tenantId": 129,
                                                    "projectId": 77,
                                                    "name": "cdp_dt2mysql_nrs_coupon_statistic",
                                                    "taskType": 2,
                                                    "computeType": 1,
                                                    "engineType": 0,
                                                    "sqlText": "",
                                                    "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"45\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                                    "periodType": null,
                                                    "scheduleStatus": 2,
                                                    "submitStatus": 1,
                                                    "modifyUserId": 90,
                                                    "createUserId": 90,
                                                    "ownerUserId": 90,
                                                    "version": 1,
                                                    "nodePid": 1178,
                                                    "taskDesc": "",
                                                    "mainClass": "",
                                                    "exeArgs": "",
                                                    "flowId": 0,
                                                    "createUser": {
                                                        "id": 90,
                                                        "gmtCreate": 1535092930000,
                                                        "gmtModified": 1535092930000,
                                                        "isDeleted": 0,
                                                        "userName": "yizhou@dtstack.com",
                                                        "phoneNumber": null,
                                                        "dtuicUserId": 6999,
                                                        "email": "",
                                                        "status": 0,
                                                        "defaultProjectId": null
                                                    },
                                                    "modifyUser": null,
                                                    "ownerUser": null,
                                                    "taskPeriodId": 2,
                                                    "taskPeriodType": "天任务",
                                                    "nodePName": null,
                                                    "readWriteLockVO": null,
                                                    "userId": null,
                                                    "lockVersion": null,
                                                    "taskVariables": null,
                                                    "forceUpdate": false,
                                                    "subNodes": null,
                                                    "relatedTasks": null,
                                                    "createModel": 0,
                                                    "operateModel": 0,
                                                    "pythonVersion": 0,
                                                    "learningType": 0,
                                                    "input": null,
                                                    "output": null,
                                                    "options": null,
                                                    "flowName": null,
                                                    "syncModel": 0,
                                                    "increColumn": null,
                                                    "taskVOS": null,
                                                    "subTaskVOS": null,
                                                    "resourceList": null,
                                                    "refResourceList": null,
                                                    "taskVersions": null,
                                                    "cron": "0 45 5 * * ?"
                                                },
                                                "id": 278917,
                                                "gmtCreate": 1547647312000,
                                                "gmtModified": 1547647312000,
                                                "isDeleted": 0,
                                                "tenantId": null,
                                                "projectId": null,
                                                "jobId": "3a93a7a2",
                                                "jobKey": "cronTrigger_1044_20190117054500",
                                                "jobName": "cronJob_cdp_dt2mysql_nrs_coupon_statistic_20190117054500",
                                                "status": 18,
                                                "taskId": 1044,
                                                "createUserId": 90,
                                                "type": 0,
                                                "businessDate": "2019-01-16 ",
                                                "cycTime": "2019-01-17 05:45:00",
                                                "execStartTime": null,
                                                "execEndTime": null,
                                                "execTime": null,
                                                "execStartDate": null,
                                                "execEndDate": null,
                                                "taskPeriodId": 2,
                                                "taskPeriodType": "天任务",
                                                "jobVOS": null,
                                                "batchEngineJob": {
                                                    "id": 297415,
                                                    "gmtCreate": 1547647312000,
                                                    "gmtModified": 1547675105000,
                                                    "isDeleted": 0,
                                                    "status": 18,
                                                    "jobId": "3a93a7a2",
                                                    "engineJobId": null,
                                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                                    "engineLog": "",
                                                    "execStartTime": null,
                                                    "execEndTime": null,
                                                    "execTime": 0
                                                },
                                                "subNodes": null,
                                                "flowJobId": "0",
                                                "relatedJobs": null,
                                                "isDirty": 0
                                            }
                                        ],
                                        "batchEngineJob": {
                                            "id": 297407,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547674205000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "3a3de813",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    }
                                ],
                                "batchEngineJob": {
                                    "id": 297353,
                                    "gmtCreate": 1547647312000,
                                    "gmtModified": 1547672407000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "3a0490e9",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297304,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547669707000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "05f94eeb",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 1012,
                            "gmtCreate": 1536821910000,
                            "gmtModified": 1537510775000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_ads_nrs_coupon_daily_sales_trend",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_coupon_daily_sales_trend (\n  id                 STRING COMMENT '主键ID',\n  tenantId           STRING COMMENT '租户ID',\n  trend_date         STRING COMMENT '日期天',\n  gmv                DOUBLE COMMENT '每日总营业额',\n  coupon_gmv         DOUBLE COMMENT '每日核券营业额,让利所获营业额',\n  tc                 BIGINT COMMENT '每日交易数',\n  pct                DOUBLE COMMENT '每日客单价',\n  apr                DOUBLE COMMENT '每日连带率',\n  coupon_apr         DOUBLE COMMENT '核销每日连带率',\n  sales              BIGINT COMMENT '每日售出商品总数',\n  trade_user_count   BIGINT COMMENT '日交易总人数',\n  coupon_dist        BIGINT COMMENT '总日发券量',\n  coupon_acpt        BIGINT COMMENT '券日领取量',\n  coupon_used        BIGINT COMMENT '日核销量',\n  roi                DOUBLE COMMENT '每日回报率',\n  total_coupon_count DOUBLE COMMENT '每日让利成本',\n  order_gmv          DOUBLE COMMENT '每日订单总额',\n  gmt_created        STRING COMMENT '插入时间',\n  gmt_modified       STRING COMMENT '更新时间'\n) COMMENT '每日智能发券报表'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE ads_nrs_coupon_daily_sales_trend PARTITION (ds = '${bdp.system.bizdate}')\nSELECT \nconcat(coalesce(trd.tenantId,dish.tenantId,send.tenantId),'${bdp.system.bizdate}') AS id, \ncoalesce(trd.tenantId,dish.tenantId,send.tenantId)                            AS tenantId,\nconcat(substr(coalesce(trd.statDate,dish.statDate,send.statDate), 0, 4), \n  '-', substr(coalesce(trd.statDate,dish.statDate,send.statDate), 5, 2), \n  '-',substr(coalesce(trd.statDate,dish.statDate,send.statDate), 7, 2))       AS trend_date,\ncoalesce(trd.gmv, 0)                                                          AS gmv,\ncoalesce(trd.coupon_gmv, 0)                                                   AS coupon_gmv,\ncoalesce(trd.tc, 0)                                                           AS tc,\ncoalesce(trd.pct, 0)                                                          AS pct,\ncoalesce(coalesce(dish.sales,0) / coalesce(trd.tc, 0), 0)                     AS apr,\n0                                                                             AS coupon_apr,\ncoalesce(dish.sales,0)                                                        AS sales,\ncoalesce(trd.trade_user_count,0)                                              AS trade_user_count,\ncoalesce(send.coupon_dist, 0)                                                 AS coupon_dist,\ncoalesce(send.coupon_acpt, 0)                                                 AS coupon_acpt,\ncoalesce(trd.coupon_used, 0)                                                  AS coupon_used,\ncoalesce(coalesce(trd.coupon_gmv,0) / coalesce(trd.total_coupon_count, 0), 0) AS roi,\ncoalesce(trd.total_coupon_count, 0)                                           AS total_coupon_count,\ncoalesce(trd.order_gmv, 0)                                                    AS order_gmv,\n'${bdp.system.cyctime}'                                                       AS gmt_created,\n'${bdp.system.cyctime}'                                                       AS gmt_modified\nFROM\n  (SELECT\n     statDate,\n     tenantId,\n     sum(gmv)                        AS gmv,\n     sum(coupon_gmv)                 AS coupon_gmv,\n     sum(tc)                         AS tc,\n     coalesce(sum(gmv) / sum(tc), 0) AS pct,\n     sum(trade_user_count)           AS trade_user_count,\n     sum(coupon_used)                AS coupon_used,\n     sum(total_coupon_count)         AS total_coupon_count,\n     sum(order_gmv)                  AS order_gmv\n   FROM dws_coupon_trd_1d\n   WHERE ds = '${bdp.system.bizdate}' GROUP BY tenantId, statDate) trd\n  FULL OUTER JOIN (SELECT\n                     statDate,\n                     tenantId,\n                     sum(sales)              AS sales\n                   FROM dws_coupon_dish_1d\n                   WHERE ds = '${bdp.system.bizdate}' GROUP BY tenantId,statDate) dish\n    ON trd.tenantId = dish.tenantId AND trd.statDate = dish.statDate\n  FULL OUTER JOIN (SELECT\n                     statDate,\n                     tenantId,\n                     sum(coupon_dist)   AS coupon_dist,\n                     sum(coupon_acpt)   AS coupon_acpt \n                   FROM dws_coupon_send_1d\n                   WHERE ds = '${bdp.system.bizdate}' GROUP BY tenantId,statDate) send\n    ON trd.tenantId = send.tenantId AND trd.statDate = send.statDate;",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 47,
                            "nodePid": 1190,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 30 4 * * ?"
                        },
                        "id": 278825,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "7bf7f9ed",
                        "jobKey": "cronTrigger_1012_20190117043000",
                        "jobName": "cronJob_job_ads_nrs_coupon_daily_sales_trend_20190117043000",
                        "status": 18,
                        "taskId": 1012,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:30:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1045,
                                    "gmtCreate": 1537253213000,
                                    "gmtModified": 1537253503000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "cdp_dt2mysql_nrs_coupon_daily_sales_trend_script",
                                    "taskType": 2,
                                    "computeType": 1,
                                    "engineType": 0,
                                    "sqlText": "eyJqb2IiOiJ7XG4gIFwiam9iXCIgOiB7XG4gICAgXCJjb250ZW50XCIgOiBbIHtcbiAgICAgIFwicmVhZGVyXCIgOiB7XG4gICAgICAgIFwicGFyYW1ldGVyXCIgOiB7XG4gICAgICAgICAgXCJwYXRoXCIgOiBcImhkZnM6Ly9uczEvdXNlci9oaXZlL3dhcmVob3VzZS9pbnRlbF9jYXJkX2Rldi5kYi9hZHNfbnJzX2NvdXBvbl9kYWlseV9zYWxlc190cmVuZC9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcbiAgICAgICAgICBcImhhZG9vcENvbmZpZ1wiIDoge1xuICAgICAgICAgICAgXCJkZnMuaGEubmFtZW5vZGVzLm5zMVwiIDogXCJubjEsbm4yXCIsXG4gICAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCIgOiBcIm5vZGUwMDY6OTAwMFwiLFxuICAgICAgICAgICAgXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiIDogXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXG4gICAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXCIgOiBcIm5vZGUwMDU6OTAwMFwiLFxuICAgICAgICAgICAgXCJkZnMubmFtZXNlcnZpY2VzXCIgOiBcIm5zMVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImNvbHVtblwiIDogWyB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiaWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDAsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwidGVuYW50SWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDEsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwidHJlbmRfZGF0ZVwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMixcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJkYXRlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ212XCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiAzLFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImRvdWJsZVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcImNvdXBvbl9nbXZcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDQsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiZG91YmxlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwidGNcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDUsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiYmlnaW50XCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwicGN0XCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA2LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImRvdWJsZVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcImFwclwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogNyxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJkb3VibGVcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFwibmFtZVwiIDogXCJjb3Vwb25fYXByXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA4LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImRvdWJsZVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInNhbGVzXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA5LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImJpZ2ludFwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInRyYWRlX3VzZXJfY291bnRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDEwLFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImJpZ2ludFwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcImNvdXBvbl9kaXN0XCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiAxMSxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJiaWdpbnRcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFwibmFtZVwiIDogXCJjb3Vwb25fYWNwdFwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMTIsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiYmlnaW50XCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiY291cG9uX3VzZWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDEzLFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImJpZ2ludFwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInJvaVwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMTQsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiZG91YmxlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwidG90YWxfY291cG9uX2NvdW50XCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiAxNSxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJkb3VibGVcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFwibmFtZVwiIDogXCJnbXRfY3JlYXRlZFwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMTcsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ210X21vZGlmaWVkXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiAxOCxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJzdHJpbmdcIlxuICAgICAgICAgIH0gXSxcbiAgICAgICAgICBcImRlZmF1bHRGU1wiIDogXCJoZGZzOi8vbnMxXCIsXG4gICAgICAgICAgXCJmaWVsZERlbGltaXRlclwiIDogXCJcXHUwMDAxXCIsXG4gICAgICAgICAgXCJlbmNvZGluZ1wiIDogXCJ1dGYtOFwiLFxuICAgICAgICAgIFwiZmlsZVR5cGVcIiA6IFwib3JjXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJuYW1lXCIgOiBcImhkZnNyZWFkZXJcIlxuICAgICAgfSxcbiAgICAgIFwid3JpdGVyXCIgOiB7XG4gICAgICAgIFwibmFtZVwiIDogXCJteXNxbHdyaXRlclwiLFxuICAgICAgICBcInBhcmFtZXRlclwiIDoge1xuICAgICAgICAgIFwicG9zdFNxbFwiIDogWyBdLFxuICAgICAgICAgIFwicGFzc3dvcmRcIiA6IFwiZHRzdGFjazIwMThcIixcbiAgICAgICAgICBcInNlc3Npb25cIiA6IFsgXSxcbiAgICAgICAgICBcImNvbHVtblwiIDogWyBcImlkXCIsIFwidGVuYW50X2lkXCIsIFwidHJlbmRfZGF0ZVwiLCBcImdtdlwiLCBcImNvdXBvbl9nbXZcIiwgXCJ0Y1wiLCBcInBjdFwiLCBcImFwclwiLCBcImNvdXBvbl9hcHJcIiwgXCJzYWxlc1wiLCBcInRyYWRlX3VzZXJfY291bnRcIiwgXCJjb3Vwb25fZGlzdFwiLCBcImNvdXBvbl9hY3B0XCIsIFwiY291cG9uX3VzZWRcIiwgXCJyb2lcIiwgXCJ0b3RhbF9jb3Vwb25fY291bnRcIiwgXCJnbXRfY3JlYXRlZFwiLCBcImdtdF9tb2RpZmllZFwiIF0sXG4gICAgICAgICAgXCJjb25uZWN0aW9uXCIgOiBbIHtcbiAgICAgICAgICAgIFwiamRiY1VybFwiIDogXCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFxuICAgICAgICAgICAgXCJ0YWJsZVwiIDogWyBcIm5yc19jb3Vwb25fZGFpbHlfc2FsZXNfdHJlbmRcIiBdXG4gICAgICAgICAgfSBdLFxuICAgICAgICAgIFwid3JpdGVNb2RlXCIgOiBcInJlcGxhY2VcIixcbiAgICAgICAgICBcInNvdXJjZUlkc1wiIDogWyA5MiBdLFxuICAgICAgICAgIFwicHJlU3FsXCIgOiBbIF0sXG4gICAgICAgICAgXCJ1c2VybmFtZVwiIDogXCJucnNfemhpcXVhblwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IF0sXG4gICAgXCJzZXR0aW5nXCIgOiB7XG4gICAgICBcImRpcnR5XCIgOiB7XG4gICAgICAgIFwicGF0aFwiIDogXCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX2NvdXBvbl9kYWlseV9zYWxlc190cmVuZF9cIixcbiAgICAgICAgXCJoYWRvb3BDb25maWdcIiA6IHtcbiAgICAgICAgICBcImRmcy5oYS5uYW1lbm9kZXMubnMxXCIgOiBcIm5uMSxubjJcIixcbiAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCIgOiBcIm5vZGUwMDY6OTAwMFwiLFxuICAgICAgICAgIFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcIiA6IFwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFxuICAgICAgICAgIFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIiA6IFwibm9kZTAwNTo5MDAwXCIsXG4gICAgICAgICAgXCJkZnMubmFtZXNlcnZpY2VzXCIgOiBcIm5zMVwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcInNwZWVkXCIgOiB7XG4gICAgICAgIFwiY2hhbm5lbFwiIDogMSxcbiAgICAgICAgXCJieXRlc1wiIDogMTA0ODU3NlxuICAgICAgfSxcbiAgICAgIFwiZXJyb3JMaW1pdFwiIDoge1xuICAgICAgICBcInJlY29yZFwiIDogMTAsXG4gICAgICAgIFwicGVyY2VudGFnZVwiIDogMC4wXG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiY3JlYXRlTW9kZWwiOjF9",
                                    "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 4,
                                    "nodePid": 1178,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 5 * * ?"
                                },
                                "id": 278856,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547647312000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "ba42c954",
                                "jobKey": "cronTrigger_1045_20190117050000",
                                "jobName": "cronJob_cdp_dt2mysql_nrs_coupon_daily_sales_trend_script_20190117050000",
                                "status": 18,
                                "taskId": 1045,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 05:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": null,
                                "batchEngineJob": {
                                    "id": 297354,
                                    "gmtCreate": 1547647312000,
                                    "gmtModified": 1547672407000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "ba42c954",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297323,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547670607000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "7bf7f9ed",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 1085,
                            "gmtCreate": 1537502069000,
                            "gmtModified": 1538007912000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_ads_nrs_coupon_daily_sales_trend_ser",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_coupon_daily_sales_trend_ser (\n  tenantId           STRING COMMENT '租户ID',\n  service_order_id   STRING COMMENT '发券活动ID',\n  trend_date         STRING COMMENT '日期天',\n  gmv                DOUBLE COMMENT '每日总营业额',\n  coupon_gmv         DOUBLE COMMENT '每日核券营业额,让利所获营业额',\n  tc                 BIGINT COMMENT '每日交易数',\n  pct                DOUBLE COMMENT '每日客单价',\n  apr                DOUBLE COMMENT '每日连带率',\n  coupon_apr         DOUBLE COMMENT '核销每日连带率',\n  sales              BIGINT COMMENT '每日售出商品总数',\n  trade_user_count   BIGINT COMMENT '日交易总人数',\n  coupon_dist        BIGINT COMMENT '总日发券量',\n  coupon_acpt        BIGINT COMMENT '券日领取量',\n  coupon_used        BIGINT COMMENT '日核销量',\n  roi                DOUBLE COMMENT '每日回报率',\n  total_coupon_count DOUBLE COMMENT '每日让利成本',\n  order_gmv          DOUBLE COMMENT '每日订单总额',\n  gmt_created        STRING COMMENT '插入时间',\n  gmt_modified       STRING COMMENT '更新时间'\n) COMMENT '每日智能发券报表带发券活动ID'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE ads_nrs_coupon_daily_sales_trend_ser PARTITION (ds = '${bdp.system.bizdate}')\nSELECT \ncoalesce(trd.tenantId,dish.tenantId,send.tenantId)                            AS tenantId,\ncoalesce(send.service_order_id,trd.service_order_id,dish.service_order_id)    AS service_order_id,\nconcat(substr(coalesce(trd.statDate,dish.statDate,send.statDate), 0, 4), \n  '-', substr(coalesce(trd.statDate,dish.statDate,send.statDate), 5, 2), \n  '-',substr(coalesce(trd.statDate,dish.statDate,send.statDate), 7, 2))       AS trend_date,\ncoalesce(trd.gmv, 0)                                                          AS gmv,\ncoalesce(trd.coupon_gmv, 0)                                                   AS coupon_gmv,\ncoalesce(trd.tc, 0)                                                           AS tc,\ncoalesce(trd.pct, 0)                                                          AS pct,\ncoalesce(coalesce(dish.sales,0) / coalesce(trd.tc, 0), 0)                     AS apr,\n0                                                                             AS coupon_apr,\ncoalesce(dish.sales,0)                                                        AS sales,\ncoalesce(trd.trade_user_count,0)                                              AS trade_user_count,\ncoalesce(send.coupon_dist, 0)                                                 AS coupon_dist,\ncoalesce(send.coupon_acpt, 0)                                                 AS coupon_acpt,\ncoalesce(trd.coupon_used, 0)                                                  AS coupon_used,\ncoalesce(coalesce(trd.coupon_gmv,0) / coalesce(trd.total_coupon_count, 0), 0) AS roi,\ncoalesce(trd.total_coupon_count, 0)                                           AS total_coupon_count,\ncoalesce(trd.order_gmv, 0)                                                    AS order_gmv,\n'${bdp.system.cyctime}'                                                       AS gmt_created,\n'${bdp.system.cyctime}'                                                       AS gmt_modified\nFROM\n  (SELECT\n     statDate,\n     tenantId,\n     min(service_order_id)           AS service_order_id,\n     sum(gmv)                        AS gmv,\n     sum(coupon_gmv)                 AS coupon_gmv,\n     sum(tc)                         AS tc,\n     coalesce(sum(gmv) / sum(tc), 0) AS pct,\n     sum(trade_user_count)           AS trade_user_count,\n     sum(coupon_used)                AS coupon_used,\n     sum(total_coupon_count)         AS total_coupon_count,\n     sum(order_gmv)                  AS order_gmv\n   FROM dws_coupon_trd_1d\n   WHERE ds = '${bdp.system.bizdate}' GROUP BY tenantId, statDate) trd\n  FULL OUTER JOIN (SELECT\n                     statDate,\n                     tenantId,\n                     min(service_order_id)   AS service_order_id,\n                     sum(sales)              AS sales\n                   FROM dws_coupon_dish_1d\n                   WHERE ds = '${bdp.system.bizdate}' GROUP BY tenantId,statDate) dish\n    ON trd.tenantId = dish.tenantId AND trd.statDate = dish.statDate\n  FULL OUTER JOIN (SELECT\n                     statDate,\n                     tenantId,\n                     service_order_id,\n                     coupon_dist   AS coupon_dist,\n                     coupon_acpt   AS coupon_acpt \n                   FROM dws_coupon_send_1d\n                   WHERE ds = '${bdp.system.bizdate}' AND isnotnull(service_order_id)) send\n    ON trd.tenantId = send.tenantId AND trd.statDate = send.statDate;\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 6,
                            "nodePid": 1190,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 30 4 * * ?"
                        },
                        "id": 278828,
                        "gmtCreate": 1547647312000,
                        "gmtModified": 1547647312000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "abae9830",
                        "jobKey": "cronTrigger_1085_20190117043000",
                        "jobName": "cronJob_job_ads_nrs_coupon_daily_sales_trend_ser_20190117043000",
                        "status": 18,
                        "taskId": 1085,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:30:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297326,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547670607000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "abae9830",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297191,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547668893000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "e46e72a4",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 959,
                    "gmtCreate": 1536571318000,
                    "gmtModified": 1537154763000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_dws_ope_trd_pay_tenant_1d",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS dws_ope_trd_pay_tenant_1d(\nstatDate                        STRING      COMMENT '统计日期' \n,tenantId                       STRING      COMMENT '租户ID'\n,guest_cnt_1d                   BIGINT      COMMENT '日散客数'\n,act_member_gmv_1d              DOUBLE      COMMENT '日激活会员交易额'\n,unact_member_gmv_1d            DOUBLE      COMMENT '日未激活会员交易额'\n,guest_gmv_1d                   DOUBLE      COMMENT '日散客交易额'\n,act_member_tc_1d               BIGINT      COMMENT '日激活会员交易次数'\n,unact_member_tc_1d             BIGINT      COMMENT '日未激活会员交易次数'\n) COMMENT '最近一天租户粒度销售汇总表'\nPARTITIONED BY (ds STRING) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\n-- comment (0-散客，1-未激活，2-激活)\nINSERT OVERWRITE TABLE dws_ope_trd_pay_tenant_1d PARTITION (ds)\nSELECT\n  '${bdp.system.bizdate}'                          AS statDate,\n  total.tenantId,\n  coalesce(sum(CASE total.isIndividual\n               WHEN 0\n                 THEN 1 END), 0)                   AS guest_cnt_1d,\n  coalesce(sum(CASE total.isIndividual\n               WHEN 2\n                 THEN total.custActualPay END), 0) AS act_member_gmv_1d,\n  coalesce(sum(CASE total.isIndividual\n               WHEN 1\n                 THEN total.custActualPay END), 0) AS unact_member_gmv_1d,\n  coalesce(sum(CASE total.isIndividual\n               WHEN 0\n                 THEN total.custActualPay END), 0) AS guest_gmv_1d,\n  coalesce(sum(CASE total.isIndividual\n               WHEN 2\n                 THEN 1 END), 0)                   AS act_member_tc,\n  coalesce(sum(CASE total.isIndividual\n               WHEN 1\n                 THEN 1 END), 0)                   AS unact_member_tc,\n  total.paymentTime                                AS ds\nFROM\n  (SELECT\n     o.tenantId,\n     if(isnull(o.customerId), 0,\n        if(isnull(o.memberId), 1, 2))       AS isIndividual,    -- (0-散客，1-未激活，2-激活)\n     o.shopActualAmount                     AS shopActualAmount,\n     date_format(o.paymentTime, 'yyyyMMdd') AS paymentTime,\n     o.custActualPay\n   FROM dwd_ord_trd_d o\n   WHERE o.ds = '${bdp.system.bizdate}' AND o.tradeStatus = 4) total\nGROUP BY total.tenantId, total.paymentTime;\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 20,
                    "nodePid": 1168,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278695,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "4402628a",
                "jobKey": "cronTrigger_959_20190117040000",
                "jobName": "cronJob_job_dws_ope_trd_pay_tenant_1d_20190117040000",
                "status": 18,
                "taskId": 959,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 962,
                            "gmtCreate": 1536576588000,
                            "gmtModified": 1536835705000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_ope_trd_pay_tenant_std",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS dws_ope_trd_pay_tenant_std(\nstatDate                        STRING      COMMENT '统计日期' \n,tenantId                       STRING      COMMENT '租户ID'\n,guest_cnt_std                  BIGINT      COMMENT '散客数'\n,act_member_gmv_std             DOUBLE      COMMENT '历史激活会员交易额'\n,unact_member_gmv_std           DOUBLE      COMMENT '历史未激活会员交易额'\n,guest_gmv_std                  DOUBLE      COMMENT '历史散客交易额'\n,act_member_tc_std              BIGINT      COMMENT '历史激活会员交易次数'\n,unact_member_tc_std            BIGINT      COMMENT '历史未激活会员交易次数'\n) COMMENT '截止今日租户粒度销售汇总表'\nPARTITIONED BY (ds STRING) STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE dws_ope_trd_pay_tenant_std PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'  AS statDate,\n  tenantId                 AS guest_cnt_1d,\n  sum(guest_cnt_1d)        AS guest_cnt_std,\n  sum(act_member_gmv_1d)   AS act_member_gmv_std,\n  sum(unact_member_gmv_1d) AS unact_member_gmv_std,\n  sum(guest_gmv_1d)        AS guest_gmv_std,\n  sum(act_member_tc_1d)    AS act_member_tc_std,\n  sum(unact_member_tc_1d)  AS unact_member_tc_std\nFROM dws_ope_trd_pay_tenant_1d WHERE ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId;\n\n-- SELECT\n--   '${bdp.system.bizdate}'                                                    AS statDate,\n--   coalesce(d.tenantId, std.tenantId)                                         AS tenantId,\n--   coalesce(d.guest_cnt_1d, 0) + coalesce(std.guest_cnt_std, 0)               AS guest_cnt_std,\n--   coalesce(d.act_member_gmv_1d, 0) + coalesce(std.act_member_gmv_std, 0)     AS act_member_gmv_std,\n--   coalesce(d.unact_member_gmv_1d, 0) + coalesce(std.unact_member_gmv_std, 0) AS unact_member_gmv_std,\n--   coalesce(d.guest_gmv_1d, 0) + coalesce(std.guest_gmv_std, 0)               AS guest_gmv_std,\n--   coalesce(d.act_member_tc_1d, 0) + coalesce(std.act_member_tc_std, 0)       AS act_member_tc_std,\n--   coalesce(d.unact_member_tc_1d, 0) + coalesce(std.unact_member_tc_std, 0)   AS unact_member_tc_std\n-- FROM (\n--   SELECT                      \n--   tenantId     \n--   ,guest_cnt_1d \n--   ,act_member_gmv_1d  \n--   ,unact_member_gmv_1d\n--   ,guest_gmv_1d       \n--   ,act_member_tc_1d   \n--   ,unact_member_tc_1d\n--   FROM dws_ope_trd_pay_tenant_1d WHERE ds = '${bdp.system.bizdate}') d\n--   FULL OUTER JOIN (\n--     SELECT\n--      tenantId,\n--      guest_cnt_std,\n--      act_member_gmv_std,\n--      unact_member_gmv_std,\n--      guest_gmv_std,\n--      act_member_tc_std,\n--      unact_member_tc_std\n--     FROM \n--     dws_ope_trd_pay_tenant_std WHERE ds = '${key_2d}') std\n--   ON d.tenantId = std.tenantId;\n\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 24,
                            "nodePid": 1168,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 4 * * ?"
                        },
                        "id": 278698,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "909ea547",
                        "jobKey": "cronTrigger_962_20190117040000",
                        "jobName": "cronJob_job_dws_ope_trd_pay_tenant_std_20190117040000",
                        "status": 18,
                        "taskId": 962,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 974,
                                    "gmtCreate": 1536634403000,
                                    "gmtModified": 1537408093000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "job_ads_nrs_mp_overview",
                                    "taskType": 0,
                                    "computeType": 1,
                                    "engineType": 1,
                                    "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_mp_overview (\nid                      STRING      COMMENT '主键ID'\n,tenantId               STRING      COMMENT '租户ID'\n,act_member_cnt         BIGINT      COMMENT '激活会员数'\n,unact_member_cnt       BIGINT      COMMENT '未激活会员数'\n,guest_cnt              BIGINT      COMMENT '散客数'\n,incr_member_cnt_today  BIGINT      COMMENT '当日新增会员数'\n,act_member_gmv         DOUBLE      COMMENT '激活会员交易额'\n,unact_member_gmv       DOUBLE      COMMENT '未激活会员交易额'\n,guest_gmv              DOUBLE      COMMENT '散客交易额'\n,act_member_avg_tc      DOUBLE      COMMENT '激活会员平均交易次数'\n,unact_member_avg_tc    DOUBLE      COMMENT '未激活会员平均交易次数'\n,act_member_pct         DOUBLE      COMMENT '激活会员平均客单价'\n,unact_member_pct       DOUBLE      COMMENT '未激活会员平均客单价'\n,gmt_created            STRING      COMMENT '创建时间'\n,gmt_modified           STRING      COMMENT '修改时间'\n) COMMENT '会员洞察纵览表'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE ads_nrs_mp_overview PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  t.id                                                                               AS id,\n  t.id                                                                               AS tenantId,\n  coalesce(tm.act_member_cnt, 0)                                                     AS act_member_cnt,\n  coalesce(tm.unact_member_cnt, 0)                                                   AS unact_member_cnt,\n  coalesce(pts.guest_cnt_std, 0)                                                     AS guest_cnt,\n  coalesce(tm.incr_member_cnt_today, 0)                                              AS incr_member_cnt_today,\n  coalesce(pts.act_member_gmv_std, 0)                                                AS act_member_gmv,\n  coalesce(pts.unact_member_gmv_std,0)                                               AS unact_member_gmv,\n  coalesce(pts.guest_gmv_std,0)                                                      AS guest_gmv,\n  if(isnull(tm.act_member_cnt) OR tm.act_member_cnt = 0, 0, pts.act_member_tc_std /\n                                                            tm.act_member_cnt)       AS act_member_avg_tc,\n  if(isnull(tm.unact_member_cnt) OR tm.unact_member_cnt = 0, 0, pts.unact_member_tc_std /\n                                                                tm.unact_member_cnt) AS unact_member_avg_tc,\n  coalesce(if(pts.act_member_tc_std = 0, 0, pts.act_member_gmv_std /\n                                   pts.act_member_tc_std),0)                         AS act_member_pct,\n  coalesce(if(pts.unact_member_tc_std = 0, 0, pts.unact_member_gmv_std /\n                                     pts.unact_member_tc_std),0)                     AS unact_member_pct,\n  '${bdp.system.cyctime}'                                                            AS gmt_created,\n  '${bdp.system.cyctime}'                                                            AS gmt_modified\nFROM ods_nrs_tenant t\n  LEFT OUTER JOIN dws_ope_trd_pay_tenant_std pts ON t.id = pts.tenantId AND pts.ds = '${bdp.system.bizdate}'\n  LEFT OUTER JOIN dws_ope_tenant_member tm ON t.id = tm.tenantId AND tm.ds = '${bdp.system.bizdate}'\nWHERE t.ds = '${bdp.system.bizdate}'; \n\n",
                                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 15,
                                    "nodePid": 1169,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 30 4 * * ?"
                                },
                                "id": 278821,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "c7ed84ec",
                                "jobKey": "cronTrigger_974_20190117043000",
                                "jobName": "cronJob_job_ads_nrs_mp_overview_20190117043000",
                                "status": 18,
                                "taskId": 974,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 04:30:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": [
                                    {
                                        "batchTask": {
                                            "id": 951,
                                            "gmtCreate": 1536510144000,
                                            "gmtModified": 1536987000000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_mp_overview",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tcF9vdmVydmlldy9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9LFwiY29sdW1uXCI6W3tcIm5hbWVcIjpcImlkXCIsXCJpbmRleFwiOjAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwidGVuYW50SWRcIixcImluZGV4XCI6MSxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJhY3RfbWVtYmVyX2NudFwiLFwiaW5kZXhcIjoyLFwidHlwZVwiOlwiYmlnaW50XCJ9LHtcIm5hbWVcIjpcInVuYWN0X21lbWJlcl9jbnRcIixcImluZGV4XCI6MyxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJndWVzdF9jbnRcIixcImluZGV4XCI6NCxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJpbmNyX21lbWJlcl9jbnRfdG9kYXlcIixcImluZGV4XCI6NSxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJhY3RfbWVtYmVyX2dtdlwiLFwiaW5kZXhcIjo2LFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcInVuYWN0X21lbWJlcl9nbXZcIixcImluZGV4XCI6NyxcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJndWVzdF9nbXZcIixcImluZGV4XCI6OCxcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJhY3RfbWVtYmVyX2F2Z190Y1wiLFwiaW5kZXhcIjo5LFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcInVuYWN0X21lbWJlcl9hdmdfdGNcIixcImluZGV4XCI6MTAsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiYWN0X21lbWJlcl9wY3RcIixcImluZGV4XCI6MTEsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwidW5hY3RfbWVtYmVyX3BjdFwiLFwiaW5kZXhcIjoxMixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJnbXRfY3JlYXRlZFwiLFwiaW5kZXhcIjoxMyxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJnbXRfbW9kaWZpZWRcIixcImluZGV4XCI6MTQsXCJ0eXBlXCI6XCJzdHJpbmdcIn1dLFwiZGVmYXVsdEZTXCI6XCJoZGZzOi8vbnMxXCIsXCJmaWVsZERlbGltaXRlclwiOlwiXFx1MDAwMVwiLFwiZW5jb2RpbmdcIjpcInV0Zi04XCIsXCJmaWxlVHlwZVwiOlwib3JjXCJ9LFwibmFtZVwiOlwiaGRmc3JlYWRlclwifSxcIndyaXRlclwiOntcIm5hbWVcIjpcIm15c3Fsd3JpdGVyXCIsXCJwYXJhbWV0ZXJcIjp7XCJwb3N0U3FsXCI6W10sXCJwYXNzd29yZFwiOlwiZHRzdGFjazIwMThcIixcInNlc3Npb25cIjpbXSxcImNvbHVtblwiOltcImlkXCIsXCJ0ZW5hbnRfaWRcIixcImFjdF9tZW1iZXJfY250XCIsXCJ1bmFjdF9tZW1iZXJfY250XCIsXCJndWVzdF9jbnRcIixcImluY3JfbWVtYmVyX2NudF90b2RheVwiLFwiYWN0X21lbWJlcl9nbXZcIixcInVuYWN0X21lbWJlcl9nbXZcIixcImd1ZXN0X2dtdlwiLFwiYWN0X21lbWJlcl9hdmdfdGNcIixcInVuYWN0X21lbWJlcl9hdmdfdGNcIixcImFjdF9tZW1iZXJfcGN0XCIsXCJ1bmFjdF9tZW1iZXJfcGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbXBfb3ZlcnZpZXdcIl19XSxcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwic291cmNlSWRzXCI6WzkyXSxcInByZVNxbFwiOltdLFwidXNlcm5hbWVcIjpcIm5yc196aGlxdWFuXCJ9fX1dLFwic2V0dGluZ1wiOntcImRpcnR5XCI6e1wicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tcF9vdmVydmlld1wiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn19LFwic3BlZWRcIjp7XCJjaGFubmVsXCI6MSxcImJ5dGVzXCI6MTA0ODU3Nn0sXCJlcnJvckxpbWl0XCI6e1wicmVjb3JkXCI6MTAsXCJwZXJjZW50YWdlXCI6MC4wfX19IH0iLCJwYXJzZXIiOiJ7XCJ0YXJnZXRNYXBcIjp7XCJzb3VyY2VJZFwiOjkyLFwibmFtZVwiOlwiZHRzdGFja19rZXJ1eXVuXCIsXCJjb2x1bW5cIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwiQklHSU5UIFVOU0lHTkVEXCJ9LHtcImtleVwiOlwidGVuYW50X2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJhY3RfbWVtYmVyX2NudFwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwidW5hY3RfbWVtYmVyX2NudFwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwiZ3Vlc3RfY250XCIsXCJ0eXBlXCI6XCJJTlRcIn0se1wia2V5XCI6XCJpbmNyX21lbWJlcl9jbnRfdG9kYXlcIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcImFjdF9tZW1iZXJfZ212XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwidW5hY3RfbWVtYmVyX2dtdlwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImd1ZXN0X2dtdlwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImFjdF9tZW1iZXJfYXZnX3RjXCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwidW5hY3RfbWVtYmVyX2F2Z190Y1wiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImFjdF9tZW1iZXJfcGN0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwidW5hY3RfbWVtYmVyX3BjdFwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9tb2RpZmllZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn0se1wia2V5XCI6XCJnbXRfZGVsZXRlZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn1dLFwidHlwZVwiOntcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwidHlwZVwiOjEsXCJ0YWJsZVwiOltcIm5yc19tcF9vdmVydmlld1wiXX19LFwia2V5bWFwXCI6e1wic291cmNlXCI6W3tcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJpZFwifSx7XCJ0eXBlXCI6XCJzdHJpbmdcIixcImtleVwiOlwidGVuYW50SWRcIn0se1widHlwZVwiOlwiYmlnaW50XCIsXCJrZXlcIjpcImFjdF9tZW1iZXJfY250XCJ9LHtcInR5cGVcIjpcImJpZ2ludFwiLFwia2V5XCI6XCJ1bmFjdF9tZW1iZXJfY250XCJ9LHtcInR5cGVcIjpcImJpZ2ludFwiLFwia2V5XCI6XCJndWVzdF9jbnRcIn0se1widHlwZVwiOlwiYmlnaW50XCIsXCJrZXlcIjpcImluY3JfbWVtYmVyX2NudF90b2RheVwifSx7XCJ0eXBlXCI6XCJkb3VibGVcIixcImtleVwiOlwiYWN0X21lbWJlcl9nbXZcIn0se1widHlwZVwiOlwiZG91YmxlXCIsXCJrZXlcIjpcInVuYWN0X21lbWJlcl9nbXZcIn0se1widHlwZVwiOlwiZG91YmxlXCIsXCJrZXlcIjpcImd1ZXN0X2dtdlwifSx7XCJ0eXBlXCI6XCJkb3VibGVcIixcImtleVwiOlwiYWN0X21lbWJlcl9hdmdfdGNcIn0se1widHlwZVwiOlwiZG91YmxlXCIsXCJrZXlcIjpcInVuYWN0X21lbWJlcl9hdmdfdGNcIn0se1widHlwZVwiOlwiZG91YmxlXCIsXCJrZXlcIjpcImFjdF9tZW1iZXJfcGN0XCJ9LHtcInR5cGVcIjpcImRvdWJsZVwiLFwia2V5XCI6XCJ1bmFjdF9tZW1iZXJfcGN0XCJ9LHtcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJnbXRfY3JlYXRlZFwifSx7XCJ0eXBlXCI6XCJzdHJpbmdcIixcImtleVwiOlwiZ210X21vZGlmaWVkXCJ9XSxcInRhcmdldFwiOltcImlkXCIsXCJ0ZW5hbnRfaWRcIixcImFjdF9tZW1iZXJfY250XCIsXCJ1bmFjdF9tZW1iZXJfY250XCIsXCJndWVzdF9jbnRcIixcImluY3JfbWVtYmVyX2NudF90b2RheVwiLFwiYWN0X21lbWJlcl9nbXZcIixcInVuYWN0X21lbWJlcl9nbXZcIixcImd1ZXN0X2dtdlwiLFwiYWN0X21lbWJlcl9hdmdfdGNcIixcInVuYWN0X21lbWJlcl9hdmdfdGNcIixcImFjdF9tZW1iZXJfcGN0XCIsXCJ1bmFjdF9tZW1iZXJfcGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMTBdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVsxMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzEyXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMTNdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVsxNF1cIn1dLFwidHlwZVwiOntcInBhcnRpdGlvblwiOlwiZHM9JHtiZHAuc3lzdGVtLmJpemRhdGV9XCIsXCJ0eXBlXCI6NyxcInRhYmxlXCI6XCJhZHNfbnJzX21wX292ZXJ2aWV3XCJ9LFwic291cmNlTGlzdFwiOlt7XCJzb3VyY2VJZFwiOjg1LFwidGFibGVzXCI6XCJhZHNfbnJzX21wX292ZXJ2aWV3XCIsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwidHlwZVwiOjcsXCJrZXlcIjpcIm1haW5cIn1dfSxcInNldHRpbmdcIjp7XCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21wX292ZXJ2aWV3XCIsXCJyZWNvcmRcIjoxMCxcInBlcmNlbnRhZ2VcIjowLFwiaGFkb29wQ29uZmlnXCI6XCJ7XFxcImRmcy5oYS5uYW1lbm9kZXMubnMxXFxcIjpcXFwibm4xLG5uMlxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXFxcIjpcXFwibm9kZTAwNjo5MDAwXFxcIixcXFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcXFwiOlxcXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXFxcIixcXFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcXFwiOlxcXCJub2RlMDA1OjkwMDBcXFwiLFxcXCJkZnMubmFtZXNlcnZpY2VzXFxcIjpcXFwibnMxXFxcIn1cIixcImNoYW5uZWxcIjpcIjFcIixcImxpZmVEYXlcIjo5MCxcInNwZWVkXCI6XCIxXCIsXCJpc1NhdmVEaXJ0eVwiOjF9fSIsImNyZWF0ZU1vZGVsIjowfQ==",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 5,
                                            "nodePid": 1162,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278845,
                                        "gmtCreate": 1547647311000,
                                        "gmtModified": 1547647311000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "2eacab52",
                                        "jobKey": "cronTrigger_951_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_mp_overview_20190117050000",
                                        "status": 18,
                                        "taskId": 951,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297343,
                                            "gmtCreate": 1547647311000,
                                            "gmtModified": 1547672418000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "2eacab52",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    }
                                ],
                                "batchEngineJob": {
                                    "id": 297319,
                                    "gmtCreate": 1547647311000,
                                    "gmtModified": 1547670609000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "c7ed84ec",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297196,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547668893000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "909ea547",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297193,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547668893000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "4402628a",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 960,
                    "gmtCreate": 1536572510000,
                    "gmtModified": 1537340948000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_dws_ope_ma_trade_trend_1d",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS dws_ope_ma_trade_trend_1d(\nstatDate                     STRING COMMENT '统计日期'\n,day_id                      STRING COMMENT '天ID'\n,week_id                     STRING COMMENT '周ID'\n,month_id                    STRING COMMENT '月ID'\n,quarter_id                  STRING COMMENT '季度ID'\n,year_id                     STRING COMMENT '年度ID'\n,tenantId                    STRING COMMENT '租户ID'\n,shopId                      STRING COMMENT '门店ID'\n,gmv                         DOUBLE COMMENT '交易总额'\n,tc                          BIGINT COMMENT '交易笔数'\n,pct                         DOUBLE COMMENT '客单价'\n) COMMENT '门店交易日趋势1天'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 1000;\n\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_trade_trend_1d PARTITION (ds)\nSELECT\n'${bdp.system.bizdate}' AS statDate,\ntime.day_id             AS day_id,\ntime.week_id            AS week_id,\ntime.month_id           AS month_id,\ntime.quarter_id         AS quarter_id,\ntime.year_id            AS year_id,\nres.tenantId,\nres.shopId,\nres.gmv,\nres.tc,\nres.pct,\nres.paymentTime         AS ds \nFROM \n(SELECT\n  tenantId,\n  shopId,\n  date_format(paymentTime,'yyyyMMdd') AS paymentTime,\n  sum(shopActualAmount)               AS gmv, -- 交易额 \n  count(DISTINCT orderId)             AS tc,  -- 交易笔数 \n  avg(shopActualAmount)               AS pct  -- 客单价 \nFROM dwd_ord_trd_d\nWHERE\n  tradeStatus = 4 AND ds = '${bdp.system.bizdate}' \nGROUP BY tenantId, shopId, date_format(paymentTime,'yyyyMMdd')\nUNION \nSELECT\n  tenantId,\n  '0'                                 AS shopId,\n  date_format(paymentTime,'yyyyMMdd') AS paymentTime,\n  sum(shopActualAmount)               AS gmv, -- 交易额 \n  count(DISTINCT orderId)             AS tc,  -- 交易笔数 \n  avg(shopActualAmount)               AS pct  -- 客单价 \nFROM dwd_ord_trd_d\nWHERE\n  tradeStatus = 4 AND ds = '${bdp.system.bizdate}'\nGROUP BY tenantId, date_format(paymentTime,'yyyyMMdd')) res \n LEFT OUTER JOIN dim_unit_day time ON res.paymentTime = time.day_id AND time.ds = '${bdp.system.bizdate}';\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 19,
                    "nodePid": 1167,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278696,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "06d5d43c",
                "jobKey": "cronTrigger_960_20190117040000",
                "jobName": "cronJob_job_dws_ope_ma_trade_trend_1d_20190117040000",
                "status": 18,
                "taskId": 960,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 979,
                            "gmtCreate": 1536643986000,
                            "gmtModified": 1537348510000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_ope_ma_trade_trend_period",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\n\n-------  自然周 --------\nCREATE TABLE if NOT EXISTS dws_ope_ma_trade_trend_cw(\nstatDate                     STRING COMMENT '统计日期'\n,tenantId                    STRING COMMENT '租户ID'\n,shopId                      STRING COMMENT '门店ID'\n,week_id                     STRING COMMENT '周ID'\n,gmv                         DOUBLE COMMENT '交易总额'\n,tc                          BIGINT COMMENT '交易笔数'\n,pct                         DOUBLE COMMENT '客单价'\n) COMMENT '门店交易日趋势自然周'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_trade_trend_cw PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'              AS statDate,\n  tenantId,\n  shopId,\n  week_id,\n  sum(gmv)                             AS gmv, -- 交易额 \n  sum(tc)                              AS tc,  -- 交易笔数 \n  coalesce(sum(gmv) / sum(tc),0)       AS pct  -- 客单价\nFROM dws_ope_ma_trade_trend_1d\nWHERE\n  ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, shopId, week_id;\n\n\n\n-------  自然月 --------\nCREATE TABLE if NOT EXISTS dws_ope_ma_trade_trend_cm(\nstatDate                     STRING COMMENT '统计日期'\n,tenantId                    STRING COMMENT '租户ID'\n,shopId                      STRING COMMENT '门店ID'\n,month_id                    STRING COMMENT '月度ID'\n,gmv                         DOUBLE COMMENT '交易总额'\n,tc                          BIGINT COMMENT '交易笔数'\n,pct                         DOUBLE COMMENT '客单价'\n) COMMENT '门店交易日趋势自然月'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_trade_trend_cm PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'              AS statDate,\n  tenantId,\n  shopId,\n  month_id,\n  sum(gmv)                             AS gmv, -- 交易额 \n  sum(tc)                              AS tc,  -- 交易笔数 \n  coalesce(sum(gmv) / sum(tc),0)       AS pct  -- 客单价\nFROM dws_ope_ma_trade_trend_1d\nWHERE\n  ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, shopId, month_id;\n\n\n-------  自然季度 -------\nCREATE TABLE if NOT EXISTS dws_ope_ma_trade_trend_cq(\nstatDate                     STRING COMMENT '统计日期'\n,tenantId                    STRING COMMENT '租户ID'\n,shopId                      STRING COMMENT '门店ID'\n,quarter_id                  STRING COMMENT '季度ID'\n,gmv                         DOUBLE COMMENT '交易总额'\n,tc                          BIGINT COMMENT '交易笔数'\n,pct                         DOUBLE COMMENT '客单价'\n) COMMENT '门店交易日趋势自然月'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_trade_trend_cq PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'              AS statDate,\n  tenantId,\n  shopId,\n  quarter_id,\n  sum(gmv)                             AS gmv, -- 交易额 \n  sum(tc)                              AS tc,  -- 交易笔数 \n  coalesce(sum(gmv) / sum(tc),0)       AS pct  -- 客单价\nFROM dws_ope_ma_trade_trend_1d\nWHERE\n  ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, shopId, quarter_id;\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"min\":\"15\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\",\"selfReliance\":0}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 32,
                            "nodePid": 1167,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 15 4 * * ?"
                        },
                        "id": 278802,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "fbf93b50",
                        "jobKey": "cronTrigger_979_20190117041500",
                        "jobName": "cronJob_job_dws_ope_ma_trade_trend_period_20190117041500",
                        "status": 18,
                        "taskId": 979,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:15:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1035,
                                    "gmtCreate": 1537114700000,
                                    "gmtModified": 1537346293000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "job_ads_nrs_ma_trade_trend_period",
                                    "taskType": 0,
                                    "computeType": 1,
                                    "engineType": 1,
                                    "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\n-------  自然周 --------\nCREATE TABLE if NOT EXISTS ads_nrs_ma_trade_trend_cw(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计时间纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,gmv                 DOUBLE      COMMENT '当周交易总额'\n,tc                  BIGINT      COMMENT '当周交易笔数'\n,pct                 DOUBLE      COMMENT '当周客单价'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'\n) COMMENT '门店交易自然周趋势分析'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_trade_trend_cw PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'43',concat(substr(week_id,0,4),substr(week_id,6,7),'00'))     AS id, \ntenantId,\nshopId,\n'43'                                                    AS stat_dim,\nconcat(substr(week_id,0,4),substr(week_id,6,7),'00')    AS stat_time,\ngmv,\ntc,\npct,\n'${bdp.system.cyctime}'                                 AS gmt_created,\n'${bdp.system.cyctime}'                                 AS gmt_modified\nFROM dws_ope_ma_trade_trend_cw WHERE ds = '${bdp.system.bizdate}';\n\n\n-------  自然月 --------\nCREATE TABLE if NOT EXISTS ads_nrs_ma_trade_trend_cm(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计时间纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,gmv                 DOUBLE      COMMENT '当月交易总额'\n,tc                  BIGINT      COMMENT '当月交易笔数'\n,pct                 DOUBLE      COMMENT '当月客单价'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'\n) COMMENT '门店交易自然月趋势分析'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_trade_trend_cm PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'44',concat(month_id, '00')) AS id, \ntenantId,\nshopId,\n'44'                                                AS stat_dim,\nconcat(month_id, '00')                              AS stat_time,\ngmv,\ntc,\npct,\n'${bdp.system.cyctime}'                             AS gmt_created,\n'${bdp.system.cyctime}'                             AS gmt_modified\nFROM dws_ope_ma_trade_trend_cm WHERE ds = '${bdp.system.bizdate}';\n\n\n-------  自然季度 --------\nCREATE TABLE if NOT EXISTS ads_nrs_ma_trade_trend_cq(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计时间纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,gmv                 DOUBLE      COMMENT '当季度交易总额'\n,tc                  BIGINT      COMMENT '当季度交易笔数'\n,pct                 DOUBLE      COMMENT '当季度客单价'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'\n) COMMENT '门店交易自然季度趋势分析'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_trade_trend_cq PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'45',concat(substr(quarter_id,0,4),'0',substr(quarter_id,5,5),'00')) AS id, \ntenantId,\nshopId,\n'45'                                                                                        AS stat_dim,\nconcat(substr(quarter_id,0,4),'0',substr(quarter_id,5,5),'00')                              AS stat_time,\ngmv,\ntc,\npct,\n'${bdp.system.cyctime}'                                                                     AS gmt_created,\n'${bdp.system.cyctime}'                                                                     AS gmt_modified\nFROM dws_ope_ma_trade_trend_cq WHERE ds = '${bdp.system.bizdate}';\n\n\n",
                                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                    "scheduleConf": "{\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\",\"selfReliance\":0}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 25,
                                    "nodePid": 1170,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 30 4 * * ?"
                                },
                                "id": 278826,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "5f606de2",
                                "jobKey": "cronTrigger_1035_20190117043000",
                                "jobName": "cronJob_job_ads_nrs_ma_trade_trend_period_20190117043000",
                                "status": 18,
                                "taskId": 1035,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 04:30:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": [
                                    {
                                        "batchTask": {
                                            "id": 1064,
                                            "gmtCreate": 1537345882000,
                                            "gmtModified": 1537345927000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_ma_trade_trend_cm",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV90cmFkZV90cmVuZF9jbS9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9LFwiY29sdW1uXCI6W3tcIm5hbWVcIjpcImlkXCIsXCJpbmRleFwiOjAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwidGVuYW50SWRcIixcImluZGV4XCI6MSxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzaG9wSWRcIixcImluZGV4XCI6MixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzdGF0X2RpbVwiLFwiaW5kZXhcIjozLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfdGltZVwiLFwiaW5kZXhcIjo0LFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcImdtdlwiLFwiaW5kZXhcIjo1LFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcInRjXCIsXCJpbmRleFwiOjYsXCJ0eXBlXCI6XCJiaWdpbnRcIn0se1wibmFtZVwiOlwicGN0XCIsXCJpbmRleFwiOjcsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6OCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJnbXRfbW9kaWZpZWRcIixcImluZGV4XCI6OSxcInR5cGVcIjpcInN0cmluZ1wifV0sXCJkZWZhdWx0RlNcIjpcImhkZnM6Ly9uczFcIixcImZpZWxkRGVsaW1pdGVyXCI6XCJcXHUwMDAxXCIsXCJlbmNvZGluZ1wiOlwidXRmLThcIixcImZpbGVUeXBlXCI6XCJvcmNcIn0sXCJuYW1lXCI6XCJoZGZzcmVhZGVyXCJ9LFwid3JpdGVyXCI6e1wibmFtZVwiOlwibXlzcWx3cml0ZXJcIixcInBhcmFtZXRlclwiOntcInBvc3RTcWxcIjpbXSxcInBhc3N3b3JkXCI6XCJkdHN0YWNrMjAxOFwiLFwic2Vzc2lvblwiOltdLFwiY29sdW1uXCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfdHJhZGVfdHJlbmRcIl19XSxcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwic291cmNlSWRzXCI6WzkyXSxcInByZVNxbFwiOltdLFwidXNlcm5hbWVcIjpcIm5yc196aGlxdWFuXCJ9fX1dLFwic2V0dGluZ1wiOntcImRpcnR5XCI6e1wicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF9jbVwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn19LFwic3BlZWRcIjp7XCJjaGFubmVsXCI6MSxcImJ5dGVzXCI6MTA0ODU3Nn0sXCJlcnJvckxpbWl0XCI6e1wicmVjb3JkXCI6MTAsXCJwZXJjZW50YWdlXCI6MC4wfX19IH0iLCJwYXJzZXIiOiJ7XCJ0YXJnZXRNYXBcIjp7XCJzb3VyY2VJZFwiOjkyLFwibmFtZVwiOlwiZHRzdGFja19rZXJ1eXVuXCIsXCJjb2x1bW5cIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwidGVuYW50X2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzaG9wX2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzdGF0X2RpbVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwic3RhdF90aW1lXCIsXCJ0eXBlXCI6XCJJTlRcIn0se1wia2V5XCI6XCJnbXZcIixcInR5cGVcIjpcIkRFQ0lNQUxcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ210X2NyZWF0ZWRcIixcInR5cGVcIjpcIkRBVEVUSU1FXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9kZWxldGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifV0sXCJ0eXBlXCI6e1wid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJ0eXBlXCI6MSxcInRhYmxlXCI6W1wibnJzX21hX3RyYWRlX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiYmlnaW50XCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJnbXRfY3JlYXRlZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn1dLFwidGFyZ2V0XCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifV0sXCJ0eXBlXCI6e1wicGFydGl0aW9uXCI6XCJkcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcInR5cGVcIjo3LFwidGFibGVcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfY21cIn0sXCJzb3VyY2VMaXN0XCI6W3tcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJzb3VyY2VJZFwiOjg1LFwidHlwZVwiOjcsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfY21cIixcImtleVwiOlwibWFpblwifV19LFwic2V0dGluZ1wiOntcInNwZWVkXCI6XCIxXCIsXCJjaGFubmVsXCI6XCIxXCIsXCJyZWNvcmRcIjoxMCxcImlzU2F2ZURpcnR5XCI6MSxcImxpZmVEYXlcIjo5MCxcInBlcmNlbnRhZ2VcIjowLFwicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF9jbVwiLFwiaGFkb29wQ29uZmlnXCI6XCJ7XFxcImRmcy5oYS5uYW1lbm9kZXMubnMxXFxcIjpcXFwibm4xLG5uMlxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXFxcIjpcXFwibm9kZTAwNjo5MDAwXFxcIixcXFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcXFwiOlxcXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXFxcIixcXFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcXFwiOlxcXCJub2RlMDA1OjkwMDBcXFwiLFxcXCJkZnMubmFtZXNlcnZpY2VzXFxcIjpcXFwibnMxXFxcIn1cIn19IiwiY3JlYXRlTW9kZWwiOjB9",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 1,
                                            "nodePid": 1161,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278857,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "2b2ee85b",
                                        "jobKey": "cronTrigger_1064_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_trade_trend_cm_20190117050000",
                                        "status": 18,
                                        "taskId": 1064,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297355,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547672407000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "2b2ee85b",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    },
                                    {
                                        "batchTask": {
                                            "id": 1065,
                                            "gmtCreate": 1537345951000,
                                            "gmtModified": 1537345990000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_ma_trade_trend_cw",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV90cmFkZV90cmVuZF9jdy9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9LFwiY29sdW1uXCI6W3tcIm5hbWVcIjpcImlkXCIsXCJpbmRleFwiOjAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwidGVuYW50SWRcIixcImluZGV4XCI6MSxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzaG9wSWRcIixcImluZGV4XCI6MixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzdGF0X2RpbVwiLFwiaW5kZXhcIjozLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfdGltZVwiLFwiaW5kZXhcIjo0LFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcImdtdlwiLFwiaW5kZXhcIjo1LFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcInRjXCIsXCJpbmRleFwiOjYsXCJ0eXBlXCI6XCJiaWdpbnRcIn0se1wibmFtZVwiOlwicGN0XCIsXCJpbmRleFwiOjcsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6OCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJnbXRfbW9kaWZpZWRcIixcImluZGV4XCI6OSxcInR5cGVcIjpcInN0cmluZ1wifV0sXCJkZWZhdWx0RlNcIjpcImhkZnM6Ly9uczFcIixcImZpZWxkRGVsaW1pdGVyXCI6XCJcXHUwMDAxXCIsXCJlbmNvZGluZ1wiOlwidXRmLThcIixcImZpbGVUeXBlXCI6XCJvcmNcIn0sXCJuYW1lXCI6XCJoZGZzcmVhZGVyXCJ9LFwid3JpdGVyXCI6e1wibmFtZVwiOlwibXlzcWx3cml0ZXJcIixcInBhcmFtZXRlclwiOntcInBvc3RTcWxcIjpbXSxcInBhc3N3b3JkXCI6XCJkdHN0YWNrMjAxOFwiLFwic2Vzc2lvblwiOltdLFwiY29sdW1uXCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfdHJhZGVfdHJlbmRcIl19XSxcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwic291cmNlSWRzXCI6WzkyXSxcInByZVNxbFwiOltdLFwidXNlcm5hbWVcIjpcIm5yc196aGlxdWFuXCJ9fX1dLFwic2V0dGluZ1wiOntcImRpcnR5XCI6e1wicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF9jd1wiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn19LFwic3BlZWRcIjp7XCJjaGFubmVsXCI6MSxcImJ5dGVzXCI6MTA0ODU3Nn0sXCJlcnJvckxpbWl0XCI6e1wicmVjb3JkXCI6MTAsXCJwZXJjZW50YWdlXCI6MC4wfX19IH0iLCJwYXJzZXIiOiJ7XCJ0YXJnZXRNYXBcIjp7XCJzb3VyY2VJZFwiOjkyLFwibmFtZVwiOlwiZHRzdGFja19rZXJ1eXVuXCIsXCJjb2x1bW5cIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwidGVuYW50X2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzaG9wX2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzdGF0X2RpbVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwic3RhdF90aW1lXCIsXCJ0eXBlXCI6XCJJTlRcIn0se1wia2V5XCI6XCJnbXZcIixcInR5cGVcIjpcIkRFQ0lNQUxcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ210X2NyZWF0ZWRcIixcInR5cGVcIjpcIkRBVEVUSU1FXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9kZWxldGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifV0sXCJ0eXBlXCI6e1wid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJ0eXBlXCI6MSxcInRhYmxlXCI6W1wibnJzX21hX3RyYWRlX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiYmlnaW50XCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJnbXRfY3JlYXRlZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn1dLFwidGFyZ2V0XCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifV0sXCJ0eXBlXCI6e1wicGFydGl0aW9uXCI6XCJkcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcInR5cGVcIjo3LFwidGFibGVcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfY3dcIn0sXCJzb3VyY2VMaXN0XCI6W3tcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJzb3VyY2VJZFwiOjg1LFwidHlwZVwiOjcsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfY3dcIixcImtleVwiOlwibWFpblwifV19LFwic2V0dGluZ1wiOntcInNwZWVkXCI6XCIxXCIsXCJjaGFubmVsXCI6XCIxXCIsXCJyZWNvcmRcIjoxMCxcImlzU2F2ZURpcnR5XCI6MSxcImxpZmVEYXlcIjo5MCxcInBlcmNlbnRhZ2VcIjowLFwicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF9jd1wiLFwiaGFkb29wQ29uZmlnXCI6XCJ7XFxcImRmcy5oYS5uYW1lbm9kZXMubnMxXFxcIjpcXFwibm4xLG5uMlxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXFxcIjpcXFwibm9kZTAwNjo5MDAwXFxcIixcXFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcXFwiOlxcXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXFxcIixcXFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcXFwiOlxcXCJub2RlMDA1OjkwMDBcXFwiLFxcXCJkZnMubmFtZXNlcnZpY2VzXFxcIjpcXFwibnMxXFxcIn1cIn19IiwiY3JlYXRlTW9kZWwiOjB9",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 1,
                                            "nodePid": 1161,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278858,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "49b47a7c",
                                        "jobKey": "cronTrigger_1065_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_trade_trend_cw_20190117050000",
                                        "status": 18,
                                        "taskId": 1065,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297356,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547672407000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "49b47a7c",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    },
                                    {
                                        "batchTask": {
                                            "id": 1066,
                                            "gmtCreate": 1537346011000,
                                            "gmtModified": 1537346044000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_ma_trade_trend_cq",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV90cmFkZV90cmVuZF9jcS9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9LFwiY29sdW1uXCI6W3tcIm5hbWVcIjpcImlkXCIsXCJpbmRleFwiOjAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwidGVuYW50SWRcIixcImluZGV4XCI6MSxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzaG9wSWRcIixcImluZGV4XCI6MixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzdGF0X2RpbVwiLFwiaW5kZXhcIjozLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfdGltZVwiLFwiaW5kZXhcIjo0LFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcImdtdlwiLFwiaW5kZXhcIjo1LFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcInRjXCIsXCJpbmRleFwiOjYsXCJ0eXBlXCI6XCJiaWdpbnRcIn0se1wibmFtZVwiOlwicGN0XCIsXCJpbmRleFwiOjcsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6OCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJnbXRfbW9kaWZpZWRcIixcImluZGV4XCI6OSxcInR5cGVcIjpcInN0cmluZ1wifV0sXCJkZWZhdWx0RlNcIjpcImhkZnM6Ly9uczFcIixcImZpZWxkRGVsaW1pdGVyXCI6XCJcXHUwMDAxXCIsXCJlbmNvZGluZ1wiOlwidXRmLThcIixcImZpbGVUeXBlXCI6XCJvcmNcIn0sXCJuYW1lXCI6XCJoZGZzcmVhZGVyXCJ9LFwid3JpdGVyXCI6e1wibmFtZVwiOlwibXlzcWx3cml0ZXJcIixcInBhcmFtZXRlclwiOntcInBvc3RTcWxcIjpbXSxcInBhc3N3b3JkXCI6XCJkdHN0YWNrMjAxOFwiLFwic2Vzc2lvblwiOltdLFwiY29sdW1uXCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfdHJhZGVfdHJlbmRcIl19XSxcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwic291cmNlSWRzXCI6WzkyXSxcInByZVNxbFwiOltdLFwidXNlcm5hbWVcIjpcIm5yc196aGlxdWFuXCJ9fX1dLFwic2V0dGluZ1wiOntcImRpcnR5XCI6e1wicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF9jcVwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn19LFwic3BlZWRcIjp7XCJjaGFubmVsXCI6MSxcImJ5dGVzXCI6MTA0ODU3Nn0sXCJlcnJvckxpbWl0XCI6e1wicmVjb3JkXCI6MTAsXCJwZXJjZW50YWdlXCI6MC4wfX19IH0iLCJwYXJzZXIiOiJ7XCJ0YXJnZXRNYXBcIjp7XCJzb3VyY2VJZFwiOjkyLFwibmFtZVwiOlwiZHRzdGFja19rZXJ1eXVuXCIsXCJjb2x1bW5cIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwidGVuYW50X2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzaG9wX2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzdGF0X2RpbVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwic3RhdF90aW1lXCIsXCJ0eXBlXCI6XCJJTlRcIn0se1wia2V5XCI6XCJnbXZcIixcInR5cGVcIjpcIkRFQ0lNQUxcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ210X2NyZWF0ZWRcIixcInR5cGVcIjpcIkRBVEVUSU1FXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9kZWxldGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifV0sXCJ0eXBlXCI6e1wid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJ0eXBlXCI6MSxcInRhYmxlXCI6W1wibnJzX21hX3RyYWRlX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiYmlnaW50XCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJnbXRfY3JlYXRlZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn1dLFwidGFyZ2V0XCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifV0sXCJ0eXBlXCI6e1wicGFydGl0aW9uXCI6XCJkcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcInR5cGVcIjo3LFwidGFibGVcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfY3FcIn0sXCJzb3VyY2VMaXN0XCI6W3tcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJzb3VyY2VJZFwiOjg1LFwidHlwZVwiOjcsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfY3FcIixcImtleVwiOlwibWFpblwifV19LFwic2V0dGluZ1wiOntcInNwZWVkXCI6XCIxXCIsXCJjaGFubmVsXCI6XCIxXCIsXCJyZWNvcmRcIjoxMCxcImlzU2F2ZURpcnR5XCI6MSxcInBlcmNlbnRhZ2VcIjowLFwibGlmZURheVwiOjkwLFwicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF9jcVwiLFwiaGFkb29wQ29uZmlnXCI6XCJ7XFxcImRmcy5oYS5uYW1lbm9kZXMubnMxXFxcIjpcXFwibm4xLG5uMlxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXFxcIjpcXFwibm9kZTAwNjo5MDAwXFxcIixcXFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcXFwiOlxcXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXFxcIixcXFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcXFwiOlxcXCJub2RlMDA1OjkwMDBcXFwiLFxcXCJkZnMubmFtZXNlcnZpY2VzXFxcIjpcXFwibnMxXFxcIn1cIn19IiwiY3JlYXRlTW9kZWwiOjB9",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 1,
                                            "nodePid": 1161,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278859,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "c7acafad",
                                        "jobKey": "cronTrigger_1066_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_trade_trend_cq_20190117050000",
                                        "status": 18,
                                        "taskId": 1066,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297357,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547672407000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "c7acafad",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    }
                                ],
                                "batchEngineJob": {
                                    "id": 297324,
                                    "gmtCreate": 1547647311000,
                                    "gmtModified": 1547670607000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "5f606de2",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297300,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547669707000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "fbf93b50",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 968,
                            "gmtCreate": 1536589442000,
                            "gmtModified": 1537155788000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_ads_nrs_ma_trade_trend_1d",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_ma_trade_trend_1d(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计日期纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,tc                  BIGINT      COMMENT '当日交易笔数'\n,pct                 DOUBLE      COMMENT '当日客单价'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'\n) COMMENT '门店交易日趋势分析'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 1000;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_trade_trend_1d PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'42','${bdp.system.bizdate}') AS id, \ntenantId,\nshopId,\n'42'                         AS stat_dim,\n'${bdp.system.bizdate}'      AS stat_time,\ngmv,\ntc,\npct,\n'${bdp.system.cyctime}'      AS gmt_created,\n'${bdp.system.cyctime}'      AS gmt_modified\nFROM dws_ope_ma_trade_trend_1d WHERE ds = '${bdp.system.bizdate}';\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 6,
                            "nodePid": 1170,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 30 4 * * ?"
                        },
                        "id": 278819,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "aa58ba50",
                        "jobKey": "cronTrigger_968_20190117043000",
                        "jobName": "cronJob_job_ads_nrs_ma_trade_trend_1d_20190117043000",
                        "status": 18,
                        "taskId": 968,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:30:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 955,
                                    "gmtCreate": 1536513655000,
                                    "gmtModified": 1536733956000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "cdp_dt2mysql_nrs_ma_trade_trend_1d",
                                    "taskType": 2,
                                    "computeType": 1,
                                    "engineType": 0,
                                    "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV90cmFkZV90cmVuZF8xZC9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9LFwiY29sdW1uXCI6W3tcIm5hbWVcIjpcImlkXCIsXCJpbmRleFwiOjAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwidGVuYW50SWRcIixcImluZGV4XCI6MSxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzaG9wSWRcIixcImluZGV4XCI6MixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJzdGF0X2RpbVwiLFwiaW5kZXhcIjozLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfdGltZVwiLFwiaW5kZXhcIjo0LFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcImdtdlwiLFwiaW5kZXhcIjo1LFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcInRjXCIsXCJpbmRleFwiOjYsXCJ0eXBlXCI6XCJiaWdpbnRcIn0se1wibmFtZVwiOlwicGN0XCIsXCJpbmRleFwiOjcsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6OCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJnbXRfbW9kaWZpZWRcIixcImluZGV4XCI6OSxcInR5cGVcIjpcInN0cmluZ1wifV0sXCJkZWZhdWx0RlNcIjpcImhkZnM6Ly9uczFcIixcImZpZWxkRGVsaW1pdGVyXCI6XCJcXHUwMDAxXCIsXCJlbmNvZGluZ1wiOlwidXRmLThcIixcImZpbGVUeXBlXCI6XCJvcmNcIn0sXCJuYW1lXCI6XCJoZGZzcmVhZGVyXCJ9LFwid3JpdGVyXCI6e1wibmFtZVwiOlwibXlzcWx3cml0ZXJcIixcInBhcmFtZXRlclwiOntcInBvc3RTcWxcIjpbXSxcInBhc3N3b3JkXCI6XCJkdHN0YWNrMjAxOFwiLFwic2Vzc2lvblwiOltdLFwiY29sdW1uXCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfdHJhZGVfdHJlbmRcIl19XSxcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwic291cmNlSWRzXCI6WzkyXSxcInByZVNxbFwiOltdLFwidXNlcm5hbWVcIjpcIm5yc196aGlxdWFuXCJ9fX1dLFwic2V0dGluZ1wiOntcImRpcnR5XCI6e1wicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV90cmFkZV90cmVuZF8xZFwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn19LFwic3BlZWRcIjp7XCJjaGFubmVsXCI6MSxcImJ5dGVzXCI6MTA0ODU3Nn0sXCJlcnJvckxpbWl0XCI6e1wicmVjb3JkXCI6MTAsXCJwZXJjZW50YWdlXCI6MC4wfX19IH0iLCJwYXJzZXIiOiJ7XCJ0YXJnZXRNYXBcIjp7XCJzb3VyY2VJZFwiOjkyLFwibmFtZVwiOlwiZHRzdGFja19rZXJ1eXVuXCIsXCJjb2x1bW5cIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwidGVuYW50X2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzaG9wX2lkXCIsXCJ0eXBlXCI6XCJCSUdJTlRcIn0se1wia2V5XCI6XCJzdGF0X2RpbVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwic3RhdF90aW1lXCIsXCJ0eXBlXCI6XCJJTlRcIn0se1wia2V5XCI6XCJnbXZcIixcInR5cGVcIjpcIkRFQ0lNQUxcIn0se1wia2V5XCI6XCJ0Y1wiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwicGN0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ210X2NyZWF0ZWRcIixcInR5cGVcIjpcIkRBVEVUSU1FXCJ9LHtcImtleVwiOlwiZ210X21vZGlmaWVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9kZWxldGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifV0sXCJ0eXBlXCI6e1wid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJ0eXBlXCI6MSxcInRhYmxlXCI6W1wibnJzX21hX3RyYWRlX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1widHlwZVwiOlwic3RyaW5nXCIsXCJrZXlcIjpcImlkXCJ9LHtcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJ0ZW5hbnRJZFwifSx7XCJ0eXBlXCI6XCJzdHJpbmdcIixcImtleVwiOlwic2hvcElkXCJ9LHtcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJzdGF0X2RpbVwifSx7XCJ0eXBlXCI6XCJzdHJpbmdcIixcImtleVwiOlwic3RhdF90aW1lXCJ9LHtcInR5cGVcIjpcImRvdWJsZVwiLFwia2V5XCI6XCJnbXZcIn0se1widHlwZVwiOlwiYmlnaW50XCIsXCJrZXlcIjpcInRjXCJ9LHtcInR5cGVcIjpcImRvdWJsZVwiLFwia2V5XCI6XCJwY3RcIn0se1widHlwZVwiOlwic3RyaW5nXCIsXCJrZXlcIjpcImdtdF9jcmVhdGVkXCJ9LHtcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJnbXRfbW9kaWZpZWRcIn1dLFwidGFyZ2V0XCI6W1wiaWRcIixcInRlbmFudF9pZFwiLFwic2hvcF9pZFwiLFwic3RhdF9kaW1cIixcInN0YXRfdGltZVwiLFwiZ212XCIsXCJ0Y1wiLFwicGN0XCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifV0sXCJ0eXBlXCI6e1wicGFydGl0aW9uXCI6XCJkcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcInR5cGVcIjo3LFwidGFibGVcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfMWRcIn0sXCJzb3VyY2VMaXN0XCI6W3tcInNvdXJjZUlkXCI6ODUsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfdHJhZGVfdHJlbmRfMWRcIixcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJ0eXBlXCI6NyxcImtleVwiOlwibWFpblwifV19LFwic2V0dGluZ1wiOntcInBhdGhcIjpcImRpcnR5X2NkcF9kdDJteXNxbF9ucnNfbWFfdHJhZGVfdHJlbmRfMWRcIixcInJlY29yZFwiOjEwLFwicGVyY2VudGFnZVwiOjAsXCJoYWRvb3BDb25maWdcIjpcIntcXFwiZGZzLmhhLm5hbWVub2Rlcy5uczFcXFwiOlxcXCJubjEsbm4yXFxcIixcXFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjJcXFwiOlxcXCJub2RlMDA2OjkwMDBcXFwiLFxcXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVxcXCI6XFxcIm9yZy5hcGFjaGUuaGFkb29wLmhkZnMuc2VydmVyLm5hbWVub2RlLmhhLkNvbmZpZ3VyZWRGYWlsb3ZlclByb3h5UHJvdmlkZXJcXFwiLFxcXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVxcXCI6XFxcIm5vZGUwMDU6OTAwMFxcXCIsXFxcImRmcy5uYW1lc2VydmljZXNcXFwiOlxcXCJuczFcXFwifVwiLFwiY2hhbm5lbFwiOlwiMVwiLFwibGlmZURheVwiOjkwLFwic3BlZWRcIjpcIjFcIixcImlzU2F2ZURpcnR5XCI6MX19IiwiY3JlYXRlTW9kZWwiOjB9",
                                    "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 5,
                                    "nodePid": 1161,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 5 * * ?"
                                },
                                "id": 278847,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "745eb555",
                                "jobKey": "cronTrigger_955_20190117050000",
                                "jobName": "cronJob_cdp_dt2mysql_nrs_ma_trade_trend_1d_20190117050000",
                                "status": 18,
                                "taskId": 955,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 05:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": null,
                                "batchEngineJob": {
                                    "id": 297345,
                                    "gmtCreate": 1547647311000,
                                    "gmtModified": 1547672418000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "745eb555",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297317,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547670609000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "aa58ba50",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297194,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547668893000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "06d5d43c",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 961,
                    "gmtCreate": 1536573388000,
                    "gmtModified": 1537349671000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_dws_ope_ma_order_channel_trend_1d",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS  dws_ope_ma_order_channel_trend_1d(\nstatDate             STRING      COMMENT '统计日期'\n,day_id              STRING      COMMENT '天ID'\n,week_id             STRING      COMMENT '周ID'\n,month_id            STRING      COMMENT '月ID'\n,quarter_id          STRING      COMMENT '季度ID'\n,year_id             STRING      COMMENT '年度ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,gmv                 DOUBLE      COMMENT '交易总额'\n,privilege_gmv       DOUBLE      COMMENT '优惠总额'\n,order_gmv           DOUBLE      COMMENT '订单总额'\n,roi                 DOUBLE      COMMENT 'roi'\n) COMMENT '门店订单渠道趋势分析1天'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_order_channel_trend_1d PARTITION (ds)\nSELECT\n  '${bdp.system.bizdate}' AS statDate,\n  time.day_id             AS day_id,\n  time.week_id            AS week_id,\n  time.month_id           AS month_id,\n  time.quarter_id         AS quarter_id,\n  time.year_id            AS year_id,\n  res.tenantId            AS tenantId,\n  res.shopId              AS shopId,\n  res.dimId               AS channel_dim,\n  res.gmv                 AS gmv,\n  res.privilege_gmv       AS privilege_gmv,\n  res.order_gmv           AS order_gmv,\n  res.roi                 AS roi,\n  res.paymentTime         AS ds\nFROM (\n       SELECT\n         d.tenantId                                                         AS tenantId,\n         d.shopId                                                           AS shopId,\n         d.paymentTime                                                      AS paymentTime,\n         d.dimId                                                            AS dimId,\n         sum(d.shopActualAmount)                                            AS gmv,\n         sum(d.custActualPay - d.shopActualAmount)                          AS privilege_gmv,\n         sum(d.tradeAmount)                                                 AS order_gmv, -- 订单原价\n         coalesce(sum(d.shopActualAmount) / sum(d.tradeAmount - d.shopActualAmount),0)  AS roi        -- ROI：商家实收/(订单原价-商家实收)\n       FROM\n         (\n           SELECT\n             tenantId,\n             shopId,\n             date_format(paymentTime,'yyyyMMdd') AS paymentTime,\n             shopActualAmount,\n             custActualPay,\n             tradeAmount,\n             (CASE\n              WHEN sourceChild IN (1, 2, 3, 141, 142)\n                THEN 31\n              WHEN sourceChild IN (31, 32, 33)\n                THEN 32\n              WHEN sourceChild = 161\n                THEN 33\n              WHEN sourceChild = 181\n                THEN 34\n              ELSE 35\n              END) AS dimId\n           FROM dwd_ord_trd_d\n           WHERE ds = '${bdp.system.bizdate}' AND tradeStatus = 4) d\n       GROUP BY d.tenantId, d.shopId, d.dimId, d.paymentTime\n       UNION\n       SELECT\n         dd.tenantId,\n         '0'                                                                   AS shopId,\n         dd.paymentTime                                                        AS paymentTime,\n         dd.dimId,\n         sum(dd.shopActualAmount)                                              AS gmv,\n         sum(dd.custActualPay - dd.shopActualAmount)                           AS privilege_gmv,\n         sum(dd.tradeAmount)                                                   AS order_gmv, -- 订单原价\n         coalesce(sum(dd.shopActualAmount) / sum(dd.tradeAmount - dd.shopActualAmount),0)  AS roi        -- ROI：商家实收/(订单原价-商家实收)\n       FROM\n         (\n           SELECT\n             tenantId,\n             date_format(paymentTime,'yyyyMMdd') AS paymentTime,\n             shopActualAmount,\n             custActualPay,\n             tradeAmount,\n             (CASE\n              WHEN sourceChild IN (1, 2, 3, 141, 142)\n                THEN 31\n              WHEN sourceChild IN (31, 32, 33)\n                THEN 32\n              WHEN sourceChild = 161\n                THEN 33\n              WHEN sourceChild = 181\n                THEN 34\n              ELSE 35\n              END) AS dimId\n           FROM dwd_ord_trd_d\n           WHERE ds = '${bdp.system.bizdate}' AND tradeStatus = 4) dd\n       GROUP BY dd.tenantId, dd.dimId, dd.paymentTime) res\n    LEFT OUTER JOIN dim_unit_day time ON res.paymentTime = time.day_id AND time.ds = '${bdp.system.bizdate}';\n\n\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 18,
                    "nodePid": 1167,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278697,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "1c4df343",
                "jobKey": "cronTrigger_961_20190117040000",
                "jobName": "cronJob_job_dws_ope_ma_order_channel_trend_1d_20190117040000",
                "status": 18,
                "taskId": 961,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 1067,
                            "gmtCreate": 1537347533000,
                            "gmtModified": 1537354116000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_dws_ope_ma_order_channel_trend_period",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\n-- DROP TABLE dws_ope_ma_order_channel_trend_cw;\n-- DROP TABLE dws_ope_ma_order_channel_trend_cm;\n-- DROP TABLE dws_ope_ma_order_channel_trend_cq;\n\n-------  自然周 --------\nCREATE TABLE if NOT EXISTS  dws_ope_ma_order_channel_trend_cw(\nstatDate             STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,week_id             STRING      COMMENT '周ID'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,gmv                 DOUBLE      COMMENT '交易总额'\n,privilege_gmv       DOUBLE      COMMENT '优惠总额'\n,order_gmv           DOUBLE      COMMENT '订单总额'\n,roi                 DOUBLE      COMMENT 'roi'\n) COMMENT '门店订单渠道趋势分析自然周'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_order_channel_trend_cw PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'                           AS statDate,\n  tenantId,\n  shopId,\n  week_id,\n  channel_dim,\n  sum(gmv)                                          AS gmv,            -- 交易额 \n  sum(privilege_gmv)                                AS privilege_gmv,  -- 优惠金额 \n  sum(order_gmv)                                    AS order_gmv,      -- 订单金额\n  coalesce(sum(gmv) / sum(order_gmv - gmv),0)       AS roi             -- 客单价\nFROM dws_ope_ma_order_channel_trend_1d\nWHERE\n  ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, shopId, channel_dim, week_id;\n\n\n-------  自然月 --------\nCREATE TABLE if NOT EXISTS  dws_ope_ma_order_channel_trend_cm(\nstatDate             STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,month_id            STRING      COMMENT '月度ID'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,gmv                 DOUBLE      COMMENT '交易总额'\n,privilege_gmv       DOUBLE      COMMENT '优惠总额'\n,order_gmv           DOUBLE      COMMENT '订单总额'\n,roi                 DOUBLE      COMMENT 'roi'\n) COMMENT '门店订单渠道趋势分析自然月'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_order_channel_trend_cm PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'                           AS statDate,\n  tenantId,\n  shopId,\n  month_id,\n  channel_dim,\n  sum(gmv)                                          AS gmv,            -- 交易额 \n  sum(privilege_gmv)                                AS privilege_gmv,  -- 优惠金额 \n  sum(order_gmv)                                    AS order_gmv,      -- 订单金额\n  coalesce(sum(gmv) / sum(order_gmv - gmv),0)       AS roi             -- 客单价\nFROM dws_ope_ma_order_channel_trend_1d\nWHERE\n  ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, shopId, channel_dim, month_id;\n\n\n-------  自然季度 --------\nCREATE TABLE if NOT EXISTS  dws_ope_ma_order_channel_trend_cq(\nstatDate             STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,quarter_id          STRING      COMMENT '季度ID'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,gmv                 DOUBLE      COMMENT '交易总额'\n,privilege_gmv       DOUBLE      COMMENT '优惠总额'\n,order_gmv           DOUBLE      COMMENT '订单总额'\n,roi                 DOUBLE      COMMENT 'roi'\n) COMMENT '门店订单渠道趋势分析自然季度'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE dws_ope_ma_order_channel_trend_cq PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  '${bdp.system.bizdate}'                           AS statDate,\n  tenantId,\n  shopId,\n  quarter_id,\n  channel_dim,\n  sum(gmv)                                          AS gmv,            -- 交易额 \n  sum(privilege_gmv)                                AS privilege_gmv,  -- 优惠金额\n  sum(order_gmv)                                    AS order_gmv,      -- 订单金额\n  coalesce(sum(gmv) / sum(order_gmv - gmv),0)       AS roi             -- 客单价\nFROM dws_ope_ma_order_channel_trend_1d\nWHERE\n  ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, shopId, channel_dim, quarter_id;\n\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"15\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 20,
                            "nodePid": 1167,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 15 4 * * ?"
                        },
                        "id": 278803,
                        "gmtCreate": 1547647312000,
                        "gmtModified": 1547647312000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "6d9b8137",
                        "jobKey": "cronTrigger_1067_20190117041500",
                        "jobName": "cronJob_job_dws_ope_ma_order_channel_trend_period_20190117041500",
                        "status": 18,
                        "taskId": 1067,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:15:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1068,
                                    "gmtCreate": 1537350659000,
                                    "gmtModified": 1539254678000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "job_ads_nrs_ma_order_channel_trend_period",
                                    "taskType": 0,
                                    "computeType": 1,
                                    "engineType": 1,
                                    "sqlText": "set spark.sql.shuffle.partitions=1;\n-- set hive.exec.dynamic.partition.mode=nonstrict;\n\n-- DROP TABLE ads_nrs_ma_order_channel_trend_cw;\n-- DROP TABLE ads_nrs_ma_order_channel_trend_cm;\n-- DROP TABLE ads_nrs_ma_order_channel_trend_cq;\n\n-------  自然周 --------\nCREATE TABLE if NOT EXISTS ads_nrs_ma_order_channel_trend_cw(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计日期纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,order_gmv           DOUBLE      COMMENT '当日订单总额'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,privilege_gmv       DOUBLE      COMMENT '当日优惠总额'\n,roi                 DOUBLE      COMMENT '当日roi'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'  \n) COMMENT '门店订单渠道趋势分析自然周'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_order_channel_trend_cw PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'43',concat(substr(week_id,0,4),substr(week_id,6,7),'00'),channel_dim)     AS id, \ntenantId,\nshopId,\n'43'                                                    AS stat_dim,\nconcat(substr(week_id,0,4),substr(week_id,6,7),'00')    AS stat_time,\nchannel_dim,\norder_gmv,\ngmv,\nprivilege_gmv,\nroi,\n'${bdp.system.cyctime}'                                 AS gmt_created,\n'${bdp.system.cyctime}'                                 AS gmt_modified\nFROM dws_ope_ma_order_channel_trend_cw WHERE ds = '${bdp.system.bizdate}';\n\n\n-------  自然月 --------\nCREATE TABLE if NOT EXISTS ads_nrs_ma_order_channel_trend_cm(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计日期纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,order_gmv           DOUBLE      COMMENT '当日订单总额'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,privilege_gmv       DOUBLE      COMMENT '当日优惠总额'\n,roi                 DOUBLE      COMMENT '当日roi'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'  \n) COMMENT '门店订单渠道趋势分析自然月'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_order_channel_trend_cm PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'44',concat(month_id, '00'),channel_dim) AS id, \ntenantId,\nshopId,\n'44'                                                AS stat_dim,\nconcat(month_id, '00')                              AS stat_time,\nchannel_dim,\norder_gmv,\ngmv,\nprivilege_gmv,\nroi,\n'${bdp.system.cyctime}'                             AS gmt_created,\n'${bdp.system.cyctime}'                             AS gmt_modified\nFROM dws_ope_ma_order_channel_trend_cm WHERE ds = '${bdp.system.bizdate}';\n\n\n-------  自然季度 --------\nCREATE TABLE if NOT EXISTS ads_nrs_ma_order_channel_trend_cq(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计日期纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,order_gmv           DOUBLE      COMMENT '当日订单总额'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,privilege_gmv       DOUBLE      COMMENT '当日优惠总额'\n,roi                 DOUBLE      COMMENT '当日roi'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'  \n) COMMENT '门店订单渠道趋势分析自然季度'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_order_channel_trend_cq PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\nconcat(tenantId,shopId,'45',concat(substr(quarter_id,0,4),'0',substr(quarter_id,5,5),'00'),channel_dim) AS id, \ntenantId,\nshopId,\n'45'                                                                                        AS stat_dim,\nconcat(substr(quarter_id,0,4),'0',substr(quarter_id,5,5),'00')                              AS stat_time,\nchannel_dim,\norder_gmv,\ngmv,\nprivilege_gmv,\nroi,\n'${bdp.system.cyctime}'                                                                     AS gmt_created,\n'${bdp.system.cyctime}'                                                                     AS gmt_modified\nFROM dws_ope_ma_order_channel_trend_cq WHERE ds = '${bdp.system.bizdate}';\n\n\n",
                                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 16,
                                    "nodePid": 1170,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 30 4 * * ?"
                                },
                                "id": 278827,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547647312000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "2a237ae3",
                                "jobKey": "cronTrigger_1068_20190117043000",
                                "jobName": "cronJob_job_ads_nrs_ma_order_channel_trend_period_20190117043000",
                                "status": 18,
                                "taskId": 1068,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 04:30:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": [
                                    {
                                        "batchTask": {
                                            "id": 1070,
                                            "gmtCreate": 1537352241000,
                                            "gmtModified": 1537353012000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_ma_order_channel_trend_cw",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kX2N3L2RzPSR7YmRwLnN5c3RlbS5iaXpkYXRlfVwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn0sXCJjb2x1bW5cIjpbe1wibmFtZVwiOlwiaWRcIixcImluZGV4XCI6MCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJ0ZW5hbnRJZFwiLFwiaW5kZXhcIjoxLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInNob3BJZFwiLFwiaW5kZXhcIjoyLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfZGltXCIsXCJpbmRleFwiOjMsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwic3RhdF90aW1lXCIsXCJpbmRleFwiOjQsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiY2hhbm5lbF9kaW1cIixcImluZGV4XCI6NSxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJvcmRlcl9nbXZcIixcImluZGV4XCI6NixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJnbXZcIixcImluZGV4XCI6NyxcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJwcml2aWxlZ2VfZ212XCIsXCJpbmRleFwiOjgsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwicm9pXCIsXCJpbmRleFwiOjksXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6MTAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiZ210X21vZGlmaWVkXCIsXCJpbmRleFwiOjExLFwidHlwZVwiOlwic3RyaW5nXCJ9XSxcImRlZmF1bHRGU1wiOlwiaGRmczovL25zMVwiLFwiZmllbGREZWxpbWl0ZXJcIjpcIlxcdTAwMDFcIixcImVuY29kaW5nXCI6XCJ1dGYtOFwiLFwiZmlsZVR5cGVcIjpcIm9yY1wifSxcIm5hbWVcIjpcImhkZnNyZWFkZXJcIn0sXCJ3cml0ZXJcIjp7XCJuYW1lXCI6XCJteXNxbHdyaXRlclwiLFwicGFyYW1ldGVyXCI6e1wicG9zdFNxbFwiOltdLFwicGFzc3dvcmRcIjpcImR0c3RhY2syMDE4XCIsXCJzZXNzaW9uXCI6W10sXCJjb2x1bW5cIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZFwiXX1dLFwid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJzb3VyY2VJZHNcIjpbOTJdLFwicHJlU3FsXCI6W10sXCJ1c2VybmFtZVwiOlwibnJzX3poaXF1YW5cIn19fV0sXCJzZXR0aW5nXCI6e1wiZGlydHlcIjp7XCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY3dcIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9fSxcInNwZWVkXCI6e1wiY2hhbm5lbFwiOjEsXCJieXRlc1wiOjEwNDg1NzZ9LFwiZXJyb3JMaW1pdFwiOntcInJlY29yZFwiOjEwLFwicGVyY2VudGFnZVwiOjAuMH19fSB9IiwicGFyc2VyIjoie1widGFyZ2V0TWFwXCI6e1wic291cmNlSWRcIjo5MixcIm5hbWVcIjpcImR0c3RhY2tfa2VydXl1blwiLFwiY29sdW1uXCI6W3tcImtleVwiOlwiaWRcIixcInR5cGVcIjpcIkJJR0lOVFwifSx7XCJrZXlcIjpcInRlbmFudF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic2hvcF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcImlucHV0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwicHJpdmlsZWdlX2dtdlwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcInJvaVwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9tb2RpZmllZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn0se1wia2V5XCI6XCJnbXRfZGVsZXRlZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn1dLFwidHlwZVwiOntcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwidHlwZVwiOjEsXCJ0YWJsZVwiOltcIm5yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcImJpZ2ludFwifSx7XCJrZXlcIjpcIm9yZGVyX2dtdlwiLFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJwcml2aWxlZ2VfZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJyb2lcIixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wia2V5XCI6XCJnbXRfbW9kaWZpZWRcIixcInR5cGVcIjpcInN0cmluZ1wifV0sXCJ0YXJnZXRcIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMTBdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVsxMV1cIn1dLFwidHlwZVwiOntcInBhcnRpdGlvblwiOlwiZHM9JHtiZHAuc3lzdGVtLmJpemRhdGV9XCIsXCJ0eXBlXCI6NyxcInRhYmxlXCI6XCJhZHNfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY3dcIn0sXCJzb3VyY2VMaXN0XCI6W3tcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJzb3VyY2VJZFwiOjg1LFwidHlwZVwiOjcsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZF9jd1wiLFwia2V5XCI6XCJtYWluXCJ9XX0sXCJzZXR0aW5nXCI6e1wic3BlZWRcIjpcIjFcIixcImNoYW5uZWxcIjpcIjFcIixcInJlY29yZFwiOjEwLFwiaXNTYXZlRGlydHlcIjoxLFwicGVyY2VudGFnZVwiOjAsXCJsaWZlRGF5XCI6OTAsXCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY3dcIixcImhhZG9vcENvbmZpZ1wiOlwie1xcXCJkZnMuaGEubmFtZW5vZGVzLm5zMVxcXCI6XFxcIm5uMSxubjJcXFwiLFxcXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlxcXCI6XFxcIm5vZGUwMDY6OTAwMFxcXCIsXFxcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXFxcIjpcXFwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXFxcIjpcXFwibm9kZTAwNTo5MDAwXFxcIixcXFwiZGZzLm5hbWVzZXJ2aWNlc1xcXCI6XFxcIm5zMVxcXCJ9XCJ9fSIsImNyZWF0ZU1vZGVsIjowfQ==",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 2,
                                            "nodePid": 1195,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278860,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "8fd31227",
                                        "jobKey": "cronTrigger_1070_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_order_channel_trend_cw_20190117050000",
                                        "status": 18,
                                        "taskId": 1070,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297358,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547672407000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "8fd31227",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    },
                                    {
                                        "batchTask": {
                                            "id": 1071,
                                            "gmtCreate": 1537353064000,
                                            "gmtModified": 1537353113000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_ma_order_channel_trend_cm",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kX2NtL2RzPSR7YmRwLnN5c3RlbS5iaXpkYXRlfVwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn0sXCJjb2x1bW5cIjpbe1wibmFtZVwiOlwiaWRcIixcImluZGV4XCI6MCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJ0ZW5hbnRJZFwiLFwiaW5kZXhcIjoxLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInNob3BJZFwiLFwiaW5kZXhcIjoyLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfZGltXCIsXCJpbmRleFwiOjMsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwic3RhdF90aW1lXCIsXCJpbmRleFwiOjQsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiY2hhbm5lbF9kaW1cIixcImluZGV4XCI6NSxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJvcmRlcl9nbXZcIixcImluZGV4XCI6NixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJnbXZcIixcImluZGV4XCI6NyxcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJwcml2aWxlZ2VfZ212XCIsXCJpbmRleFwiOjgsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwicm9pXCIsXCJpbmRleFwiOjksXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6MTAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiZ210X21vZGlmaWVkXCIsXCJpbmRleFwiOjExLFwidHlwZVwiOlwic3RyaW5nXCJ9XSxcImRlZmF1bHRGU1wiOlwiaGRmczovL25zMVwiLFwiZmllbGREZWxpbWl0ZXJcIjpcIlxcdTAwMDFcIixcImVuY29kaW5nXCI6XCJ1dGYtOFwiLFwiZmlsZVR5cGVcIjpcIm9yY1wifSxcIm5hbWVcIjpcImhkZnNyZWFkZXJcIn0sXCJ3cml0ZXJcIjp7XCJuYW1lXCI6XCJteXNxbHdyaXRlclwiLFwicGFyYW1ldGVyXCI6e1wicG9zdFNxbFwiOltdLFwicGFzc3dvcmRcIjpcImR0c3RhY2syMDE4XCIsXCJzZXNzaW9uXCI6W10sXCJjb2x1bW5cIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZFwiXX1dLFwid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJzb3VyY2VJZHNcIjpbOTJdLFwicHJlU3FsXCI6W10sXCJ1c2VybmFtZVwiOlwibnJzX3poaXF1YW5cIn19fV0sXCJzZXR0aW5nXCI6e1wiZGlydHlcIjp7XCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY21cIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9fSxcInNwZWVkXCI6e1wiY2hhbm5lbFwiOjEsXCJieXRlc1wiOjEwNDg1NzZ9LFwiZXJyb3JMaW1pdFwiOntcInJlY29yZFwiOjEwLFwicGVyY2VudGFnZVwiOjAuMH19fSB9IiwicGFyc2VyIjoie1widGFyZ2V0TWFwXCI6e1wic291cmNlSWRcIjo5MixcIm5hbWVcIjpcImR0c3RhY2tfa2VydXl1blwiLFwiY29sdW1uXCI6W3tcImtleVwiOlwiaWRcIixcInR5cGVcIjpcIkJJR0lOVFwifSx7XCJrZXlcIjpcInRlbmFudF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic2hvcF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcImlucHV0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwicHJpdmlsZWdlX2dtdlwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcInJvaVwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9tb2RpZmllZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn0se1wia2V5XCI6XCJnbXRfZGVsZXRlZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn1dLFwidHlwZVwiOntcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwidHlwZVwiOjEsXCJ0YWJsZVwiOltcIm5yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcImJpZ2ludFwifSx7XCJrZXlcIjpcIm9yZGVyX2dtdlwiLFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJwcml2aWxlZ2VfZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJyb2lcIixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wia2V5XCI6XCJnbXRfbW9kaWZpZWRcIixcInR5cGVcIjpcInN0cmluZ1wifV0sXCJ0YXJnZXRcIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMTBdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVsxMV1cIn1dLFwidHlwZVwiOntcInBhcnRpdGlvblwiOlwiZHM9JHtiZHAuc3lzdGVtLmJpemRhdGV9XCIsXCJ0eXBlXCI6NyxcInRhYmxlXCI6XCJhZHNfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY21cIn0sXCJzb3VyY2VMaXN0XCI6W3tcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJzb3VyY2VJZFwiOjg1LFwidHlwZVwiOjcsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZF9jbVwiLFwia2V5XCI6XCJtYWluXCJ9XX0sXCJzZXR0aW5nXCI6e1wic3BlZWRcIjpcIjFcIixcImNoYW5uZWxcIjpcIjFcIixcInJlY29yZFwiOjEwLFwiaXNTYXZlRGlydHlcIjoxLFwicGVyY2VudGFnZVwiOjAsXCJsaWZlRGF5XCI6OTAsXCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY21cIixcImhhZG9vcENvbmZpZ1wiOlwie1xcXCJkZnMuaGEubmFtZW5vZGVzLm5zMVxcXCI6XFxcIm5uMSxubjJcXFwiLFxcXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlxcXCI6XFxcIm5vZGUwMDY6OTAwMFxcXCIsXFxcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXFxcIjpcXFwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXFxcIjpcXFwibm9kZTAwNTo5MDAwXFxcIixcXFwiZGZzLm5hbWVzZXJ2aWNlc1xcXCI6XFxcIm5zMVxcXCJ9XCJ9fSIsImNyZWF0ZU1vZGVsIjowfQ==",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 2,
                                            "nodePid": 1195,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278861,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "2b94d414",
                                        "jobKey": "cronTrigger_1071_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_order_channel_trend_cm_20190117050000",
                                        "status": 18,
                                        "taskId": 1071,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297359,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547672407000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "2b94d414",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    },
                                    {
                                        "batchTask": {
                                            "id": 1072,
                                            "gmtCreate": 1537353156000,
                                            "gmtModified": 1537353186000,
                                            "isDeleted": 0,
                                            "tenantId": 129,
                                            "projectId": 77,
                                            "name": "cdp_dt2mysql_nrs_ma_order_channel_trend_cq",
                                            "taskType": 2,
                                            "computeType": 1,
                                            "engineType": 0,
                                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kX2NxL2RzPSR7YmRwLnN5c3RlbS5iaXpkYXRlfVwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn0sXCJjb2x1bW5cIjpbe1wibmFtZVwiOlwiaWRcIixcImluZGV4XCI6MCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJ0ZW5hbnRJZFwiLFwiaW5kZXhcIjoxLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInNob3BJZFwiLFwiaW5kZXhcIjoyLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfZGltXCIsXCJpbmRleFwiOjMsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwic3RhdF90aW1lXCIsXCJpbmRleFwiOjQsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiY2hhbm5lbF9kaW1cIixcImluZGV4XCI6NSxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJvcmRlcl9nbXZcIixcImluZGV4XCI6NixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJnbXZcIixcImluZGV4XCI6NyxcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJwcml2aWxlZ2VfZ212XCIsXCJpbmRleFwiOjgsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwicm9pXCIsXCJpbmRleFwiOjksXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6MTAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiZ210X21vZGlmaWVkXCIsXCJpbmRleFwiOjExLFwidHlwZVwiOlwic3RyaW5nXCJ9XSxcImRlZmF1bHRGU1wiOlwiaGRmczovL25zMVwiLFwiZmllbGREZWxpbWl0ZXJcIjpcIlxcdTAwMDFcIixcImVuY29kaW5nXCI6XCJ1dGYtOFwiLFwiZmlsZVR5cGVcIjpcIm9yY1wifSxcIm5hbWVcIjpcImhkZnNyZWFkZXJcIn0sXCJ3cml0ZXJcIjp7XCJuYW1lXCI6XCJteXNxbHdyaXRlclwiLFwicGFyYW1ldGVyXCI6e1wicG9zdFNxbFwiOltdLFwicGFzc3dvcmRcIjpcImR0c3RhY2syMDE4XCIsXCJzZXNzaW9uXCI6W10sXCJjb2x1bW5cIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZFwiXX1dLFwid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJzb3VyY2VJZHNcIjpbOTJdLFwicHJlU3FsXCI6W10sXCJ1c2VybmFtZVwiOlwibnJzX3poaXF1YW5cIn19fV0sXCJzZXR0aW5nXCI6e1wiZGlydHlcIjp7XCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY3FcIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9fSxcInNwZWVkXCI6e1wiY2hhbm5lbFwiOjEsXCJieXRlc1wiOjEwNDg1NzZ9LFwiZXJyb3JMaW1pdFwiOntcInJlY29yZFwiOjEwLFwicGVyY2VudGFnZVwiOjAuMH19fSB9IiwicGFyc2VyIjoie1widGFyZ2V0TWFwXCI6e1wic291cmNlSWRcIjo5MixcIm5hbWVcIjpcImR0c3RhY2tfa2VydXl1blwiLFwiY29sdW1uXCI6W3tcImtleVwiOlwiaWRcIixcInR5cGVcIjpcIkJJR0lOVFwifSx7XCJrZXlcIjpcInRlbmFudF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic2hvcF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcImlucHV0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwicHJpdmlsZWdlX2dtdlwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcInJvaVwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9tb2RpZmllZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn0se1wia2V5XCI6XCJnbXRfZGVsZXRlZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn1dLFwidHlwZVwiOntcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwidHlwZVwiOjEsXCJ0YWJsZVwiOltcIm5yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcImJpZ2ludFwifSx7XCJrZXlcIjpcIm9yZGVyX2dtdlwiLFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJwcml2aWxlZ2VfZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJyb2lcIixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wia2V5XCI6XCJnbXRfbW9kaWZpZWRcIixcInR5cGVcIjpcInN0cmluZ1wifV0sXCJ0YXJnZXRcIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMTBdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVsxMV1cIn1dLFwidHlwZVwiOntcInBhcnRpdGlvblwiOlwiZHM9JHtiZHAuc3lzdGVtLmJpemRhdGV9XCIsXCJ0eXBlXCI6NyxcInRhYmxlXCI6XCJhZHNfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY3FcIn0sXCJzb3VyY2VMaXN0XCI6W3tcIm5hbWVcIjpcImludGVsX2NhcmRfZGV2XCIsXCJzb3VyY2VJZFwiOjg1LFwidHlwZVwiOjcsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZF9jcVwiLFwia2V5XCI6XCJtYWluXCJ9XX0sXCJzZXR0aW5nXCI6e1wic3BlZWRcIjpcIjFcIixcImNoYW5uZWxcIjpcIjFcIixcInJlY29yZFwiOjEwLFwicGVyY2VudGFnZVwiOjAsXCJpc1NhdmVEaXJ0eVwiOjEsXCJsaWZlRGF5XCI6OTAsXCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfY3FcIixcImhhZG9vcENvbmZpZ1wiOlwie1xcXCJkZnMuaGEubmFtZW5vZGVzLm5zMVxcXCI6XFxcIm5uMSxubjJcXFwiLFxcXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlxcXCI6XFxcIm5vZGUwMDY6OTAwMFxcXCIsXFxcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXFxcIjpcXFwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXFxcIjpcXFwibm9kZTAwNTo5MDAwXFxcIixcXFwiZGZzLm5hbWVzZXJ2aWNlc1xcXCI6XFxcIm5zMVxcXCJ9XCJ9fSIsImNyZWF0ZU1vZGVsIjowfQ==",
                                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                            "periodType": null,
                                            "scheduleStatus": 2,
                                            "submitStatus": 1,
                                            "modifyUserId": 90,
                                            "createUserId": 90,
                                            "ownerUserId": 90,
                                            "version": 1,
                                            "nodePid": 1195,
                                            "taskDesc": "",
                                            "mainClass": "",
                                            "exeArgs": "",
                                            "flowId": 0,
                                            "createUser": {
                                                "id": 90,
                                                "gmtCreate": 1535092930000,
                                                "gmtModified": 1535092930000,
                                                "isDeleted": 0,
                                                "userName": "yizhou@dtstack.com",
                                                "phoneNumber": null,
                                                "dtuicUserId": 6999,
                                                "email": "",
                                                "status": 0,
                                                "defaultProjectId": null
                                            },
                                            "modifyUser": null,
                                            "ownerUser": null,
                                            "taskPeriodId": 2,
                                            "taskPeriodType": "天任务",
                                            "nodePName": null,
                                            "readWriteLockVO": null,
                                            "userId": null,
                                            "lockVersion": null,
                                            "taskVariables": null,
                                            "forceUpdate": false,
                                            "subNodes": null,
                                            "relatedTasks": null,
                                            "createModel": 0,
                                            "operateModel": 0,
                                            "pythonVersion": 0,
                                            "learningType": 0,
                                            "input": null,
                                            "output": null,
                                            "options": null,
                                            "flowName": null,
                                            "syncModel": 0,
                                            "increColumn": null,
                                            "taskVOS": null,
                                            "subTaskVOS": null,
                                            "resourceList": null,
                                            "refResourceList": null,
                                            "taskVersions": null,
                                            "cron": "0 0 5 * * ?"
                                        },
                                        "id": 278862,
                                        "gmtCreate": 1547647312000,
                                        "gmtModified": 1547647312000,
                                        "isDeleted": 0,
                                        "tenantId": null,
                                        "projectId": null,
                                        "jobId": "9a193b11",
                                        "jobKey": "cronTrigger_1072_20190117050000",
                                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_order_channel_trend_cq_20190117050000",
                                        "status": 18,
                                        "taskId": 1072,
                                        "createUserId": 90,
                                        "type": 0,
                                        "businessDate": "2019-01-16 ",
                                        "cycTime": "2019-01-17 05:00:00",
                                        "execStartTime": null,
                                        "execEndTime": null,
                                        "execTime": null,
                                        "execStartDate": null,
                                        "execEndDate": null,
                                        "taskPeriodId": 2,
                                        "taskPeriodType": "天任务",
                                        "jobVOS": null,
                                        "batchEngineJob": {
                                            "id": 297360,
                                            "gmtCreate": 1547647312000,
                                            "gmtModified": 1547672407000,
                                            "isDeleted": 0,
                                            "status": 18,
                                            "jobId": "9a193b11",
                                            "engineJobId": null,
                                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                            "engineLog": "",
                                            "execStartTime": null,
                                            "execEndTime": null,
                                            "execTime": 0
                                        },
                                        "subNodes": null,
                                        "flowJobId": "0",
                                        "relatedJobs": null,
                                        "isDirty": 0
                                    }
                                ],
                                "batchEngineJob": {
                                    "id": 297325,
                                    "gmtCreate": 1547647312000,
                                    "gmtModified": 1547670607000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "2a237ae3",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297301,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547669707000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "6d9b8137",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    },
                    {
                        "batchTask": {
                            "id": 969,
                            "gmtCreate": 1536590077000,
                            "gmtModified": 1536818626000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_ads_nrs_ma_order_channel_trend_1d",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_ma_order_channel_trend_1d(\nid                   STRING      COMMENT '主键ID'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,stat_dim            STRING      COMMENT '统计日期纬度'\n,stat_time           STRING      COMMENT '统计日期'\n,channel_dim         BIGINT      COMMENT '订单渠道'\n,order_gmv           DOUBLE      COMMENT '当日订单总额'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,privilege_gmv       DOUBLE      COMMENT '当日优惠总额'\n,roi                 DOUBLE      COMMENT '当日roi'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'  \n) COMMENT '门店订单渠道趋势分析'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 1000;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE ads_nrs_ma_order_channel_trend_1d PARTITION (ds = '${bdp.system.bizdate}') \nSELECT\nconcat(tenantId, shopId, '42', '${bdp.system.bizdate}', channel_dim) AS id, \ntenantId,\nshopId,\n'42'                         AS stat_dim,\n'${bdp.system.bizdate}'      AS stat_time,\nchannel_dim,\norder_gmv,\ngmv,\nprivilege_gmv,\nroi                          AS roi,\n'${bdp.system.cyctime}'      AS gmt_created,\n'${bdp.system.cyctime}'      AS gmt_modified\nFROM dws_ope_ma_order_channel_trend_1d\nWHERE ds = '${bdp.system.bizdate}';",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 17,
                            "nodePid": 1170,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 30 4 * * ?"
                        },
                        "id": 278820,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "02fa1098",
                        "jobKey": "cronTrigger_969_20190117043000",
                        "jobName": "cronJob_job_ads_nrs_ma_order_channel_trend_1d_20190117043000",
                        "status": 18,
                        "taskId": 969,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:30:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 954,
                                    "gmtCreate": 1536511732000,
                                    "gmtModified": 1536817591000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "cdp_dt2mysql_nrs_ma_order_channel_trend_1d",
                                    "taskType": 2,
                                    "computeType": 1,
                                    "engineType": 0,
                                    "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kXzFkL2RzPSR7YmRwLnN5c3RlbS5iaXpkYXRlfVwiLFwiaGFkb29wQ29uZmlnXCI6e1wiZGZzLmhhLm5hbWVub2Rlcy5uczFcIjpcIm5uMSxubjJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCI6XCJub2RlMDA2OjkwMDBcIixcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCI6XCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMVwiOlwibm9kZTAwNTo5MDAwXCIsXCJkZnMubmFtZXNlcnZpY2VzXCI6XCJuczFcIn0sXCJjb2x1bW5cIjpbe1wibmFtZVwiOlwiaWRcIixcImluZGV4XCI6MCxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJ0ZW5hbnRJZFwiLFwiaW5kZXhcIjoxLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInNob3BJZFwiLFwiaW5kZXhcIjoyLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcIm5hbWVcIjpcInN0YXRfZGltXCIsXCJpbmRleFwiOjMsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwic3RhdF90aW1lXCIsXCJpbmRleFwiOjQsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiY2hhbm5lbF9kaW1cIixcImluZGV4XCI6NSxcInR5cGVcIjpcImJpZ2ludFwifSx7XCJuYW1lXCI6XCJvcmRlcl9nbXZcIixcImluZGV4XCI6NixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJnbXZcIixcImluZGV4XCI6NyxcInR5cGVcIjpcImRvdWJsZVwifSx7XCJuYW1lXCI6XCJwcml2aWxlZ2VfZ212XCIsXCJpbmRleFwiOjgsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwicm9pXCIsXCJpbmRleFwiOjksXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wibmFtZVwiOlwiZ210X2NyZWF0ZWRcIixcImluZGV4XCI6MTAsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiZ210X21vZGlmaWVkXCIsXCJpbmRleFwiOjExLFwidHlwZVwiOlwic3RyaW5nXCJ9XSxcImRlZmF1bHRGU1wiOlwiaGRmczovL25zMVwiLFwiZmllbGREZWxpbWl0ZXJcIjpcIlxcdTAwMDFcIixcImVuY29kaW5nXCI6XCJ1dGYtOFwiLFwiZmlsZVR5cGVcIjpcIm9yY1wifSxcIm5hbWVcIjpcImhkZnNyZWFkZXJcIn0sXCJ3cml0ZXJcIjp7XCJuYW1lXCI6XCJteXNxbHdyaXRlclwiLFwicGFyYW1ldGVyXCI6e1wicG9zdFNxbFwiOltdLFwicGFzc3dvcmRcIjpcImR0c3RhY2syMDE4XCIsXCJzZXNzaW9uXCI6W10sXCJjb2x1bW5cIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZFwiXX1dLFwid3JpdGVNb2RlXCI6XCJyZXBsYWNlXCIsXCJzb3VyY2VJZHNcIjpbOTJdLFwicHJlU3FsXCI6W10sXCJ1c2VybmFtZVwiOlwibnJzX3poaXF1YW5cIn19fV0sXCJzZXR0aW5nXCI6e1wiZGlydHlcIjp7XCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfMWRcIixcImhhZG9vcENvbmZpZ1wiOntcImRmcy5oYS5uYW1lbm9kZXMubnMxXCI6XCJubjEsbm4yXCIsXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiOlwibm9kZTAwNjo5MDAwXCIsXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiOlwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIjpcIm5vZGUwMDU6OTAwMFwiLFwiZGZzLm5hbWVzZXJ2aWNlc1wiOlwibnMxXCJ9fSxcInNwZWVkXCI6e1wiY2hhbm5lbFwiOjEsXCJieXRlc1wiOjEwNDg1NzZ9LFwiZXJyb3JMaW1pdFwiOntcInJlY29yZFwiOjEwLFwicGVyY2VudGFnZVwiOjAuMH19fSB9IiwicGFyc2VyIjoie1widGFyZ2V0TWFwXCI6e1wic291cmNlSWRcIjo5MixcIm5hbWVcIjpcImR0c3RhY2tfa2VydXl1blwiLFwiY29sdW1uXCI6W3tcImtleVwiOlwiaWRcIixcInR5cGVcIjpcIkJJR0lOVFwifSx7XCJrZXlcIjpcInRlbmFudF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic2hvcF9pZFwiLFwidHlwZVwiOlwiQklHSU5UXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwiSU5UXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcImlucHV0XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJERUNJTUFMXCJ9LHtcImtleVwiOlwicHJpdmlsZWdlX2dtdlwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcInJvaVwiLFwidHlwZVwiOlwiREVDSU1BTFwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJEQVRFVElNRVwifSx7XCJrZXlcIjpcImdtdF9tb2RpZmllZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn0se1wia2V5XCI6XCJnbXRfZGVsZXRlZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn1dLFwidHlwZVwiOntcIndyaXRlTW9kZVwiOlwicmVwbGFjZVwiLFwidHlwZVwiOjEsXCJ0YWJsZVwiOltcIm5yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1wia2V5XCI6XCJpZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwidGVuYW50SWRcIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInNob3BJZFwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwic3RhdF9kaW1cIixcInR5cGVcIjpcInN0cmluZ1wifSx7XCJrZXlcIjpcInN0YXRfdGltZVwiLFwidHlwZVwiOlwic3RyaW5nXCJ9LHtcImtleVwiOlwiY2hhbm5lbF9kaW1cIixcInR5cGVcIjpcImJpZ2ludFwifSx7XCJrZXlcIjpcIm9yZGVyX2dtdlwiLFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcImtleVwiOlwiZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJwcml2aWxlZ2VfZ212XCIsXCJ0eXBlXCI6XCJkb3VibGVcIn0se1wia2V5XCI6XCJyb2lcIixcInR5cGVcIjpcImRvdWJsZVwifSx7XCJrZXlcIjpcImdtdF9jcmVhdGVkXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wia2V5XCI6XCJnbXRfbW9kaWZpZWRcIixcInR5cGVcIjpcInN0cmluZ1wifV0sXCJ0YXJnZXRcIjpbXCJpZFwiLFwidGVuYW50X2lkXCIsXCJzaG9wX2lkXCIsXCJzdGF0X2RpbVwiLFwic3RhdF90aW1lXCIsXCJjaGFubmVsX2RpbVwiLFwiaW5wdXRcIixcImdtdlwiLFwicHJpdmlsZWdlX2dtdlwiLFwicm9pXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs2XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbN11cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzhdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVs5XVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMTBdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVsxMV1cIn1dLFwidHlwZVwiOntcInBhcnRpdGlvblwiOlwiZHM9JHtiZHAuc3lzdGVtLmJpemRhdGV9XCIsXCJ0eXBlXCI6NyxcInRhYmxlXCI6XCJhZHNfbnJzX21hX29yZGVyX2NoYW5uZWxfdHJlbmRfMWRcIn0sXCJzb3VyY2VMaXN0XCI6W3tcInNvdXJjZUlkXCI6ODUsXCJ0YWJsZXNcIjpcImFkc19ucnNfbWFfb3JkZXJfY2hhbm5lbF90cmVuZF8xZFwiLFwibmFtZVwiOlwiaW50ZWxfY2FyZF9kZXZcIixcInR5cGVcIjo3LFwia2V5XCI6XCJtYWluXCJ9XX0sXCJzZXR0aW5nXCI6e1wicGF0aFwiOlwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV9vcmRlcl9jaGFubmVsX3RyZW5kXzFkXCIsXCJyZWNvcmRcIjoxMCxcInBlcmNlbnRhZ2VcIjowLFwiaGFkb29wQ29uZmlnXCI6XCJ7XFxcImRmcy5oYS5uYW1lbm9kZXMubnMxXFxcIjpcXFwibm4xLG5uMlxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXFxcIjpcXFwibm9kZTAwNjo5MDAwXFxcIixcXFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcXFwiOlxcXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXFxcIixcXFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcXFwiOlxcXCJub2RlMDA1OjkwMDBcXFwiLFxcXCJkZnMubmFtZXNlcnZpY2VzXFxcIjpcXFwibnMxXFxcIn1cIixcImNoYW5uZWxcIjpcIjFcIixcImxpZmVEYXlcIjo5MCxcInNwZWVkXCI6XCIxXCIsXCJpc1NhdmVEaXJ0eVwiOjF9fSIsImNyZWF0ZU1vZGVsIjowfQ==",
                                    "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 7,
                                    "nodePid": 1161,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 5 * * ?"
                                },
                                "id": 278846,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "3f5653fb",
                                "jobKey": "cronTrigger_954_20190117050000",
                                "jobName": "cronJob_cdp_dt2mysql_nrs_ma_order_channel_trend_1d_20190117050000",
                                "status": 18,
                                "taskId": 954,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 05:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": null,
                                "batchEngineJob": {
                                    "id": 297344,
                                    "gmtCreate": 1547647311000,
                                    "gmtModified": 1547672418000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "3f5653fb",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297318,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547670609000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "02fa1098",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297195,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547668893000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "1c4df343",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 967,
                    "gmtCreate": 1536588523000,
                    "gmtModified": 1536653122000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_dws_ope_ma_overview_1d",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS dws_ope_ma_overview_1d(\nstat_date            STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,order_gmv           DOUBLE      COMMENT '当日订单总额'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,privilege_gmv       DOUBLE      COMMENT '当日优惠总额'\n,tc                  INT         COMMENT '当日交易笔数'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'\n) COMMENT '门店每日经营概况'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\nINSERT OVERWRITE TABLE dws_ope_ma_overview_1d PARTITION (ds)\nSELECT\n  '${bdp.system.bizdate}' AS statDate,\n  res.tenantId,\n  res.shopId,\n  res.order_gmv,\n  res.gmv,\n  res.privilege_gmv,\n  res.tc,\n  '${bdp.system.cyctime}' AS gmt_created,\n  '${bdp.system.cyctime}' AS gmt_modified,\n  res.paymentTime         AS ds\nFROM (SELECT\n        tenantId,\n        shopId,\n        date_format(paymentTime, 'yyyyMMdd')  AS paymentTime,\n        sum(custActualPay)                    AS order_gmv,\n        sum(shopActualAmount)                 AS gmv,\n        sum(custActualPay - shopActualAmount) AS privilege_gmv,\n        count(DISTINCT orderId)               AS tc\n      FROM dwd_ord_trd_d\n      WHERE tradeStatus = 4 AND ds = '${bdp.system.bizdate}'\n      GROUP BY tenantId, shopId, date_format(paymentTime, 'yyyyMMdd')\n      UNION\n      SELECT\n        tenantId,\n        0,\n        date_format(paymentTime, 'yyyyMMdd')  AS paymentTime,\n        sum(custActualPay)                    AS order_gmv,\n        sum(shopActualAmount)                 AS gmv,\n        sum(custActualPay - shopActualAmount) AS privilege_gmv,\n        count(DISTINCT orderId)               AS tc\n      FROM dwd_ord_trd_d\n      WHERE tradeStatus = 4 AND ds = '${bdp.system.bizdate}'\n      GROUP BY tenantId, date_format(paymentTime, 'yyyyMMdd')) res;\n\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 9,
                    "nodePid": 1167,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278699,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "cd460c88",
                "jobKey": "cronTrigger_967_20190117040000",
                "jobName": "cronJob_job_dws_ope_ma_overview_1d_20190117040000",
                "status": 18,
                "taskId": 967,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 966,
                            "gmtCreate": 1536587582000,
                            "gmtModified": 1537155933000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "job_ads_nrs_ma_daily_overview",
                            "taskType": 0,
                            "computeType": 1,
                            "engineType": 1,
                            "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_ma_daily_overview(\nid                   STRING      COMMENT '主键ID'\n,stat_date           STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,order_gmv           DOUBLE      COMMENT '当日订单总额'\n,gmv                 DOUBLE      COMMENT '当日交易总额'\n,privilege_gmv       DOUBLE      COMMENT '当日优惠总额'\n,tc                  BIGINT      COMMENT '当日交易笔数'\n,gmt_created         STRING      COMMENT '创建时间'\n,gmt_modified        STRING      COMMENT '修改时间'\n) COMMENT '门店每日经营概况'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 1000;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE ads_nrs_ma_daily_overview PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  concat(tenantId,shopId,'${bdp.system.bizdate}')   AS id,\n  concat(substr(${bdp.system.bizdate}, 0, 4), '-', substr(${bdp.system.bizdate}, 5, 2), '-',substr(${bdp.system.bizdate}, 7, 2)) AS statDate,\n  tenantId,\n  shopId,\n  order_gmv,\n  gmv,\n  privilege_gmv,\n  tc,\n  '${bdp.system.cyctime}' AS gmt_created,\n  '${bdp.system.cyctime}' AS gmt_modified\nFROM dws_ope_ma_overview_1d WHERE ds = '${bdp.system.bizdate}';\n\n",
                            "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 18,
                            "nodePid": 1170,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 30 4 * * ?"
                        },
                        "id": 278818,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "eae6e2ce",
                        "jobKey": "cronTrigger_966_20190117043000",
                        "jobName": "cronJob_job_ads_nrs_ma_daily_overview_20190117043000",
                        "status": 18,
                        "taskId": 966,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 04:30:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": [
                            {
                                "batchTask": {
                                    "id": 1038,
                                    "gmtCreate": 1537156301000,
                                    "gmtModified": 1537156335000,
                                    "isDeleted": 0,
                                    "tenantId": 129,
                                    "projectId": 77,
                                    "name": "cdp_dt2mysql_nrs_ma_daily_overview_script",
                                    "taskType": 2,
                                    "computeType": 1,
                                    "engineType": 0,
                                    "sqlText": "eyJqb2IiOiJ7XG4gIFwiam9iXCIgOiB7XG4gICAgXCJjb250ZW50XCIgOiBbIHtcbiAgICAgIFwicmVhZGVyXCIgOiB7XG4gICAgICAgIFwicGFyYW1ldGVyXCIgOiB7XG4gICAgICAgICAgXCJwYXRoXCIgOiBcImhkZnM6Ly9uczEvdXNlci9oaXZlL3dhcmVob3VzZS9pbnRlbF9jYXJkX2Rldi5kYi9hZHNfbnJzX21hX2RhaWx5X292ZXJ2aWV3L2RzPSR7YmRwLnN5c3RlbS5iaXpkYXRlfVwiLFxuICAgICAgICAgIFwiaGFkb29wQ29uZmlnXCIgOiB7XG4gICAgICAgICAgICBcImRmcy5oYS5uYW1lbm9kZXMubnMxXCIgOiBcIm5uMSxubjJcIixcbiAgICAgICAgICAgIFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjJcIiA6IFwibm9kZTAwNjo5MDAwXCIsXG4gICAgICAgICAgICBcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCIgOiBcIm9yZy5hcGFjaGUuaGFkb29wLmhkZnMuc2VydmVyLm5hbWVub2RlLmhhLkNvbmZpZ3VyZWRGYWlsb3ZlclByb3h5UHJvdmlkZXJcIixcbiAgICAgICAgICAgIFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIiA6IFwibm9kZTAwNTo5MDAwXCIsXG4gICAgICAgICAgICBcImRmcy5uYW1lc2VydmljZXNcIiA6IFwibnMxXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiY29sdW1uXCIgOiBbIHtcbiAgICAgICAgICAgIFwibmFtZVwiIDogXCJpZFwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMCxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJzdHJpbmdcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFwibmFtZVwiIDogXCJzdGF0X2RhdGVcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDEsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiZGF0ZVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInRlbmFudElkXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiAyLFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcInN0cmluZ1wiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInNob3BJZFwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMyxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJzdHJpbmdcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFwibmFtZVwiIDogXCJvcmRlcl9nbXZcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDQsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiZG91YmxlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ212XCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA1LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImRvdWJsZVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInByaXZpbGVnZV9nbXZcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDYsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiZG91YmxlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwidGNcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDcsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiYmlnaW50XCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ210X2NyZWF0ZWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDgsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ210X21vZGlmaWVkXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA5LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcInN0cmluZ1wiXG4gICAgICAgICAgfSBdLFxuICAgICAgICAgIFwiZGVmYXVsdEZTXCIgOiBcImhkZnM6Ly9uczFcIixcbiAgICAgICAgICBcImZpZWxkRGVsaW1pdGVyXCIgOiBcIlxcdTAwMDFcIixcbiAgICAgICAgICBcImVuY29kaW5nXCIgOiBcInV0Zi04XCIsXG4gICAgICAgICAgXCJmaWxlVHlwZVwiIDogXCJvcmNcIlxuICAgICAgICB9LFxuICAgICAgICBcIm5hbWVcIiA6IFwiaGRmc3JlYWRlclwiXG4gICAgICB9LFxuICAgICAgXCJ3cml0ZXJcIiA6IHtcbiAgICAgICAgXCJuYW1lXCIgOiBcIm15c3Fsd3JpdGVyXCIsXG4gICAgICAgIFwicGFyYW1ldGVyXCIgOiB7XG4gICAgICAgICAgXCJwb3N0U3FsXCIgOiBbIF0sXG4gICAgICAgICAgXCJwYXNzd29yZFwiIDogXCJkdHN0YWNrMjAxOFwiLFxuICAgICAgICAgIFwic2Vzc2lvblwiIDogWyBdLFxuICAgICAgICAgIFwiY29sdW1uXCIgOiBbIFwiaWRcIiwgXCJzdGF0X2RhdGVcIiwgXCJ0ZW5hbnRfaWRcIiwgXCJzaG9wX2lkXCIsIFwib3JkZXJfZ212XCIsIFwiZ212XCIsIFwicHJpdmlsZWdlX2dtdlwiLCBcInRjXCIsIFwiZ210X2NyZWF0ZWRcIiwgXCJnbXRfbW9kaWZpZWRcIiBdLFxuICAgICAgICAgIFwiY29ubmVjdGlvblwiIDogWyB7XG4gICAgICAgICAgICBcImpkYmNVcmxcIiA6IFwiamRiYzpteXNxbDovLzE3Mi4xNi4yMC42OjMzMDYvbnJzX3poaXF1YW5cIixcbiAgICAgICAgICAgIFwidGFibGVcIiA6IFsgXCJucnNfbWFfZGFpbHlfb3ZlcnZpZXdcIiBdXG4gICAgICAgICAgfSBdLFxuICAgICAgICAgIFwid3JpdGVNb2RlXCIgOiBcInJlcGxhY2VcIixcbiAgICAgICAgICBcInNvdXJjZUlkc1wiIDogWyA5MiBdLFxuICAgICAgICAgIFwicHJlU3FsXCIgOiBbIF0sXG4gICAgICAgICAgXCJ1c2VybmFtZVwiIDogXCJucnNfemhpcXVhblwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IF0sXG4gICAgXCJzZXR0aW5nXCIgOiB7XG4gICAgICBcImRpcnR5XCIgOiB7XG4gICAgICAgIFwicGF0aFwiIDogXCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21hX2RhaWx5X292ZXJ2aWV3XCIsXG4gICAgICAgIFwiaGFkb29wQ29uZmlnXCIgOiB7XG4gICAgICAgICAgXCJkZnMuaGEubmFtZW5vZGVzLm5zMVwiIDogXCJubjEsbm4yXCIsXG4gICAgICAgICAgXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlwiIDogXCJub2RlMDA2OjkwMDBcIixcbiAgICAgICAgICBcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXCIgOiBcIm9yZy5hcGFjaGUuaGFkb29wLmhkZnMuc2VydmVyLm5hbWVub2RlLmhhLkNvbmZpZ3VyZWRGYWlsb3ZlclByb3h5UHJvdmlkZXJcIixcbiAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXCIgOiBcIm5vZGUwMDU6OTAwMFwiLFxuICAgICAgICAgIFwiZGZzLm5hbWVzZXJ2aWNlc1wiIDogXCJuczFcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgXCJzcGVlZFwiIDoge1xuICAgICAgICBcImNoYW5uZWxcIiA6IDEsXG4gICAgICAgIFwiYnl0ZXNcIiA6IDEwNDg1NzZcbiAgICAgIH0sXG4gICAgICBcImVycm9yTGltaXRcIiA6IHtcbiAgICAgICAgXCJyZWNvcmRcIiA6IDEwLFxuICAgICAgICBcInBlcmNlbnRhZ2VcIiA6IDAuMFxuICAgICAgfVxuICAgIH1cbiAgfVxufSIsImNyZWF0ZU1vZGVsIjoxfQ==",
                                    "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                                    "periodType": null,
                                    "scheduleStatus": 2,
                                    "submitStatus": 1,
                                    "modifyUserId": 90,
                                    "createUserId": 90,
                                    "ownerUserId": 90,
                                    "version": 1,
                                    "nodePid": 1187,
                                    "taskDesc": "",
                                    "mainClass": "",
                                    "exeArgs": "",
                                    "flowId": 0,
                                    "createUser": {
                                        "id": 90,
                                        "gmtCreate": 1535092930000,
                                        "gmtModified": 1535092930000,
                                        "isDeleted": 0,
                                        "userName": "yizhou@dtstack.com",
                                        "phoneNumber": null,
                                        "dtuicUserId": 6999,
                                        "email": "",
                                        "status": 0,
                                        "defaultProjectId": null
                                    },
                                    "modifyUser": null,
                                    "ownerUser": null,
                                    "taskPeriodId": 2,
                                    "taskPeriodType": "天任务",
                                    "nodePName": null,
                                    "readWriteLockVO": null,
                                    "userId": null,
                                    "lockVersion": null,
                                    "taskVariables": null,
                                    "forceUpdate": false,
                                    "subNodes": null,
                                    "relatedTasks": null,
                                    "createModel": 0,
                                    "operateModel": 0,
                                    "pythonVersion": 0,
                                    "learningType": 0,
                                    "input": null,
                                    "output": null,
                                    "options": null,
                                    "flowName": null,
                                    "syncModel": 0,
                                    "increColumn": null,
                                    "taskVOS": null,
                                    "subTaskVOS": null,
                                    "resourceList": null,
                                    "refResourceList": null,
                                    "taskVersions": null,
                                    "cron": "0 0 5 * * ?"
                                },
                                "id": 278854,
                                "gmtCreate": 1547647311000,
                                "gmtModified": 1547647311000,
                                "isDeleted": 0,
                                "tenantId": null,
                                "projectId": null,
                                "jobId": "62217412",
                                "jobKey": "cronTrigger_1038_20190117050000",
                                "jobName": "cronJob_cdp_dt2mysql_nrs_ma_daily_overview_script_20190117050000",
                                "status": 18,
                                "taskId": 1038,
                                "createUserId": 90,
                                "type": 0,
                                "businessDate": "2019-01-16 ",
                                "cycTime": "2019-01-17 05:00:00",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": null,
                                "execStartDate": null,
                                "execEndDate": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "jobVOS": null,
                                "batchEngineJob": {
                                    "id": 297352,
                                    "gmtCreate": 1547647311000,
                                    "gmtModified": 1547672407000,
                                    "isDeleted": 0,
                                    "status": 18,
                                    "jobId": "62217412",
                                    "engineJobId": null,
                                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                                    "engineLog": "",
                                    "execStartTime": null,
                                    "execEndTime": null,
                                    "execTime": 0
                                },
                                "subNodes": null,
                                "flowJobId": "0",
                                "relatedJobs": null,
                                "isDirty": 0
                            }
                        ],
                        "batchEngineJob": {
                            "id": 297316,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547670609000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "eae6e2ce",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297197,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547668893000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "cd460c88",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 1050,
                    "gmtCreate": 1537324920000,
                    "gmtModified": 1537327827000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "dws_alg_flow_job",
                    "taskType": 10,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "[{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1052,\"gmtCreate\":1537327160000,\"gmtModified\":1537327160000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_3d\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_3d(\\nstatDate            STRING      COMMENT '统计日期'\\n,tenantId           STRING      COMMENT '租户ID'\\n,shopId             STRING      COMMENT '门店ID'\\n,customerId         STRING      COMMENT '顾客ID'\\n,inter_days_3d      BIGINT      COMMENT '最近3天顾客最后一次发生支付行为距离当前日期多少天'\\n,pay_quantity_3d    BIGINT      COMMENT '最近3天顾客支付行为次数'\\n,pay_amount_3d      DOUBLE      COMMENT '最近3天顾客支付总金额'\\n,tot_days_3d        BIGINT      COMMENT '最近3天顾客出现支付行为的天数之和'\\n) COMMENT '最近3天算法信息指标'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\nset spark.sql.shuffle.partitions=1;\\n\\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_3d PARTITION(ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(\\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\\n  tenantId,\\n  min(shopId)                                             AS shopId,\\n  customerId,\\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\\n           max(max_payment_time))                         AS inter_days_3d,\\n  sum(pay_quantity_1d)                                    AS pay_quantity_3d,\\n  sum(pay_amount_1d)                                      AS pay_amount_3d,\\n  sum(tot_days_1d)                                        AS tot_days_3d\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE ds BETWEEN '${key_3d}' AND '${bdp.system.bizdate}'\\nGROUP BY tenantId, customerId;\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":0,\\\"min\\\":\\\"0\\\",\\\"hour\\\":\\\"4\\\",\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":2,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327159000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0},{\"paramName\":\"key_3d\",\"paramCommand\":\"$[yyyyMMdd-3]\",\"type\":1}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":32,\"column\":1}},\"x\":0,\"y\":80,\"value\":null,\"id\":1052},{\"vertex\":false,\"edge\":true,\"x\":0,\"y\":0,\"value\":\"\",\"id\":\"1054\",\"source\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},\"target\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1052,\"gmtCreate\":1537327160000,\"gmtModified\":1537327160000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_3d\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_3d(\\nstatDate            STRING      COMMENT '统计日期'\\n,tenantId           STRING      COMMENT '租户ID'\\n,shopId             STRING      COMMENT '门店ID'\\n,customerId         STRING      COMMENT '顾客ID'\\n,inter_days_3d      BIGINT      COMMENT '最近3天顾客最后一次发生支付行为距离当前日期多少天'\\n,pay_quantity_3d    BIGINT      COMMENT '最近3天顾客支付行为次数'\\n,pay_amount_3d      DOUBLE      COMMENT '最近3天顾客支付总金额'\\n,tot_days_3d        BIGINT      COMMENT '最近3天顾客出现支付行为的天数之和'\\n) COMMENT '最近3天算法信息指标'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\nset spark.sql.shuffle.partitions=1;\\n\\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_3d PARTITION(ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(\\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\\n  tenantId,\\n  min(shopId)                                             AS shopId,\\n  customerId,\\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\\n           max(max_payment_time))                         AS inter_days_3d,\\n  sum(pay_quantity_1d)                                    AS pay_quantity_3d,\\n  sum(pay_amount_1d)                                      AS pay_amount_3d,\\n  sum(tot_days_1d)                                        AS tot_days_3d\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE ds BETWEEN '${key_3d}' AND '${bdp.system.bizdate}'\\nGROUP BY tenantId, customerId;\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":0,\\\"min\\\":\\\"0\\\",\\\"hour\\\":\\\"4\\\",\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":2,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327159000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0},{\"paramName\":\"key_3d\",\"paramCommand\":\"$[yyyyMMdd-3]\",\"type\":1}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":32,\"column\":1}},\"x\":0,\"y\":80,\"value\":null,\"id\":1052}},{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1053,\"gmtCreate\":1537327261000,\"gmtModified\":1537327261000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_7d\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_7d(\\nstatDate            STRING      COMMENT '统计日期'\\n,tenantId           STRING      COMMENT '租户ID'\\n,shopId             STRING      COMMENT '门店ID'\\n,customerId         STRING      COMMENT '顾客ID'\\n,inter_days_7d      BIGINT      COMMENT '最近7天顾客最后一次发生支付行为距离当前日期多少天'\\n,pay_quantity_7d    BIGINT      COMMENT '最近7天顾客支付行为次数'\\n,pay_amount_7d      DOUBLE      COMMENT '最近7天顾客支付总金额'\\n,tot_days_7d        BIGINT      COMMENT '最近7天顾客出现支付行为的天数之和'\\n) COMMENT '最近7天算法信息指标'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\nset spark.sql.shuffle.partitions=1;\\n\\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_7d PARTITION(ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(\\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\\n  tenantId,\\n  min(shopId)                                             AS shopId,\\n  customerId,\\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\\n           max(max_payment_time))                         AS inter_days_7d,\\n  sum(pay_quantity_1d)                                    AS pay_quantity_7d,\\n  sum(pay_amount_1d)                                      AS pay_amount_7d,\\n  sum(tot_days_1d)                                        AS tot_days_7d\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}'\\nGROUP BY tenantId, customerId;\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":0,\\\"min\\\":\\\"0\\\",\\\"hour\\\":\\\"4\\\",\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":3,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327261000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0},{\"paramName\":\"key_7d\",\"paramCommand\":\"$[yyyyMMdd-7]\",\"type\":1}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":32,\"column\":1}},\"x\":170,\"y\":80,\"value\":null,\"id\":1053},{\"vertex\":false,\"edge\":true,\"x\":0,\"y\":0,\"value\":\"\",\"id\":\"1055\",\"source\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},\"target\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1053,\"gmtCreate\":1537327261000,\"gmtModified\":1537327261000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_7d\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_7d(\\nstatDate            STRING      COMMENT '统计日期'\\n,tenantId           STRING      COMMENT '租户ID'\\n,shopId             STRING      COMMENT '门店ID'\\n,customerId         STRING      COMMENT '顾客ID'\\n,inter_days_7d      BIGINT      COMMENT '最近7天顾客最后一次发生支付行为距离当前日期多少天'\\n,pay_quantity_7d    BIGINT      COMMENT '最近7天顾客支付行为次数'\\n,pay_amount_7d      DOUBLE      COMMENT '最近7天顾客支付总金额'\\n,tot_days_7d        BIGINT      COMMENT '最近7天顾客出现支付行为的天数之和'\\n) COMMENT '最近7天算法信息指标'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\nset spark.sql.shuffle.partitions=1;\\n\\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_7d PARTITION(ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(\\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\\n  tenantId,\\n  min(shopId)                                             AS shopId,\\n  customerId,\\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\\n           max(max_payment_time))                         AS inter_days_7d,\\n  sum(pay_quantity_1d)                                    AS pay_quantity_7d,\\n  sum(pay_amount_1d)                                      AS pay_amount_7d,\\n  sum(tot_days_1d)                                        AS tot_days_7d\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}'\\nGROUP BY tenantId, customerId;\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":0,\\\"min\\\":\\\"0\\\",\\\"hour\\\":\\\"4\\\",\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":3,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327261000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0},{\"paramName\":\"key_7d\",\"paramCommand\":\"$[yyyyMMdd-7]\",\"type\":1}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":32,\"column\":1}},\"x\":170,\"y\":80,\"value\":null,\"id\":1053}},{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1054,\"parentId\":1193,\"name\":\"job_dws_alg_15d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1169,\"gmtCreate\":null,\"gmtModified\":1537327326523,\"isDeleted\":0,\"lockName\":\"1054_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1054,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":340,\"y\":80,\"value\":null,\"id\":\"1056\"},{\"vertex\":false,\"edge\":true,\"x\":0,\"y\":0,\"value\":\"\",\"id\":\"1057\",\"source\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},\"target\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1054,\"parentId\":1193,\"name\":\"job_dws_alg_15d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1169,\"gmtCreate\":null,\"gmtModified\":1537327326523,\"isDeleted\":0,\"lockName\":\"1054_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1054,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":340,\"y\":80,\"value\":null,\"id\":\"1056\"}},{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1055,\"gmtCreate\":1537327392000,\"gmtModified\":1537327392000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_30d\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":false, \\\"min\\\":0,\\\"hour\\\":0,\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":0,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":1170,\"gmtCreate\":1537327392000,\"gmtModified\":1537327392000,\"isDeleted\":0,\"lockName\":\"1055_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1055,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\"},\"x\":510,\"y\":80,\"value\":null,\"id\":\"1058\"},{\"vertex\":false,\"edge\":true,\"x\":0,\"y\":0,\"value\":\"\",\"id\":\"1059\",\"source\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},\"target\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1055,\"gmtCreate\":1537327392000,\"gmtModified\":1537327392000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_30d\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":false, \\\"min\\\":0,\\\"hour\\\":0,\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":0,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":1170,\"gmtCreate\":1537327392000,\"gmtModified\":1537327392000,\"isDeleted\":0,\"lockName\":\"1055_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1055,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\"},\"x\":510,\"y\":80,\"value\":null,\"id\":\"1058\"}},{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1056,\"gmtCreate\":1537327469000,\"gmtModified\":1537327469000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_std\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_std(\\nstatDate                STRING      COMMENT '统计日期'\\n,tenantId               STRING      COMMENT '租户ID'\\n,shopId                 STRING      COMMENT '门店ID'\\n,customerId             STRING      COMMENT '顾客ID'\\n,inter_days_std         BIGINT      COMMENT '历史至今顾客最后一次发生支付行为距离当前日期多少天'\\n,pay_quantity_std       BIGINT      COMMENT '历史至今顾客支付行为次数'\\n,pay_amount_std         DOUBLE      COMMENT '历史至今顾客支付总金额'\\n,tot_days_std           BIGINT      COMMENT '历史至今顾客出现支付行为的天数之和'\\n) COMMENT '历史至今算法信息指标'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\nset spark.sql.shuffle.partitions=1;\\n\\n-- INSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\\n-- SELECT\\n--   date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)                                AS statDate,\\n--   coalesce(d.tenantId, std.tenantId)                                 AS tenantId,\\n--   coalesce(d.shopId, std.shopId)                                     AS shopId,\\n--   coalesce(d.customerId, std.customerId)                             AS customerId,\\n--   if(coalesce(d.inter_days_1d,0) = 1, 1, std.inter_days_std + 1)     AS inter_days_std,\\n--   coalesce(d.pay_quantity_1d, 0) + coalesce(std.pay_quantity_std, 0) AS pay_quantity_std,\\n--   coalesce(d.pay_amount_1d, 0) + coalesce(std.pay_amount_std, 0)     AS pay_amount_std,\\n--   coalesce(d.tot_days_1d, 0) + coalesce(std.tot_days_std, 0)         AS tot_days_std\\n-- FROM (\\n--   SELECT \\n--   tenantId,\\n--   shopId,\\n--   customerId,\\n--   inter_days_1d,\\n--   pay_quantity_1d,\\n--   pay_amount_1d,\\n--   tot_days_1d\\n--   FROM \\n--   dws_alg_trd_pay_cust_1d WHERE ds = '${bdp.system.bizdate}') d\\n-- FULL OUTER JOIN (\\n--   SELECT \\n--   tenantId,\\n--   shopId,\\n--   customerId,\\n--   inter_days_std,\\n--   pay_quantity_std,\\n--   pay_amount_std,\\n--   tot_days_std \\n--   FROM dws_alg_trd_pay_cust_std WHERE ds = '${key_2d}') std\\n-- ON d.tenantId = std.tenantId AND d.customerId = std.customerId;\\n\\n\\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(\\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\\n  tenantId,\\n  min(shopId)                                             AS shopId,\\n  customerId,\\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\\n           max(max_payment_time))                         AS inter_days_std,\\n  sum(pay_quantity_1d)                                    AS pay_quantity_std,\\n  sum(pay_amount_1d)                                      AS pay_amount_std,\\n  sum(tot_days_1d)                                        AS tot_days_std\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE ds <= '${bdp.system.bizdate}'\\nGROUP BY tenantId, customerId;\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":0,\\\"min\\\":\\\"0\\\",\\\"hour\\\":\\\"4\\\",\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":1,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327468000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":66,\"column\":1}},\"x\":680,\"y\":80,\"value\":null,\"id\":\"1060\"},{\"vertex\":false,\"edge\":true,\"x\":0,\"y\":0,\"value\":\"\",\"id\":\"1061\",\"source\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},\"target\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1056,\"gmtCreate\":1537327469000,\"gmtModified\":1537327469000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_std\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_std(\\nstatDate                STRING      COMMENT '统计日期'\\n,tenantId               STRING      COMMENT '租户ID'\\n,shopId                 STRING      COMMENT '门店ID'\\n,customerId             STRING      COMMENT '顾客ID'\\n,inter_days_std         BIGINT      COMMENT '历史至今顾客最后一次发生支付行为距离当前日期多少天'\\n,pay_quantity_std       BIGINT      COMMENT '历史至今顾客支付行为次数'\\n,pay_amount_std         DOUBLE      COMMENT '历史至今顾客支付总金额'\\n,tot_days_std           BIGINT      COMMENT '历史至今顾客出现支付行为的天数之和'\\n) COMMENT '历史至今算法信息指标'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\nset spark.sql.shuffle.partitions=1;\\n\\n-- INSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\\n-- SELECT\\n--   date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)                                AS statDate,\\n--   coalesce(d.tenantId, std.tenantId)                                 AS tenantId,\\n--   coalesce(d.shopId, std.shopId)                                     AS shopId,\\n--   coalesce(d.customerId, std.customerId)                             AS customerId,\\n--   if(coalesce(d.inter_days_1d,0) = 1, 1, std.inter_days_std + 1)     AS inter_days_std,\\n--   coalesce(d.pay_quantity_1d, 0) + coalesce(std.pay_quantity_std, 0) AS pay_quantity_std,\\n--   coalesce(d.pay_amount_1d, 0) + coalesce(std.pay_amount_std, 0)     AS pay_amount_std,\\n--   coalesce(d.tot_days_1d, 0) + coalesce(std.tot_days_std, 0)         AS tot_days_std\\n-- FROM (\\n--   SELECT \\n--   tenantId,\\n--   shopId,\\n--   customerId,\\n--   inter_days_1d,\\n--   pay_quantity_1d,\\n--   pay_amount_1d,\\n--   tot_days_1d\\n--   FROM \\n--   dws_alg_trd_pay_cust_1d WHERE ds = '${bdp.system.bizdate}') d\\n-- FULL OUTER JOIN (\\n--   SELECT \\n--   tenantId,\\n--   shopId,\\n--   customerId,\\n--   inter_days_std,\\n--   pay_quantity_std,\\n--   pay_amount_std,\\n--   tot_days_std \\n--   FROM dws_alg_trd_pay_cust_std WHERE ds = '${key_2d}') std\\n-- ON d.tenantId = std.tenantId AND d.customerId = std.customerId;\\n\\n\\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(\\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\\n  tenantId,\\n  min(shopId)                                             AS shopId,\\n  customerId,\\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\\n           max(max_payment_time))                         AS inter_days_std,\\n  sum(pay_quantity_1d)                                    AS pay_quantity_std,\\n  sum(pay_amount_1d)                                      AS pay_amount_std,\\n  sum(tot_days_1d)                                        AS tot_days_std\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE ds <= '${bdp.system.bizdate}'\\nGROUP BY tenantId, customerId;\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":0,\\\"min\\\":\\\"0\\\",\\\"hour\\\":\\\"4\\\",\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":1,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327468000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":66,\"column\":1}},\"x\":680,\"y\":80,\"value\":null,\"id\":\"1060\"}},{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1057,\"gmtCreate\":1537327573000,\"gmtModified\":1537327573000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_label\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_cust_label(\\nstatDate                STRING      COMMENT '统计日期'\\n,tenantId               STRING      COMMENT '租户ID'\\n,shopId                 STRING      COMMENT '门店ID'\\n,customerId             STRING      COMMENT '顾客ID'\\n,label                  BIGINT      COMMENT '顾客未来七天内是否消费：1-是，0-否 (距离今日不足七天算最近区间)'\\n) COMMENT '当日顾客未来七天内是否消费标记'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\n\\nset spark.sql.shuffle.partitions=1;\\n\\n-------- 前一天 ----------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${bdp.system.bizdate}' AND '${key_f5d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前两天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_2d}')\\nSELECT\\n  date_add(concat(substr('${key_2d}', 0, 4), '-', substr('${key_2d}', 5, 2), '-', substr('${key_2d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_2d}' AND '${key_f4d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前三天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_3d}')\\nSELECT\\n  date_add(concat(substr('${key_3d}', 0, 4), '-', substr('${key_3d}', 5, 2), '-', substr('${key_3d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_3d}' AND '${key_f3d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n-------- 前四天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_4d}')\\nSELECT\\n  date_add(concat(substr('${key_4d}', 0, 4), '-', substr('${key_4d}', 5, 2), '-', substr('${key_4d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_4d}' AND '${key_f2d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前五天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_5d}')\\nSELECT\\n  date_add(concat(substr('${key_5d}', 0, 4), '-', substr('${key_5d}', 5, 2), '-', substr('${key_5d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_5d}' AND '${key_f1d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前六天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_6d}')\\nSELECT\\n  date_add(concat(substr('${key_6d}', 0, 4), '-', substr('${key_6d}', 5, 2), '-', substr('${key_6d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_6d}' AND substr('${bdp.system.cyctime}',0,8)) AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前七天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_7d}')\\nSELECT\\n  date_add(concat(substr('${key_7d}', 0, 4), '-', substr('${key_7d}', 5, 2), '-', substr('${key_7d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":false, \\\"min\\\":0,\\\"hour\\\":0,\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":1,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327573000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0},{\"paramName\":\"key_f5d\",\"paramCommand\":\"$[yyyyMMdd+5]\",\"type\":1},{\"paramName\":\"key_2d\",\"paramCommand\":\"$[yyyyMMdd-2]\",\"type\":1},{\"paramName\":\"key_f4d\",\"paramCommand\":\"$[yyyyMMdd+4]\",\"type\":1},{\"paramName\":\"key_3d\",\"paramCommand\":\"$[yyyyMMdd-3]\",\"type\":1},{\"paramName\":\"key_f3d\",\"paramCommand\":\"$[yyyyMMdd+3]\",\"type\":1},{\"paramName\":\"key_4d\",\"paramCommand\":\"$[yyyyMMdd-4]\",\"type\":1},{\"paramName\":\"key_f2d\",\"paramCommand\":\"$[yyyyMMdd+2]\",\"type\":1},{\"paramName\":\"key_5d\",\"paramCommand\":\"$[yyyyMMdd-5]\",\"type\":1},{\"paramName\":\"key_f1d\",\"paramCommand\":\"$[yyyyMMdd+1]\",\"type\":1},{\"paramName\":\"key_6d\",\"paramCommand\":\"$[yyyyMMdd-6]\",\"type\":1},{\"paramName\":\"bdp.system.cyctime\",\"paramCommand\":\"yyyyMMddHHmmss\",\"type\":0},{\"paramName\":\"key_7d\",\"paramCommand\":\"$[yyyyMMdd-7]\",\"type\":1}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":144,\"column\":1}},\"x\":850,\"y\":80,\"value\":null,\"id\":\"1062\"},{\"vertex\":false,\"edge\":true,\"x\":0,\"y\":0,\"value\":\"\",\"id\":\"1063\",\"source\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1051,\"parentId\":1193,\"name\":\"job_dws_alg_1d\",\"level\":null,\"type\":\"file\",\"taskType\":0,\"resourceType\":null,\"catalogueType\":\"TaskDevelop\",\"createUser\":\"yizhou@dtstack.com\",\"orderVal\":null,\"children\":null,\"readWriteLockVO\":{\"id\":1166,\"gmtCreate\":null,\"gmtModified\":1537327018992,\"isDeleted\":0,\"lockName\":\"1051_77_BATCH_TASK\",\"modifyUserId\":90,\"version\":1,\"projectId\":77,\"relationId\":1051,\"type\":\"BATCH_TASK\",\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"version\":0,\"operateModel\":1,\"pythonVersion\":0,\"learningType\":0,\"scriptType\":null,\"isSubTask\":0,\"scheduleStatus\":1,\"submitStatus\":0,\"catalogues\":null,\"tasks\":null,\"dependencyTasks\":null},\"x\":425,\"y\":0,\"value\":null,\"id\":1051},\"target\":{\"vertex\":true,\"edge\":false,\"data\":{\"id\":1057,\"gmtCreate\":1537327573000,\"gmtModified\":1537327573000,\"isDeleted\":0,\"tenantId\":129,\"projectId\":77,\"name\":\"job_dws_alg_label\",\"taskType\":0,\"computeType\":1,\"engineType\":1,\"sqlText\":\"CREATE TABLE if NOT EXISTS dws_alg_cust_label(\\nstatDate                STRING      COMMENT '统计日期'\\n,tenantId               STRING      COMMENT '租户ID'\\n,shopId                 STRING      COMMENT '门店ID'\\n,customerId             STRING      COMMENT '顾客ID'\\n,label                  BIGINT      COMMENT '顾客未来七天内是否消费：1-是，0-否 (距离今日不足七天算最近区间)'\\n) COMMENT '当日顾客未来七天内是否消费标记'\\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\\n\\n\\nset spark.sql.shuffle.partitions=1;\\n\\n-------- 前一天 ----------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${bdp.system.bizdate}')\\nSELECT\\n  date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${bdp.system.bizdate}' AND '${key_f5d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前两天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_2d}')\\nSELECT\\n  date_add(concat(substr('${key_2d}', 0, 4), '-', substr('${key_2d}', 5, 2), '-', substr('${key_2d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_2d}' AND '${key_f4d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前三天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_3d}')\\nSELECT\\n  date_add(concat(substr('${key_3d}', 0, 4), '-', substr('${key_3d}', 5, 2), '-', substr('${key_3d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_3d}' AND '${key_f3d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n-------- 前四天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_4d}')\\nSELECT\\n  date_add(concat(substr('${key_4d}', 0, 4), '-', substr('${key_4d}', 5, 2), '-', substr('${key_4d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_4d}' AND '${key_f2d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前五天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_5d}')\\nSELECT\\n  date_add(concat(substr('${key_5d}', 0, 4), '-', substr('${key_5d}', 5, 2), '-', substr('${key_5d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_5d}' AND '${key_f1d}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前六天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_6d}')\\nSELECT\\n  date_add(concat(substr('${key_6d}', 0, 4), '-', substr('${key_6d}', 5, 2), '-', substr('${key_6d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_6d}' AND substr('${bdp.system.cyctime}',0,8)) AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\\n-------- 前七天 ---------\\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_7d}')\\nSELECT\\n  date_add(concat(substr('${key_7d}', 0, 4), '-', substr('${key_7d}', 5, 2), '-', substr('${key_7d}', 7, 2)),1)        AS statDate,\\n  d.tenantId,\\n  d.shopId,\\n  d.customerId,\\n  if(d.cnt > 0, 1, 0)            AS lable\\nFROM(\\nSELECT\\n  tenantId,\\n  min(shopId)                    AS shopId,\\n  customerId,\\n  count(1)                       AS cnt\\nFROM dws_alg_trd_pay_cust_1d\\nWHERE (ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}') AND isnotnull(customerId) \\nGROUP BY tenantId, customerId) d;\\n\\n\",\"taskParams\":\"##Number of CPU cores need driver program is running\\n##driver.cores=1\\n\\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\\n##driver.maxResultSize=1g\\n\\n##Driver number memory used by a process\\n##driver.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##executor.memory=512m\\n\\n\\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\\n##logConf=spark.logConf\",\"scheduleConf\":\"{\\\"selfReliance\\\":false, \\\"min\\\":0,\\\"hour\\\":0,\\\"periodType\\\":\\\"2\\\",\\\"beginDate\\\":\\\"2001-01-01\\\",\\\"endDate\\\":\\\"2121-01-01\\\"}\",\"periodType\":null,\"scheduleStatus\":1,\"submitStatus\":0,\"modifyUserId\":90,\"createUserId\":90,\"ownerUserId\":90,\"version\":1,\"nodePid\":1193,\"taskDesc\":\"\",\"mainClass\":\"\",\"exeArgs\":\"\",\"flowId\":1050,\"createUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"modifyUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"ownerUser\":{\"id\":90,\"gmtCreate\":1535092930000,\"gmtModified\":1535092930000,\"isDeleted\":0,\"userName\":\"yizhou@dtstack.com\",\"phoneNumber\":null,\"dtuicUserId\":6999,\"email\":\"\",\"status\":0,\"defaultProjectId\":null},\"taskPeriodId\":2,\"taskPeriodType\":\"天任务\",\"nodePName\":\"工作流\",\"readWriteLockVO\":{\"id\":0,\"gmtCreate\":null,\"gmtModified\":1537327573000,\"isDeleted\":0,\"lockName\":null,\"modifyUserId\":null,\"version\":1,\"projectId\":null,\"relationId\":null,\"type\":null,\"lastKeepLockUserName\":\"yizhou@dtstack.com\",\"result\":0,\"getLock\":true},\"userId\":90,\"lockVersion\":null,\"taskVariables\":[{\"paramName\":\"bdp.system.bizdate\",\"paramCommand\":\"yyyyMMdd-1\",\"type\":0},{\"paramName\":\"key_f5d\",\"paramCommand\":\"$[yyyyMMdd+5]\",\"type\":1},{\"paramName\":\"key_2d\",\"paramCommand\":\"$[yyyyMMdd-2]\",\"type\":1},{\"paramName\":\"key_f4d\",\"paramCommand\":\"$[yyyyMMdd+4]\",\"type\":1},{\"paramName\":\"key_3d\",\"paramCommand\":\"$[yyyyMMdd-3]\",\"type\":1},{\"paramName\":\"key_f3d\",\"paramCommand\":\"$[yyyyMMdd+3]\",\"type\":1},{\"paramName\":\"key_4d\",\"paramCommand\":\"$[yyyyMMdd-4]\",\"type\":1},{\"paramName\":\"key_f2d\",\"paramCommand\":\"$[yyyyMMdd+2]\",\"type\":1},{\"paramName\":\"key_5d\",\"paramCommand\":\"$[yyyyMMdd-5]\",\"type\":1},{\"paramName\":\"key_f1d\",\"paramCommand\":\"$[yyyyMMdd+1]\",\"type\":1},{\"paramName\":\"key_6d\",\"paramCommand\":\"$[yyyyMMdd-6]\",\"type\":1},{\"paramName\":\"bdp.system.cyctime\",\"paramCommand\":\"yyyyMMddHHmmss\",\"type\":0},{\"paramName\":\"key_7d\",\"paramCommand\":\"$[yyyyMMdd-7]\",\"type\":1}],\"forceUpdate\":false,\"subNodes\":null,\"createModel\":0,\"operateModel\":0,\"pythonVersion\":0,\"learningType\":0,\"input\":null,\"output\":null,\"options\":null,\"flowName\":\"flow_job\",\"taskVOS\":null,\"subTaskVOS\":null,\"resourceList\":[],\"taskVersions\":[],\"cron\":\"0 0 0 * * ?\",\"merged\":false,\"cursorPosition\":{\"lineNumber\":144,\"column\":1}},\"x\":850,\"y\":80,\"value\":null,\"id\":\"1062\"}}]",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 16,
                    "nodePid": 1193,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 0 4 * * ?"
                },
                "id": 278708,
                "gmtCreate": 1547647312000,
                "gmtModified": 1547647312000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "58a98fff",
                "jobKey": "cronTrigger_1050_20190117040000",
                "jobName": "cronJob_dws_alg_flow_job_20190117040000",
                "status": 18,
                "taskId": 1050,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:00:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [],
                "batchEngineJob": {
                    "id": 297206,
                    "gmtCreate": 1547647312000,
                    "gmtModified": 1547668804000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "58a98fff",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": {
                    "batchTask": {
                        "id": 1051,
                        "gmtCreate": 1537327019000,
                        "gmtModified": 1537327772000,
                        "isDeleted": 0,
                        "tenantId": 129,
                        "projectId": 77,
                        "name": "job_dws_alg_1d",
                        "taskType": 0,
                        "computeType": 1,
                        "engineType": 1,
                        "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_1d(\nstatDate            STRING      COMMENT '统计日期'\n,tenantId           STRING      COMMENT '租户ID'\n,shopId             STRING      COMMENT '门店ID'\n,customerId         STRING      COMMENT '顾客ID'\n,max_payment_time   STRING      COMMENT '最近一天最晚支付时间'\n,inter_days_1d      BIGINT      COMMENT '最近一天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_1d    BIGINT      COMMENT '最近一天顾客支付行为次数'\n,pay_amount_1d      DOUBLE      COMMENT '最近一天顾客支付总金额'\n,tot_days_1d        BIGINT      COMMENT '最近一天顾客出现支付行为的天数之和'\n) COMMENT '最近1天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\nset hive.exec.dynamic.partition.mode=nonstrict;\n\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_1d PARTITION(ds)\nSELECT\n  date_add(concat(substr(t.par, 0, 4), '-', substr(t.par, 5, 2), '-', substr(t.par, 7, 2)),1)        AS statDate,\n  t.tenantId              AS tenantId,\n  t.shopId                AS shopId,\n  t.customerId            AS customerId,\n  t.paymentTime           AS max_payment_time,\n  datediff(date_add(concat(substr(t.par, 0, 4), '-', substr(t.par, 5, 2), '-', substr(t.par, 7, 2)),1),\n           t.paymentTime) AS inter_days_1d,\n  t.pay_quantity_1d       AS pay_quantity_1d,\n  t.pay_amount_1d         AS pay_amount_1d,\n  t.tot_days_1d           AS tot_days_1d,\n  t.par                   AS ds\nFROM (\n       SELECT\n         tenantId,\n         min(shopId)                                                              AS shopId,\n         customerId,\n         max(paymentTime)                                                         AS paymentTime,\n         COUNT(1)                                                                 AS pay_quantity_1d,\n         sum(custActualPay)                                                       AS pay_amount_1d,\n         size(collect_set(substr(regexp_replace(paymentTime, '-', ''), 1, 8)))    AS tot_days_1d,\n         date_format(paymentTime, 'yyyyMMdd')                                     AS par\n       FROM dwd_ord_trd_d\n       WHERE ds = '${bdp.system.bizdate}' AND tradePayStatus = 3 AND isnotnull(customerId)\n       GROUP BY tenantId, customerId, date_format(paymentTime, 'yyyyMMdd')) t;\n",
                        "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                        "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                        "periodType": null,
                        "scheduleStatus": 1,
                        "submitStatus": 1,
                        "modifyUserId": 90,
                        "createUserId": 90,
                        "ownerUserId": 90,
                        "version": 3,
                        "nodePid": 1193,
                        "taskDesc": "",
                        "mainClass": "",
                        "exeArgs": "",
                        "flowId": 1050,
                        "createUser": {
                            "id": 90,
                            "gmtCreate": 1535092930000,
                            "gmtModified": 1535092930000,
                            "isDeleted": 0,
                            "userName": "yizhou@dtstack.com",
                            "phoneNumber": null,
                            "dtuicUserId": 6999,
                            "email": "",
                            "status": 0,
                            "defaultProjectId": null
                        },
                        "modifyUser": null,
                        "ownerUser": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "nodePName": null,
                        "readWriteLockVO": null,
                        "userId": null,
                        "lockVersion": null,
                        "taskVariables": null,
                        "forceUpdate": false,
                        "subNodes": null,
                        "relatedTasks": null,
                        "createModel": 0,
                        "operateModel": 0,
                        "pythonVersion": 0,
                        "learningType": 0,
                        "input": null,
                        "output": null,
                        "options": null,
                        "flowName": null,
                        "syncModel": 0,
                        "increColumn": null,
                        "taskVOS": null,
                        "subTaskVOS": null,
                        "resourceList": null,
                        "refResourceList": null,
                        "taskVersions": null,
                        "cron": "0 0 4 * * ?"
                    },
                    "id": 278709,
                    "gmtCreate": 1547647312000,
                    "gmtModified": 1547647312000,
                    "isDeleted": 0,
                    "tenantId": null,
                    "projectId": null,
                    "jobId": "1cb14eb7",
                    "jobKey": "cronTrigger_1051_20190117040000",
                    "jobName": "cronJob_job_dws_alg_1d_20190117040000",
                    "status": 18,
                    "taskId": 1051,
                    "createUserId": 90,
                    "type": 0,
                    "businessDate": "2019-01-16 ",
                    "cycTime": "2019-01-17 04:00:00",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": null,
                    "execStartDate": null,
                    "execEndDate": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "jobVOS": [
                        {
                            "batchTask": {
                                "id": 1052,
                                "gmtCreate": 1537327160000,
                                "gmtModified": 1537327772000,
                                "isDeleted": 0,
                                "tenantId": 129,
                                "projectId": 77,
                                "name": "job_dws_alg_3d",
                                "taskType": 0,
                                "computeType": 1,
                                "engineType": 1,
                                "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_3d(\nstatDate            STRING      COMMENT '统计日期'\n,tenantId           STRING      COMMENT '租户ID'\n,shopId             STRING      COMMENT '门店ID'\n,customerId         STRING      COMMENT '顾客ID'\n,inter_days_3d      BIGINT      COMMENT '最近3天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_3d    BIGINT      COMMENT '最近3天顾客支付行为次数'\n,pay_amount_3d      DOUBLE      COMMENT '最近3天顾客支付总金额'\n,tot_days_3d        BIGINT      COMMENT '最近3天顾客出现支付行为的天数之和'\n) COMMENT '最近3天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_3d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_3d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_3d,\n  sum(pay_amount_1d)                                      AS pay_amount_3d,\n  sum(tot_days_1d)                                        AS tot_days_3d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_3d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;\n",
                                "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                                "periodType": null,
                                "scheduleStatus": 1,
                                "submitStatus": 1,
                                "modifyUserId": 90,
                                "createUserId": 90,
                                "ownerUserId": 90,
                                "version": 3,
                                "nodePid": 1193,
                                "taskDesc": "",
                                "mainClass": "",
                                "exeArgs": "",
                                "flowId": 1050,
                                "createUser": {
                                    "id": 90,
                                    "gmtCreate": 1535092930000,
                                    "gmtModified": 1535092930000,
                                    "isDeleted": 0,
                                    "userName": "yizhou@dtstack.com",
                                    "phoneNumber": null,
                                    "dtuicUserId": 6999,
                                    "email": "",
                                    "status": 0,
                                    "defaultProjectId": null
                                },
                                "modifyUser": null,
                                "ownerUser": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "nodePName": null,
                                "readWriteLockVO": null,
                                "userId": null,
                                "lockVersion": null,
                                "taskVariables": null,
                                "forceUpdate": false,
                                "subNodes": null,
                                "relatedTasks": null,
                                "createModel": 0,
                                "operateModel": 0,
                                "pythonVersion": 0,
                                "learningType": 0,
                                "input": null,
                                "output": null,
                                "options": null,
                                "flowName": null,
                                "syncModel": 0,
                                "increColumn": null,
                                "taskVOS": null,
                                "subTaskVOS": null,
                                "resourceList": null,
                                "refResourceList": null,
                                "taskVersions": null,
                                "cron": "0 0 4 * * ?"
                            },
                            "id": 278710,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547647312000,
                            "isDeleted": 0,
                            "tenantId": null,
                            "projectId": null,
                            "jobId": "d5187e4a",
                            "jobKey": "cronTrigger_1052_20190117040000",
                            "jobName": "cronJob_job_dws_alg_3d_20190117040000",
                            "status": 18,
                            "taskId": 1052,
                            "createUserId": 90,
                            "type": 0,
                            "businessDate": "2019-01-16 ",
                            "cycTime": "2019-01-17 04:00:00",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": null,
                            "execStartDate": null,
                            "execEndDate": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "jobVOS": null,
                            "batchEngineJob": {
                                "id": 297208,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547668804000,
                                "isDeleted": 0,
                                "status": 18,
                                "jobId": "d5187e4a",
                                "engineJobId": null,
                                "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                                "engineLog": "",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": 0
                            },
                            "subNodes": null,
                            "flowJobId": "58a98fff",
                            "relatedJobs": null,
                            "isDirty": 0
                        },
                        {
                            "batchTask": {
                                "id": 1053,
                                "gmtCreate": 1537327261000,
                                "gmtModified": 1537327772000,
                                "isDeleted": 0,
                                "tenantId": 129,
                                "projectId": 77,
                                "name": "job_dws_alg_7d",
                                "taskType": 0,
                                "computeType": 1,
                                "engineType": 1,
                                "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_7d(\nstatDate            STRING      COMMENT '统计日期'\n,tenantId           STRING      COMMENT '租户ID'\n,shopId             STRING      COMMENT '门店ID'\n,customerId         STRING      COMMENT '顾客ID'\n,inter_days_7d      BIGINT      COMMENT '最近7天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_7d    BIGINT      COMMENT '最近7天顾客支付行为次数'\n,pay_amount_7d      DOUBLE      COMMENT '最近7天顾客支付总金额'\n,tot_days_7d        BIGINT      COMMENT '最近7天顾客出现支付行为的天数之和'\n) COMMENT '最近7天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_7d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_7d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_7d,\n  sum(pay_amount_1d)                                      AS pay_amount_7d,\n  sum(tot_days_1d)                                        AS tot_days_7d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;\n",
                                "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                                "periodType": null,
                                "scheduleStatus": 1,
                                "submitStatus": 1,
                                "modifyUserId": 90,
                                "createUserId": 90,
                                "ownerUserId": 90,
                                "version": 4,
                                "nodePid": 1193,
                                "taskDesc": "",
                                "mainClass": "",
                                "exeArgs": "",
                                "flowId": 1050,
                                "createUser": {
                                    "id": 90,
                                    "gmtCreate": 1535092930000,
                                    "gmtModified": 1535092930000,
                                    "isDeleted": 0,
                                    "userName": "yizhou@dtstack.com",
                                    "phoneNumber": null,
                                    "dtuicUserId": 6999,
                                    "email": "",
                                    "status": 0,
                                    "defaultProjectId": null
                                },
                                "modifyUser": null,
                                "ownerUser": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "nodePName": null,
                                "readWriteLockVO": null,
                                "userId": null,
                                "lockVersion": null,
                                "taskVariables": null,
                                "forceUpdate": false,
                                "subNodes": null,
                                "relatedTasks": null,
                                "createModel": 0,
                                "operateModel": 0,
                                "pythonVersion": 0,
                                "learningType": 0,
                                "input": null,
                                "output": null,
                                "options": null,
                                "flowName": null,
                                "syncModel": 0,
                                "increColumn": null,
                                "taskVOS": null,
                                "subTaskVOS": null,
                                "resourceList": null,
                                "refResourceList": null,
                                "taskVersions": null,
                                "cron": "0 0 4 * * ?"
                            },
                            "id": 278711,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547647312000,
                            "isDeleted": 0,
                            "tenantId": null,
                            "projectId": null,
                            "jobId": "d715e37a",
                            "jobKey": "cronTrigger_1053_20190117040000",
                            "jobName": "cronJob_job_dws_alg_7d_20190117040000",
                            "status": 18,
                            "taskId": 1053,
                            "createUserId": 90,
                            "type": 0,
                            "businessDate": "2019-01-16 ",
                            "cycTime": "2019-01-17 04:00:00",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": null,
                            "execStartDate": null,
                            "execEndDate": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "jobVOS": null,
                            "batchEngineJob": {
                                "id": 297209,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547668804000,
                                "isDeleted": 0,
                                "status": 18,
                                "jobId": "d715e37a",
                                "engineJobId": null,
                                "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                                "engineLog": "",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": 0
                            },
                            "subNodes": null,
                            "flowJobId": "58a98fff",
                            "relatedJobs": null,
                            "isDirty": 0
                        },
                        {
                            "batchTask": {
                                "id": 1054,
                                "gmtCreate": 1537327327000,
                                "gmtModified": 1537327772000,
                                "isDeleted": 0,
                                "tenantId": 129,
                                "projectId": 77,
                                "name": "job_dws_alg_15d",
                                "taskType": 0,
                                "computeType": 1,
                                "engineType": 1,
                                "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_15d(\nstatDate             STRING      COMMENT '统计日期'\n,tenantId            STRING      COMMENT '租户ID'\n,shopId              STRING      COMMENT '门店ID'\n,customerId          STRING      COMMENT '顾客ID'\n,inter_days_15d      BIGINT      COMMENT '最近15天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_15d    BIGINT      COMMENT '最近15天顾客支付行为次数'\n,pay_amount_15d      DOUBLE      COMMENT '最近15天顾客支付总金额'\n,tot_days_15d        BIGINT      COMMENT '最近15天顾客出现支付行为的天数之和'\n) COMMENT '最近15天算法信息指标'\nPARTITIONED BY (ds STRING );\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_15d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_15d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_15d,\n  sum(pay_amount_1d)                                      AS pay_amount_15d,\n  sum(tot_days_1d)                                        AS tot_days_15d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_15d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;",
                                "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                                "periodType": null,
                                "scheduleStatus": 1,
                                "submitStatus": 1,
                                "modifyUserId": 90,
                                "createUserId": 90,
                                "ownerUserId": 90,
                                "version": 2,
                                "nodePid": 1193,
                                "taskDesc": "",
                                "mainClass": "",
                                "exeArgs": "",
                                "flowId": 1050,
                                "createUser": {
                                    "id": 90,
                                    "gmtCreate": 1535092930000,
                                    "gmtModified": 1535092930000,
                                    "isDeleted": 0,
                                    "userName": "yizhou@dtstack.com",
                                    "phoneNumber": null,
                                    "dtuicUserId": 6999,
                                    "email": "",
                                    "status": 0,
                                    "defaultProjectId": null
                                },
                                "modifyUser": null,
                                "ownerUser": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "nodePName": null,
                                "readWriteLockVO": null,
                                "userId": null,
                                "lockVersion": null,
                                "taskVariables": null,
                                "forceUpdate": false,
                                "subNodes": null,
                                "relatedTasks": null,
                                "createModel": 0,
                                "operateModel": 0,
                                "pythonVersion": 0,
                                "learningType": 0,
                                "input": null,
                                "output": null,
                                "options": null,
                                "flowName": null,
                                "syncModel": 0,
                                "increColumn": null,
                                "taskVOS": null,
                                "subTaskVOS": null,
                                "resourceList": null,
                                "refResourceList": null,
                                "taskVersions": null,
                                "cron": "0 0 4 * * ?"
                            },
                            "id": 278712,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547647312000,
                            "isDeleted": 0,
                            "tenantId": null,
                            "projectId": null,
                            "jobId": "2a0926c2",
                            "jobKey": "cronTrigger_1054_20190117040000",
                            "jobName": "cronJob_job_dws_alg_15d_20190117040000",
                            "status": 18,
                            "taskId": 1054,
                            "createUserId": 90,
                            "type": 0,
                            "businessDate": "2019-01-16 ",
                            "cycTime": "2019-01-17 04:00:00",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": null,
                            "execStartDate": null,
                            "execEndDate": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "jobVOS": null,
                            "batchEngineJob": {
                                "id": 297210,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547668804000,
                                "isDeleted": 0,
                                "status": 18,
                                "jobId": "2a0926c2",
                                "engineJobId": null,
                                "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                                "engineLog": "",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": 0
                            },
                            "subNodes": null,
                            "flowJobId": "58a98fff",
                            "relatedJobs": null,
                            "isDirty": 0
                        },
                        {
                            "batchTask": {
                                "id": 1055,
                                "gmtCreate": 1537327392000,
                                "gmtModified": 1537327772000,
                                "isDeleted": 0,
                                "tenantId": 129,
                                "projectId": 77,
                                "name": "job_dws_alg_30d",
                                "taskType": 0,
                                "computeType": 1,
                                "engineType": 1,
                                "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_30d(\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,inter_days_30d         BIGINT      COMMENT '最近30天顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_30d       BIGINT      COMMENT '最近30天顾客支付行为次数'\n,pay_amount_30d         DOUBLE      COMMENT '最近30天顾客支付总金额'\n,tot_days_30d           BIGINT      COMMENT '最近30天顾客出现支付行为的天数之和'\n) COMMENT '最近30天算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_30d PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_30d,\n  sum(pay_quantity_1d)                                    AS pay_quantity_30d,\n  sum(pay_amount_1d)                                      AS pay_amount_30d,\n  sum(tot_days_1d)                                        AS tot_days_30d\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds BETWEEN '${key_30d}' AND '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;",
                                "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                                "periodType": null,
                                "scheduleStatus": 1,
                                "submitStatus": 1,
                                "modifyUserId": 90,
                                "createUserId": 90,
                                "ownerUserId": 90,
                                "version": 2,
                                "nodePid": 1193,
                                "taskDesc": "",
                                "mainClass": "",
                                "exeArgs": "",
                                "flowId": 1050,
                                "createUser": {
                                    "id": 90,
                                    "gmtCreate": 1535092930000,
                                    "gmtModified": 1535092930000,
                                    "isDeleted": 0,
                                    "userName": "yizhou@dtstack.com",
                                    "phoneNumber": null,
                                    "dtuicUserId": 6999,
                                    "email": "",
                                    "status": 0,
                                    "defaultProjectId": null
                                },
                                "modifyUser": null,
                                "ownerUser": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "nodePName": null,
                                "readWriteLockVO": null,
                                "userId": null,
                                "lockVersion": null,
                                "taskVariables": null,
                                "forceUpdate": false,
                                "subNodes": null,
                                "relatedTasks": null,
                                "createModel": 0,
                                "operateModel": 0,
                                "pythonVersion": 0,
                                "learningType": 0,
                                "input": null,
                                "output": null,
                                "options": null,
                                "flowName": null,
                                "syncModel": 0,
                                "increColumn": null,
                                "taskVOS": null,
                                "subTaskVOS": null,
                                "resourceList": null,
                                "refResourceList": null,
                                "taskVersions": null,
                                "cron": "0 0 4 * * ?"
                            },
                            "id": 278713,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547647312000,
                            "isDeleted": 0,
                            "tenantId": null,
                            "projectId": null,
                            "jobId": "e013cfee",
                            "jobKey": "cronTrigger_1055_20190117040000",
                            "jobName": "cronJob_job_dws_alg_30d_20190117040000",
                            "status": 18,
                            "taskId": 1055,
                            "createUserId": 90,
                            "type": 0,
                            "businessDate": "2019-01-16 ",
                            "cycTime": "2019-01-17 04:00:00",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": null,
                            "execStartDate": null,
                            "execEndDate": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "jobVOS": null,
                            "batchEngineJob": {
                                "id": 297211,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547668804000,
                                "isDeleted": 0,
                                "status": 18,
                                "jobId": "e013cfee",
                                "engineJobId": null,
                                "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                                "engineLog": "",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": 0
                            },
                            "subNodes": null,
                            "flowJobId": "58a98fff",
                            "relatedJobs": null,
                            "isDirty": 0
                        },
                        {
                            "batchTask": {
                                "id": 1056,
                                "gmtCreate": 1537327469000,
                                "gmtModified": 1537327773000,
                                "isDeleted": 0,
                                "tenantId": 129,
                                "projectId": 77,
                                "name": "job_dws_alg_std",
                                "taskType": 0,
                                "computeType": 1,
                                "engineType": 1,
                                "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_trd_pay_cust_std(\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,inter_days_std         BIGINT      COMMENT '历史至今顾客最后一次发生支付行为距离当前日期多少天'\n,pay_quantity_std       BIGINT      COMMENT '历史至今顾客支付行为次数'\n,pay_amount_std         DOUBLE      COMMENT '历史至今顾客支付总金额'\n,tot_days_std           BIGINT      COMMENT '历史至今顾客出现支付行为的天数之和'\n) COMMENT '历史至今算法信息指标'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\n-- INSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\n-- SELECT\n--   date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)                                AS statDate,\n--   coalesce(d.tenantId, std.tenantId)                                 AS tenantId,\n--   coalesce(d.shopId, std.shopId)                                     AS shopId,\n--   coalesce(d.customerId, std.customerId)                             AS customerId,\n--   if(coalesce(d.inter_days_1d,0) = 1, 1, std.inter_days_std + 1)     AS inter_days_std,\n--   coalesce(d.pay_quantity_1d, 0) + coalesce(std.pay_quantity_std, 0) AS pay_quantity_std,\n--   coalesce(d.pay_amount_1d, 0) + coalesce(std.pay_amount_std, 0)     AS pay_amount_std,\n--   coalesce(d.tot_days_1d, 0) + coalesce(std.tot_days_std, 0)         AS tot_days_std\n-- FROM (\n--   SELECT \n--   tenantId,\n--   shopId,\n--   customerId,\n--   inter_days_1d,\n--   pay_quantity_1d,\n--   pay_amount_1d,\n--   tot_days_1d\n--   FROM \n--   dws_alg_trd_pay_cust_1d WHERE ds = '${bdp.system.bizdate}') d\n-- FULL OUTER JOIN (\n--   SELECT \n--   tenantId,\n--   shopId,\n--   customerId,\n--   inter_days_std,\n--   pay_quantity_std,\n--   pay_amount_std,\n--   tot_days_std \n--   FROM dws_alg_trd_pay_cust_std WHERE ds = '${key_2d}') std\n-- ON d.tenantId = std.tenantId AND d.customerId = std.customerId;\n\n\nINSERT OVERWRITE TABLE dws_alg_trd_pay_cust_std PARTITION(ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(\n               substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n               substr('${bdp.system.bizdate}', 7, 2)), 1) AS statDate,\n  tenantId,\n  min(shopId)                                             AS shopId,\n  customerId,\n  datediff(date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-',\n                           substr('${bdp.system.bizdate}', 7, 2)), 1),\n           max(max_payment_time))                         AS inter_days_std,\n  sum(pay_quantity_1d)                                    AS pay_quantity_std,\n  sum(pay_amount_1d)                                      AS pay_amount_std,\n  sum(tot_days_1d)                                        AS tot_days_std\nFROM dws_alg_trd_pay_cust_1d\nWHERE ds <= '${bdp.system.bizdate}'\nGROUP BY tenantId, customerId;\n",
                                "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                                "periodType": null,
                                "scheduleStatus": 1,
                                "submitStatus": 1,
                                "modifyUserId": 90,
                                "createUserId": 90,
                                "ownerUserId": 90,
                                "version": 2,
                                "nodePid": 1193,
                                "taskDesc": "",
                                "mainClass": "",
                                "exeArgs": "",
                                "flowId": 1050,
                                "createUser": {
                                    "id": 90,
                                    "gmtCreate": 1535092930000,
                                    "gmtModified": 1535092930000,
                                    "isDeleted": 0,
                                    "userName": "yizhou@dtstack.com",
                                    "phoneNumber": null,
                                    "dtuicUserId": 6999,
                                    "email": "",
                                    "status": 0,
                                    "defaultProjectId": null
                                },
                                "modifyUser": null,
                                "ownerUser": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "nodePName": null,
                                "readWriteLockVO": null,
                                "userId": null,
                                "lockVersion": null,
                                "taskVariables": null,
                                "forceUpdate": false,
                                "subNodes": null,
                                "relatedTasks": null,
                                "createModel": 0,
                                "operateModel": 0,
                                "pythonVersion": 0,
                                "learningType": 0,
                                "input": null,
                                "output": null,
                                "options": null,
                                "flowName": null,
                                "syncModel": 0,
                                "increColumn": null,
                                "taskVOS": null,
                                "subTaskVOS": null,
                                "resourceList": null,
                                "refResourceList": null,
                                "taskVersions": null,
                                "cron": "0 0 4 * * ?"
                            },
                            "id": 278714,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547647312000,
                            "isDeleted": 0,
                            "tenantId": null,
                            "projectId": null,
                            "jobId": "4fcf4094",
                            "jobKey": "cronTrigger_1056_20190117040000",
                            "jobName": "cronJob_job_dws_alg_std_20190117040000",
                            "status": 18,
                            "taskId": 1056,
                            "createUserId": 90,
                            "type": 0,
                            "businessDate": "2019-01-16 ",
                            "cycTime": "2019-01-17 04:00:00",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": null,
                            "execStartDate": null,
                            "execEndDate": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "jobVOS": null,
                            "batchEngineJob": {
                                "id": 297212,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547668804000,
                                "isDeleted": 0,
                                "status": 18,
                                "jobId": "4fcf4094",
                                "engineJobId": null,
                                "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                                "engineLog": "",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": 0
                            },
                            "subNodes": null,
                            "flowJobId": "58a98fff",
                            "relatedJobs": null,
                            "isDirty": 0
                        },
                        {
                            "batchTask": {
                                "id": 1057,
                                "gmtCreate": 1537327573000,
                                "gmtModified": 1537327773000,
                                "isDeleted": 0,
                                "tenantId": 129,
                                "projectId": 77,
                                "name": "job_dws_alg_label",
                                "taskType": 0,
                                "computeType": 1,
                                "engineType": 1,
                                "sqlText": "CREATE TABLE if NOT EXISTS dws_alg_cust_label(\nstatDate                STRING      COMMENT '统计日期'\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,customerId             STRING      COMMENT '顾客ID'\n,label                  BIGINT      COMMENT '顾客未来七天内是否消费：1-是，0-否 (距离今日不足七天算最近区间)'\n) COMMENT '当日顾客未来七天内是否消费标记'\nPARTITIONED BY (ds STRING ) STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n-------- 前一天 ----------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  date_add(concat(substr('${bdp.system.bizdate}', 0, 4), '-', substr('${bdp.system.bizdate}', 5, 2), '-', substr('${bdp.system.bizdate}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${bdp.system.bizdate}' AND '${key_f5d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前两天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_2d}')\nSELECT\n  date_add(concat(substr('${key_2d}', 0, 4), '-', substr('${key_2d}', 5, 2), '-', substr('${key_2d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_2d}' AND '${key_f4d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前三天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_3d}')\nSELECT\n  date_add(concat(substr('${key_3d}', 0, 4), '-', substr('${key_3d}', 5, 2), '-', substr('${key_3d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_3d}' AND '${key_f3d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n-------- 前四天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_4d}')\nSELECT\n  date_add(concat(substr('${key_4d}', 0, 4), '-', substr('${key_4d}', 5, 2), '-', substr('${key_4d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_4d}' AND '${key_f2d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前五天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_5d}')\nSELECT\n  date_add(concat(substr('${key_5d}', 0, 4), '-', substr('${key_5d}', 5, 2), '-', substr('${key_5d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_5d}' AND '${key_f1d}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前六天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_6d}')\nSELECT\n  date_add(concat(substr('${key_6d}', 0, 4), '-', substr('${key_6d}', 5, 2), '-', substr('${key_6d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_6d}' AND substr('${bdp.system.cyctime}',0,8)) AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n\n-------- 前七天 ---------\nINSERT OVERWRITE TABLE dws_alg_cust_label PARTITION (ds = '${key_7d}')\nSELECT\n  date_add(concat(substr('${key_7d}', 0, 4), '-', substr('${key_7d}', 5, 2), '-', substr('${key_7d}', 7, 2)),1)        AS statDate,\n  d.tenantId,\n  d.shopId,\n  d.customerId,\n  if(d.cnt > 0, 1, 0)            AS lable\nFROM(\nSELECT\n  tenantId,\n  min(shopId)                    AS shopId,\n  customerId,\n  count(1)                       AS cnt\nFROM dws_alg_trd_pay_cust_1d\nWHERE (ds BETWEEN '${key_7d}' AND '${bdp.system.bizdate}') AND isnotnull(customerId) \nGROUP BY tenantId, customerId) d;\n\n",
                                "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                                "scheduleConf": "{\"beginDate\":\"2001-01-01\",\"min\":\"0\",\"periodType\":\"2\",\"hour\":\"4\",\"selfReliance\":0,\"endDate\":\"2121-01-01\"}",
                                "periodType": null,
                                "scheduleStatus": 1,
                                "submitStatus": 1,
                                "modifyUserId": 90,
                                "createUserId": 90,
                                "ownerUserId": 90,
                                "version": 2,
                                "nodePid": 1193,
                                "taskDesc": "",
                                "mainClass": "",
                                "exeArgs": "",
                                "flowId": 1050,
                                "createUser": {
                                    "id": 90,
                                    "gmtCreate": 1535092930000,
                                    "gmtModified": 1535092930000,
                                    "isDeleted": 0,
                                    "userName": "yizhou@dtstack.com",
                                    "phoneNumber": null,
                                    "dtuicUserId": 6999,
                                    "email": "",
                                    "status": 0,
                                    "defaultProjectId": null
                                },
                                "modifyUser": null,
                                "ownerUser": null,
                                "taskPeriodId": 2,
                                "taskPeriodType": "天任务",
                                "nodePName": null,
                                "readWriteLockVO": null,
                                "userId": null,
                                "lockVersion": null,
                                "taskVariables": null,
                                "forceUpdate": false,
                                "subNodes": null,
                                "relatedTasks": null,
                                "createModel": 0,
                                "operateModel": 0,
                                "pythonVersion": 0,
                                "learningType": 0,
                                "input": null,
                                "output": null,
                                "options": null,
                                "flowName": null,
                                "syncModel": 0,
                                "increColumn": null,
                                "taskVOS": null,
                                "subTaskVOS": null,
                                "resourceList": null,
                                "refResourceList": null,
                                "taskVersions": null,
                                "cron": "0 0 4 * * ?"
                            },
                            "id": 278715,
                            "gmtCreate": 1547647312000,
                            "gmtModified": 1547647312000,
                            "isDeleted": 0,
                            "tenantId": null,
                            "projectId": null,
                            "jobId": "2092f841",
                            "jobKey": "cronTrigger_1057_20190117040000",
                            "jobName": "cronJob_job_dws_alg_label_20190117040000",
                            "status": 18,
                            "taskId": 1057,
                            "createUserId": 90,
                            "type": 0,
                            "businessDate": "2019-01-16 ",
                            "cycTime": "2019-01-17 04:00:00",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": null,
                            "execStartDate": null,
                            "execEndDate": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "jobVOS": null,
                            "batchEngineJob": {
                                "id": 297213,
                                "gmtCreate": 1547647312000,
                                "gmtModified": 1547668804000,
                                "isDeleted": 0,
                                "status": 18,
                                "jobId": "2092f841",
                                "engineJobId": null,
                                "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                                "engineLog": "",
                                "execStartTime": null,
                                "execEndTime": null,
                                "execTime": 0
                            },
                            "subNodes": null,
                            "flowJobId": "58a98fff",
                            "relatedJobs": null,
                            "isDirty": 0
                        }
                    ],
                    "batchEngineJob": {
                        "id": 297207,
                        "gmtCreate": 1547647312000,
                        "gmtModified": 1547668804000,
                        "isDeleted": 0,
                        "status": 18,
                        "jobId": "1cb14eb7",
                        "engineJobId": null,
                        "logInfo": "{ \"msg_info\": \"依赖任务链路存在任务处于冻结状态\"}",
                        "engineLog": "",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": 0
                    },
                    "subNodes": null,
                    "flowJobId": "58a98fff",
                    "relatedJobs": null,
                    "isDirty": 0
                },
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 964,
                    "gmtCreate": 1536584321000,
                    "gmtModified": 1536721490000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_ads_nrs_mp_consume_freq",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_mp_consume_freq (\nid                      STRING      COMMENT '主键ID'\n,tenantId               STRING      COMMENT '租户ID'\n,freq                   BIGINT      COMMENT '消费次数'\n,days                   DOUBLE      COMMENT '达成该消费频次的平均天数'\n,gmt_created            STRING      COMMENT '创建时间'\n,gmt_modified           STRING      COMMENT '修改时间'\n) COMMENT '会员消费频次表'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\nset spark.sql.shuffle.partitions=1;\n\nINSERT OVERWRITE TABLE ads_nrs_mp_consume_freq PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  concat(res.tenantId, res.rank)  AS id,\n  res.tenantId                    AS tenantId,\n  res.rank                        AS freq,\n  avg(res.interDays)              AS days,\n  '${bdp.system.cyctime}'         AS gmt_created,\n  '${bdp.system.cyctime}'         AS gmt_modified\nFROM (\n       SELECT\n         total.tenantId,\n         total.memberId,\n         datediff(to_date(total.paymentTime), to_date(total.upgradeTime)) AS interDays,\n         total.rank\n       FROM (\n              SELECT\n                o.tenantId,\n                o.memberId,\n                o.paymentTime,\n                first(cust.upgradeTime) AS upgradeTime,\n                row_number()               over (partition BY o.tenantId, o.memberId ORDER BY o.paymentTime) rank\n              FROM dwd_ord_trd_d o\n                JOIN dim_cust_info cust\n                  ON o.tenantId = cust.tenantId AND o.customerId = cust.id AND cust.ds = '${bdp.system.bizdate}'\n              WHERE isnotnull(o.memberId) AND isnotnull(cust.upgradeTime) AND o.paymentTime >= cust.upgradeTime AND o.ds = '${bdp.system.bizdate}'\n              GROUP BY o.tenantId, o.memberId, o.paymentTime) total\n       WHERE total.rank <= 11) res\nGROUP BY res.tenantId, res.rank;\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 9,
                    "nodePid": 1169,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 30 4 * * ?"
                },
                "id": 278816,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "8bb22589",
                "jobKey": "cronTrigger_964_20190117043000",
                "jobName": "cronJob_job_ads_nrs_mp_consume_freq_20190117043000",
                "status": 18,
                "taskId": 964,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:30:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 950,
                            "gmtCreate": 1536509687000,
                            "gmtModified": 1536724364000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "cdp_dt2mysql_nrs_mp_consume_freq",
                            "taskType": 2,
                            "computeType": 1,
                            "engineType": 0,
                            "sqlText": "eyJqb2IiOiJ7IFwiam9iXCI6e1wiY29udGVudFwiOlt7XCJyZWFkZXJcIjp7XCJwYXJhbWV0ZXJcIjp7XCJwYXRoXCI6XCJoZGZzOi8vbnMxL3VzZXIvaGl2ZS93YXJlaG91c2UvaW50ZWxfY2FyZF9kZXYuZGIvYWRzX25yc19tcF9jb25zdW1lX2ZyZXEvZHM9JHtiZHAuc3lzdGVtLmJpemRhdGV9XCIsXCJoYWRvb3BDb25maWdcIjp7XCJkZnMuaGEubmFtZW5vZGVzLm5zMVwiOlwibm4xLG5uMlwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjJcIjpcIm5vZGUwMDY6OTAwMFwiLFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcIjpcIm9yZy5hcGFjaGUuaGFkb29wLmhkZnMuc2VydmVyLm5hbWVub2RlLmhhLkNvbmZpZ3VyZWRGYWlsb3ZlclByb3h5UHJvdmlkZXJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXCI6XCJub2RlMDA1OjkwMDBcIixcImRmcy5uYW1lc2VydmljZXNcIjpcIm5zMVwifSxcImNvbHVtblwiOlt7XCJuYW1lXCI6XCJmcmVxXCIsXCJpbmRleFwiOjIsXCJ0eXBlXCI6XCJiaWdpbnRcIn0se1wibmFtZVwiOlwiZGF5c1wiLFwiaW5kZXhcIjozLFwidHlwZVwiOlwiZG91YmxlXCJ9LHtcIm5hbWVcIjpcImdtdF9jcmVhdGVkXCIsXCJpbmRleFwiOjQsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwiZ210X21vZGlmaWVkXCIsXCJpbmRleFwiOjUsXCJ0eXBlXCI6XCJzdHJpbmdcIn0se1wibmFtZVwiOlwidGVuYW50SWRcIixcImluZGV4XCI6MSxcInR5cGVcIjpcInN0cmluZ1wifSx7XCJuYW1lXCI6XCJpZFwiLFwiaW5kZXhcIjowLFwidHlwZVwiOlwic3RyaW5nXCJ9XSxcImRlZmF1bHRGU1wiOlwiaGRmczovL25zMVwiLFwiZmllbGREZWxpbWl0ZXJcIjpcIlxcdTAwMDFcIixcImVuY29kaW5nXCI6XCJ1dGYtOFwiLFwiZmlsZVR5cGVcIjpcIm9yY1wifSxcIm5hbWVcIjpcImhkZnNyZWFkZXJcIn0sXCJ3cml0ZXJcIjp7XCJuYW1lXCI6XCJteXNxbHdyaXRlclwiLFwicGFyYW1ldGVyXCI6e1wicG9zdFNxbFwiOltdLFwicGFzc3dvcmRcIjpcImR0c3RhY2syMDE4XCIsXCJzZXNzaW9uXCI6W10sXCJjb2x1bW5cIjpbXCJmcmVxXCIsXCJkYXlzXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCIsXCJ0ZW5hbnRfaWRcIixcImlkXCJdLFwiY29ubmVjdGlvblwiOlt7XCJqZGJjVXJsXCI6XCJqZGJjOm15c3FsOi8vMTcyLjE2LjIwLjY6MzMwNi9ucnNfemhpcXVhblwiLFwidGFibGVcIjpbXCJucnNfbXBfY29uc3VtZV9mcmVxXCJdfV0sXCJ3cml0ZU1vZGVcIjpcInJlcGxhY2VcIixcInNvdXJjZUlkc1wiOls5Ml0sXCJwcmVTcWxcIjpbXSxcInVzZXJuYW1lXCI6XCJucnNfemhpcXVhblwifX19XSxcInNldHRpbmdcIjp7XCJkaXJ0eVwiOntcInBhdGhcIjpcImRpcnR5X2NkcF9kdDJteXNxbF9ucnNfbXBfY29uc3VtZV9mcmVxXCIsXCJoYWRvb3BDb25maWdcIjp7XCJkZnMuaGEubmFtZW5vZGVzLm5zMVwiOlwibm4xLG5uMlwiLFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjJcIjpcIm5vZGUwMDY6OTAwMFwiLFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcIjpcIm9yZy5hcGFjaGUuaGFkb29wLmhkZnMuc2VydmVyLm5hbWVub2RlLmhhLkNvbmZpZ3VyZWRGYWlsb3ZlclByb3h5UHJvdmlkZXJcIixcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXCI6XCJub2RlMDA1OjkwMDBcIixcImRmcy5uYW1lc2VydmljZXNcIjpcIm5zMVwifX0sXCJzcGVlZFwiOntcImNoYW5uZWxcIjoxLFwiYnl0ZXNcIjoxMDQ4NTc2fSxcImVycm9yTGltaXRcIjp7XCJyZWNvcmRcIjoxMCxcInBlcmNlbnRhZ2VcIjowLjB9fX0gfSIsInBhcnNlciI6IntcInRhcmdldE1hcFwiOntcInNvdXJjZUlkXCI6OTIsXCJuYW1lXCI6XCJkdHN0YWNrX2tlcnV5dW5cIixcImNvbHVtblwiOlt7XCJrZXlcIjpcImlkXCIsXCJ0eXBlXCI6XCJCSUdJTlQgVU5TSUdORURcIn0se1wia2V5XCI6XCJ0ZW5hbnRfaWRcIixcInR5cGVcIjpcIkJJR0lOVFwifSx7XCJrZXlcIjpcImZyZXFcIixcInR5cGVcIjpcIklOVFwifSx7XCJrZXlcIjpcImRheXNcIixcInR5cGVcIjpcIkRFQ0lNQUxcIn0se1wia2V5XCI6XCJnbXRfY3JlYXRlZFwiLFwidHlwZVwiOlwiREFURVRJTUVcIn0se1wia2V5XCI6XCJnbXRfbW9kaWZpZWRcIixcInR5cGVcIjpcIkRBVEVUSU1FXCJ9LHtcImtleVwiOlwiZ210X2RlbGV0ZWRcIixcInR5cGVcIjpcIkRBVEVUSU1FXCJ9XSxcInR5cGVcIjp7XCJ3cml0ZU1vZGVcIjpcInJlcGxhY2VcIixcInR5cGVcIjoxLFwidGFibGVcIjpbXCJucnNfbXBfY29uc3VtZV9mcmVxXCJdfX0sXCJrZXltYXBcIjp7XCJzb3VyY2VcIjpbe1widHlwZVwiOlwiYmlnaW50XCIsXCJrZXlcIjpcImZyZXFcIn0se1widHlwZVwiOlwiZG91YmxlXCIsXCJrZXlcIjpcImRheXNcIn0se1widHlwZVwiOlwic3RyaW5nXCIsXCJrZXlcIjpcImdtdF9jcmVhdGVkXCJ9LHtcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJnbXRfbW9kaWZpZWRcIn0se1widHlwZVwiOlwic3RyaW5nXCIsXCJrZXlcIjpcInRlbmFudElkXCJ9LHtcInR5cGVcIjpcInN0cmluZ1wiLFwia2V5XCI6XCJpZFwifV0sXCJ0YXJnZXRcIjpbXCJmcmVxXCIsXCJkYXlzXCIsXCJnbXRfY3JlYXRlZFwiLFwiZ210X21vZGlmaWVkXCIsXCJ0ZW5hbnRfaWRcIixcImlkXCJdfSxcInNvdXJjZU1hcFwiOntcInNvdXJjZUlkXCI6ODUsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwiY29sdW1uXCI6W3tcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVswXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbMV1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzJdXCJ9LHtcIiRyZWZcIjpcIiQua2V5bWFwLnNvdXJjZVszXVwifSx7XCIkcmVmXCI6XCIkLmtleW1hcC5zb3VyY2VbNF1cIn0se1wiJHJlZlwiOlwiJC5rZXltYXAuc291cmNlWzVdXCJ9XSxcInR5cGVcIjp7XCJwYXJ0aXRpb25cIjpcImRzPSR7YmRwLnN5c3RlbS5iaXpkYXRlfVwiLFwidHlwZVwiOjcsXCJ0YWJsZVwiOlwiYWRzX25yc19tcF9jb25zdW1lX2ZyZXFcIn0sXCJzb3VyY2VMaXN0XCI6W3tcInNvdXJjZUlkXCI6ODUsXCJ0YWJsZXNcIjpcImFkc19ucnNfbXBfY29uc3VtZV9mcmVxXCIsXCJuYW1lXCI6XCJpbnRlbF9jYXJkX2RldlwiLFwidHlwZVwiOjcsXCJrZXlcIjpcIm1haW5cIn1dfSxcInNldHRpbmdcIjp7XCJwYXRoXCI6XCJkaXJ0eV9jZHBfZHQybXlzcWxfbnJzX21wX2NvbnN1bWVfZnJlcVwiLFwicmVjb3JkXCI6MTAsXCJwZXJjZW50YWdlXCI6MCxcImhhZG9vcENvbmZpZ1wiOlwie1xcXCJkZnMuaGEubmFtZW5vZGVzLm5zMVxcXCI6XFxcIm5uMSxubjJcXFwiLFxcXCJkZnMubmFtZW5vZGUucnBjLWFkZHJlc3MubnMxLm5uMlxcXCI6XFxcIm5vZGUwMDY6OTAwMFxcXCIsXFxcImRmcy5jbGllbnQuZmFpbG92ZXIucHJveHkucHJvdmlkZXIubnMxXFxcIjpcXFwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclxcXCIsXFxcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXFxcIjpcXFwibm9kZTAwNTo5MDAwXFxcIixcXFwiZGZzLm5hbWVzZXJ2aWNlc1xcXCI6XFxcIm5zMVxcXCJ9XCIsXCJjaGFubmVsXCI6XCIxXCIsXCJsaWZlRGF5XCI6OTAsXCJzcGVlZFwiOlwiMVwiLFwiaXNTYXZlRGlydHlcIjoxfX0iLCJjcmVhdGVNb2RlbCI6MH0=",
                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 6,
                            "nodePid": 1162,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 5 * * ?"
                        },
                        "id": 278844,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "b049c4fd",
                        "jobKey": "cronTrigger_950_20190117050000",
                        "jobName": "cronJob_cdp_dt2mysql_nrs_mp_consume_freq_20190117050000",
                        "status": 18,
                        "taskId": 950,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 05:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297342,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547672418000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "b049c4fd",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297314,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547670608000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "8bb22589",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            },
            {
                "batchTask": {
                    "id": 982,
                    "gmtCreate": 1536647022000,
                    "gmtModified": 1536987925000,
                    "isDeleted": 0,
                    "tenantId": 129,
                    "projectId": 77,
                    "name": "job_ads_nrs_ma_ord_source_stat",
                    "taskType": 0,
                    "computeType": 1,
                    "engineType": 1,
                    "sqlText": "CREATE TABLE if NOT EXISTS ads_nrs_ma_ord_source_stat(\nid                      STRING      COMMENT ''\n,tenantId               STRING      COMMENT '租户ID'\n,shopId                 STRING      COMMENT '门店ID'\n,stat_date              STRING      COMMENT '日期'\n,dimId                  STRING      COMMENT '维表ID'\n,cnt                    BIGINT      COMMENT '订单渠道来源数量'\n,percentVal             DOUBLE      COMMENT '订单渠道来源比例'\n,gmt_created            STRING      COMMENT '创建时间'\n,gmt_modified           STRING      COMMENT '修改时间'\n) COMMENT '历史订单渠道来源占比'\nPARTITIONED BY (ds STRING COMMENT '时间分区') STORED AS orc LIFECYCLE 365;\n\n\nset spark.sql.shuffle.partitions=1;\n\n\nINSERT OVERWRITE TABLE ads_nrs_ma_ord_source_stat PARTITION (ds = '${bdp.system.bizdate}')\nSELECT\n  concat(stat.tenantId,stat.shopId,'${bdp.system.bizdate}',stat.dimId)  AS id,\n  stat.tenantId,\n  stat.shopId,\n  concat(substr(${bdp.system.bizdate}, 0, 4), '-', substr(${bdp.system.bizdate}, 5, 2), '-',substr(${bdp.system.bizdate}, 7, 2)) AS stat_date,\n  stat.dimId,\n  stat.cnt,\n  stat.pVal,\n  '${bdp.system.cyctime}' AS gmt_created,\n  '${bdp.system.cyctime}' AS gmt_modified\nFROM (\n       SELECT\n         res.tenantId,\n         '0'                AS shopId,\n         res.dimId,\n         res.cnt            AS cnt,\n         res.cnt / pd_1.cnt AS pVal\n       FROM (\n              SELECT\n                pd.tenantId,\n                pd.dimId,\n                count(pd.dimId) AS cnt\n              FROM (\n                     SELECT\n                       tenantId,\n                       (CASE\n                        WHEN sourceChild IN (1, 2, 3, 141, 142)\n                          THEN 31\n                        WHEN sourceChild IN (31, 32, 33)\n                          THEN 32\n                        WHEN sourceChild = 161\n                          THEN 33\n                        WHEN sourceChild = 181\n                          THEN 34\n                        ELSE 35\n                        END) AS dimId\n                     FROM dwd_ord_trd_d\n                     WHERE ds = '${bdp.system.bizdate}' AND tradeStatus = 4) pd\n              GROUP BY pd.tenantId, pd.dimId) res LEFT OUTER JOIN (SELECT\n                                                                     tenantId,\n                                                                     count(sourceChild) AS cnt\n                                                                   FROM dwd_ord_trd_d\n                                                                   WHERE\n                                                                     ds = '${bdp.system.bizdate}'\n                                                                     AND\n                                                                     tradeStatus = 4\n                                                                   GROUP BY tenantId) pd_1 ON res.tenantId = pd_1.tenantId\n       UNION\n       SELECT\n         res.tenantId,\n         res.shopId,\n         res.dimId,\n         res.cnt            AS cnt,\n         res.cnt / pd_1.cnt AS pVal\n       FROM (\n              SELECT\n                pd.tenantId,\n                pd.shopId,\n                pd.dimId,\n                count(pd.dimId) AS cnt\n              FROM (\n                     SELECT\n                       tenantId,\n                       shopId,\n                       (CASE\n                        WHEN sourceChild IN (1, 2, 3, 141, 142)\n                          THEN 31\n                        WHEN sourceChild IN (31, 32, 33)\n                          THEN 32\n                        WHEN sourceChild = 161\n                          THEN 33\n                        WHEN sourceChild = 181\n                          THEN 34\n                        ELSE 35\n                        END) AS dimId\n                     FROM dwd_ord_trd_d\n                     WHERE ds = '${bdp.system.bizdate}' AND tradeStatus = 4) pd\n              GROUP BY pd.tenantId, pd.shopId, pd.dimId) res LEFT OUTER JOIN (SELECT\n                                                                                tenantId,\n                                                                                shopId,\n                                                                                count(sourceChild) AS cnt\n                                                                              FROM dwd_ord_trd_d\n                                                                              WHERE\n                                                                                ds = '${bdp.system.bizdate}'\n                                                                                AND\n                                                                                tradeStatus = 4\n                                                                              GROUP BY tenantId, shopId) pd_1\n           ON res.tenantId = pd_1.tenantId AND res.shopId = pd_1.shopId) stat;\n\n",
                    "taskParams": "##Number of CPU cores need driver program is running\n##driver.cores=1\n\n##Each Spark action (collect) limits the total size of the serialized results of all partitions. Setting value should not be less than 1M, 0 means no limit. If the total exceeds this limit, the program will terminate. Limit values may cause memory overflow error driver (dependent on spark. driver. memory and objects in the JVM's memory consumption).\n##driver.maxResultSize=1g\n\n##Driver number memory used by a process\n##driver.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##executor.memory=512m\n\n\n##Amount of memory used by each executor process. And JVM memory strings have the same format (for example, 512m, 2G)\n##logConf=spark.logConf",
                    "scheduleConf": "{\"selfReliance\":0,\"min\":\"30\",\"hour\":\"4\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                    "periodType": null,
                    "scheduleStatus": 2,
                    "submitStatus": 1,
                    "modifyUserId": 90,
                    "createUserId": 90,
                    "ownerUserId": 90,
                    "version": 13,
                    "nodePid": 1170,
                    "taskDesc": "",
                    "mainClass": "",
                    "exeArgs": "",
                    "flowId": 0,
                    "createUser": {
                        "id": 90,
                        "gmtCreate": 1535092930000,
                        "gmtModified": 1535092930000,
                        "isDeleted": 0,
                        "userName": "yizhou@dtstack.com",
                        "phoneNumber": null,
                        "dtuicUserId": 6999,
                        "email": "",
                        "status": 0,
                        "defaultProjectId": null
                    },
                    "modifyUser": null,
                    "ownerUser": null,
                    "taskPeriodId": 2,
                    "taskPeriodType": "天任务",
                    "nodePName": null,
                    "readWriteLockVO": null,
                    "userId": null,
                    "lockVersion": null,
                    "taskVariables": null,
                    "forceUpdate": false,
                    "subNodes": null,
                    "relatedTasks": null,
                    "createModel": 0,
                    "operateModel": 0,
                    "pythonVersion": 0,
                    "learningType": 0,
                    "input": null,
                    "output": null,
                    "options": null,
                    "flowName": null,
                    "syncModel": 0,
                    "increColumn": null,
                    "taskVOS": null,
                    "subTaskVOS": null,
                    "resourceList": null,
                    "refResourceList": null,
                    "taskVersions": null,
                    "cron": "0 30 4 * * ?"
                },
                "id": 278823,
                "gmtCreate": 1547647311000,
                "gmtModified": 1547647311000,
                "isDeleted": 0,
                "tenantId": null,
                "projectId": null,
                "jobId": "b8699f4d",
                "jobKey": "cronTrigger_982_20190117043000",
                "jobName": "cronJob_job_ads_nrs_ma_ord_source_stat_20190117043000",
                "status": 18,
                "taskId": 982,
                "createUserId": 90,
                "type": 0,
                "businessDate": "2019-01-16 ",
                "cycTime": "2019-01-17 04:30:00",
                "execStartTime": null,
                "execEndTime": null,
                "execTime": null,
                "execStartDate": null,
                "execEndDate": null,
                "taskPeriodId": 2,
                "taskPeriodType": "天任务",
                "jobVOS": [
                    {
                        "batchTask": {
                            "id": 1030,
                            "gmtCreate": 1536988059000,
                            "gmtModified": 1536988101000,
                            "isDeleted": 0,
                            "tenantId": 129,
                            "projectId": 77,
                            "name": "cdp_dt2mysql_nrs_ma_ord_source_stat_script",
                            "taskType": 2,
                            "computeType": 1,
                            "engineType": 0,
                            "sqlText": "eyJqb2IiOiJ7XG4gIFwiam9iXCIgOiB7XG4gICAgXCJjb250ZW50XCIgOiBbIHtcbiAgICAgIFwicmVhZGVyXCIgOiB7XG4gICAgICAgIFwicGFyYW1ldGVyXCIgOiB7XG4gICAgICAgICAgXCJwYXRoXCIgOiBcImhkZnM6Ly9uczEvdXNlci9oaXZlL3dhcmVob3VzZS9pbnRlbF9jYXJkX2Rldi5kYi9hZHNfbnJzX21hX29yZF9zb3VyY2Vfc3RhdC9kcz0ke2JkcC5zeXN0ZW0uYml6ZGF0ZX1cIixcbiAgICAgICAgICBcImhhZG9vcENvbmZpZ1wiIDoge1xuICAgICAgICAgICAgXCJkZnMuaGEubmFtZW5vZGVzLm5zMVwiIDogXCJubjEsbm4yXCIsXG4gICAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCIgOiBcIm5vZGUwMDY6OTAwMFwiLFxuICAgICAgICAgICAgXCJkZnMuY2xpZW50LmZhaWxvdmVyLnByb3h5LnByb3ZpZGVyLm5zMVwiIDogXCJvcmcuYXBhY2hlLmhhZG9vcC5oZGZzLnNlcnZlci5uYW1lbm9kZS5oYS5Db25maWd1cmVkRmFpbG92ZXJQcm94eVByb3ZpZGVyXCIsXG4gICAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4xXCIgOiBcIm5vZGUwMDU6OTAwMFwiLFxuICAgICAgICAgICAgXCJkZnMubmFtZXNlcnZpY2VzXCIgOiBcIm5zMVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImNvbHVtblwiIDogWyB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiaWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDAsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwidGVuYW50SWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDEsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwic2hvcElkXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiAyLFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcInN0cmluZ1wiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInN0YXRfZGF0ZVwiLFxuICAgICAgICAgICAgXCJpbmRleFwiIDogMyxcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJkYXRlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZGltSWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDQsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiY250XCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA1LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcImJpZ2ludFwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgXCJuYW1lXCIgOiBcInBlcmNlbnRWYWxcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDYsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwiZG91YmxlXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ210X2NyZWF0ZWRcIixcbiAgICAgICAgICAgIFwiaW5kZXhcIiA6IDcsXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBcIm5hbWVcIiA6IFwiZ210X21vZGlmaWVkXCIsXG4gICAgICAgICAgICBcImluZGV4XCIgOiA4LFxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcInN0cmluZ1wiXG4gICAgICAgICAgfSBdLFxuICAgICAgICAgIFwiZGVmYXVsdEZTXCIgOiBcImhkZnM6Ly9uczFcIixcbiAgICAgICAgICBcImZpZWxkRGVsaW1pdGVyXCIgOiBcIlxcdTAwMDFcIixcbiAgICAgICAgICBcImVuY29kaW5nXCIgOiBcInV0Zi04XCIsXG4gICAgICAgICAgXCJmaWxlVHlwZVwiIDogXCJvcmNcIlxuICAgICAgICB9LFxuICAgICAgICBcIm5hbWVcIiA6IFwiaGRmc3JlYWRlclwiXG4gICAgICB9LFxuICAgICAgXCJ3cml0ZXJcIiA6IHtcbiAgICAgICAgXCJuYW1lXCIgOiBcIm15c3Fsd3JpdGVyXCIsXG4gICAgICAgIFwicGFyYW1ldGVyXCIgOiB7XG4gICAgICAgICAgXCJwb3N0U3FsXCIgOiBbIF0sXG4gICAgICAgICAgXCJwYXNzd29yZFwiIDogXCJkdHN0YWNrMjAxOFwiLFxuICAgICAgICAgIFwic2Vzc2lvblwiIDogWyBdLFxuICAgICAgICAgIFwiY29sdW1uXCIgOiBbIFwiaWRcIiwgXCJ0ZW5hbnRfaWRcIiwgXCJzaG9wX2lkXCIsIFwic3RhdF9kYXRlXCIsIFwiZGltXCIsIFwiY250XCIsIFwicGVyY2VudFwiLCBcImdtdF9jcmVhdGVkXCIsIFwiZ210X21vZGlmaWVkXCIgXSxcbiAgICAgICAgICBcImNvbm5lY3Rpb25cIiA6IFsge1xuICAgICAgICAgICAgXCJqZGJjVXJsXCIgOiBcImpkYmM6bXlzcWw6Ly8xNzIuMTYuMjAuNjozMzA2L25yc196aGlxdWFuXCIsXG4gICAgICAgICAgICBcInRhYmxlXCIgOiBbIFwibnJzX21hX29yZGVyX3NvdXJjZV9zdGF0XCIgXVxuICAgICAgICAgIH0gXSxcbiAgICAgICAgICBcIndyaXRlTW9kZVwiIDogXCJyZXBsYWNlXCIsXG4gICAgICAgICAgXCJzb3VyY2VJZHNcIiA6IFsgOTIgXSxcbiAgICAgICAgICBcInByZVNxbFwiIDogWyBdLFxuICAgICAgICAgIFwidXNlcm5hbWVcIiA6IFwibnJzX3poaXF1YW5cIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBdLFxuICAgIFwic2V0dGluZ1wiIDoge1xuICAgICAgXCJkaXJ0eVwiIDoge1xuICAgICAgICBcInBhdGhcIiA6IFwiZGlydHlfY2RwX2R0Mm15c3FsX25yc19tYV9vcmRfc291cmNlX3N0YXRcIixcbiAgICAgICAgXCJoYWRvb3BDb25maWdcIiA6IHtcbiAgICAgICAgICBcImRmcy5oYS5uYW1lbm9kZXMubnMxXCIgOiBcIm5uMSxubjJcIixcbiAgICAgICAgICBcImRmcy5uYW1lbm9kZS5ycGMtYWRkcmVzcy5uczEubm4yXCIgOiBcIm5vZGUwMDY6OTAwMFwiLFxuICAgICAgICAgIFwiZGZzLmNsaWVudC5mYWlsb3Zlci5wcm94eS5wcm92aWRlci5uczFcIiA6IFwib3JnLmFwYWNoZS5oYWRvb3AuaGRmcy5zZXJ2ZXIubmFtZW5vZGUuaGEuQ29uZmlndXJlZEZhaWxvdmVyUHJveHlQcm92aWRlclwiLFxuICAgICAgICAgIFwiZGZzLm5hbWVub2RlLnJwYy1hZGRyZXNzLm5zMS5ubjFcIiA6IFwibm9kZTAwNTo5MDAwXCIsXG4gICAgICAgICAgXCJkZnMubmFtZXNlcnZpY2VzXCIgOiBcIm5zMVwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcInNwZWVkXCIgOiB7XG4gICAgICAgIFwiY2hhbm5lbFwiIDogMSxcbiAgICAgICAgXCJieXRlc1wiIDogMTA0ODU3NlxuICAgICAgfSxcbiAgICAgIFwiZXJyb3JMaW1pdFwiIDoge1xuICAgICAgICBcInJlY29yZFwiIDogMTAsXG4gICAgICAgIFwicGVyY2VudGFnZVwiIDogMC4wXG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiY3JlYXRlTW9kZWwiOjF9",
                            "taskParams": "##sql prefix is only useful for SQL ,mr prefix is only useful for MR ,no prefix is  useful for MR and SQL\r\n\r\n\r\n##The entire SQL job concurrency settings\r\n#sql.env.parallelism=1\r\n\r\n##The entire SQL job max concurrency settings\r\n#sql.max.env.parallelism=1\r\n\r\n\r\n##Sets the maximum time frequency (milliseconds) for the flushing of the\r\n##output buffers. By default the output buffers flush frequently to provide\r\n##low latency and to aid smooth developer experience. Setting the parameter\r\n##can result in three logical modes:\r\n#sql.buffer.timeout.millis=100\r\n\r\n#Time interval between state checkpoints in milliseconds\r\nsql.checkpoint.interval=60000\r\n\r\n#one of EXACTLY_ONCE,AT_LEAST_ONCE , the default val is EXACTLY_ONCE\r\n#sql.checkpoint.mode=EXACTLY_ONCE\r\n\r\n#The checkpoint timeout, in milliseconds,The default timeout of a checkpoint attempt: 10 minutes\r\n#sql.checkpoint.timeout=600000\r\n\r\n#The maximum number of concurrent checkpoint attempts,The default limit of concurrently happening checkpoints: one\r\n#sql.max.concurrent.checkpoints=1\r\n\r\n#Cleanup behaviour for persistent checkpoints. one of true or false\r\n#sql.checkpoint.cleanup.mode=true\r\n\r\n\r\n##The entire MR job concurrency settings \r\n##Only when the program itself does not specify a degree of parallelism parameter takes effect\r\n#mr.job.parallelism=1\r\n",
                            "scheduleConf": "{\"selfReliance\":0,\"min\":\"0\",\"hour\":\"5\",\"periodType\":\"2\",\"beginDate\":\"2001-01-01\",\"endDate\":\"2121-01-01\"}",
                            "periodType": null,
                            "scheduleStatus": 2,
                            "submitStatus": 1,
                            "modifyUserId": 90,
                            "createUserId": 90,
                            "ownerUserId": 90,
                            "version": 2,
                            "nodePid": 1187,
                            "taskDesc": "",
                            "mainClass": "",
                            "exeArgs": "",
                            "flowId": 0,
                            "createUser": {
                                "id": 90,
                                "gmtCreate": 1535092930000,
                                "gmtModified": 1535092930000,
                                "isDeleted": 0,
                                "userName": "yizhou@dtstack.com",
                                "phoneNumber": null,
                                "dtuicUserId": 6999,
                                "email": "",
                                "status": 0,
                                "defaultProjectId": null
                            },
                            "modifyUser": null,
                            "ownerUser": null,
                            "taskPeriodId": 2,
                            "taskPeriodType": "天任务",
                            "nodePName": null,
                            "readWriteLockVO": null,
                            "userId": null,
                            "lockVersion": null,
                            "taskVariables": null,
                            "forceUpdate": false,
                            "subNodes": null,
                            "relatedTasks": null,
                            "createModel": 0,
                            "operateModel": 0,
                            "pythonVersion": 0,
                            "learningType": 0,
                            "input": null,
                            "output": null,
                            "options": null,
                            "flowName": null,
                            "syncModel": 0,
                            "increColumn": null,
                            "taskVOS": null,
                            "subTaskVOS": null,
                            "resourceList": null,
                            "refResourceList": null,
                            "taskVersions": null,
                            "cron": "0 0 5 * * ?"
                        },
                        "id": 278851,
                        "gmtCreate": 1547647311000,
                        "gmtModified": 1547647311000,
                        "isDeleted": 0,
                        "tenantId": null,
                        "projectId": null,
                        "jobId": "760404d7",
                        "jobKey": "cronTrigger_1030_20190117050000",
                        "jobName": "cronJob_cdp_dt2mysql_nrs_ma_ord_source_stat_script_20190117050000",
                        "status": 18,
                        "taskId": 1030,
                        "createUserId": 90,
                        "type": 0,
                        "businessDate": "2019-01-16 ",
                        "cycTime": "2019-01-17 05:00:00",
                        "execStartTime": null,
                        "execEndTime": null,
                        "execTime": null,
                        "execStartDate": null,
                        "execEndDate": null,
                        "taskPeriodId": 2,
                        "taskPeriodType": "天任务",
                        "jobVOS": null,
                        "batchEngineJob": {
                            "id": 297349,
                            "gmtCreate": 1547647311000,
                            "gmtModified": 1547672407000,
                            "isDeleted": 0,
                            "status": 18,
                            "jobId": "760404d7",
                            "engineJobId": null,
                            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                            "engineLog": "",
                            "execStartTime": null,
                            "execEndTime": null,
                            "execTime": 0
                        },
                        "subNodes": null,
                        "flowJobId": "0",
                        "relatedJobs": null,
                        "isDirty": 0
                    }
                ],
                "batchEngineJob": {
                    "id": 297321,
                    "gmtCreate": 1547647311000,
                    "gmtModified": 1547670609000,
                    "isDeleted": 0,
                    "status": 18,
                    "jobId": "b8699f4d",
                    "engineJobId": null,
                    "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
                    "engineLog": "",
                    "execStartTime": null,
                    "execEndTime": null,
                    "execTime": 0
                },
                "subNodes": null,
                "flowJobId": "0",
                "relatedJobs": null,
                "isDirty": 0
            }
        ],
        "batchEngineJob": {
            "id": 297042,
            "gmtCreate": 1547647311000,
            "gmtModified": 1547661625000,
            "isDeleted": 0,
            "status": 18,
            "jobId": "a9fa1f93",
            "engineJobId": null,
            "logInfo": "{ \"msg_info\": \"当前任务处于冻结状态\"}",
            "engineLog": "",
            "execStartTime": null,
            "execEndTime": null,
            "execTime": 0
        },
        "subNodes": null,
        "flowJobId": "0",
        "relatedJobs": null,
        "isDirty": 0
    },
    "space": 5221
}
