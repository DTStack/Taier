<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.dao.ScheduleJobDao">

    <!--  缺少 engine_log 字段，字段过长不需要通用  -->
    <sql id="select_content_fragment">
      bj.id,bj.tenant_id,bj.project_id,bj.dtuic_tenant_id,bj.app_type,bj.job_id,bj.job_key,bj.job_name,bj.task_id,bj.gmt_create,bj.gmt_modified,bj.create_user_id,bj.is_deleted,bj.type,bj.is_restart,
      bj.business_date,bj.cyc_time,dependency_type,flow_job_id,bj.period_type,bj.status,bj.task_type,bj.fill_id,bj.exec_start_time,bj.exec_end_time,bj.exec_time,bj.submit_time,bj.retry_num,max_retry_num,
      bj.node_address,bj.version_id,bj.next_cyc_time,bj.log_info,bj.compute_type,bj.submit_user_name,bj.engine_job_id,bj.task_rule,bj.business_type
    </sql>

    <sql id="select_filed_all">
        `id`,`tenant_id`,`project_id`,`dtuic_tenant_id`,`app_type`,`job_id`,`job_key`,`job_name`,`task_id`,`gmt_create`,`gmt_modified`,`create_user_id`,`is_deleted`,`type`,`is_restart`,`business_date`,`cyc_time`
        ,`dependency_type`,`flow_job_id`,`period_type`,`status`,`task_type`,`fill_id`,`exec_start_time`,`exec_end_time`,`exec_time`,`submit_time`,`max_retry_num`,`retry_num`,`log_info`,`node_address`,`version_id`
        ,`next_cyc_time`,`engine_job_id`,`application_id`,`engine_log`,`plugin_info_id`,`retry_task_params`,`compute_type`,`phase_status`,`submit_user_name`,`business_type`
    </sql>

    <sql id="select_filed_all_bj">
        id,tenant_id,project_id,dtuic_tenant_id,app_type,job_id,job_key,job_name,task_id,gmt_create,gmt_modified,create_user_id,is_deleted,type,is_restart,business_date,cyc_time,dependency_type,flow_job_id,period_type,status,task_type,fill_id,exec_start_time,exec_end_time,exec_time,submit_time,retry_num,max_retry_num,node_address,version_id,next_cyc_time,log_info,compute_type,submit_user_name,engine_job_id,task_rule,component_version
        ,business_type
    </sql>

    <sql id="select_where_fragment">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND bj.id = #{model.id}
            </if>
            <if test="model.tenantId != null">
                AND bj.tenant_id = #{model.tenantId}
            </if>
            <if test="model.projectId != null and model.projectId != -1">
                AND bj.project_id = #{model.projectId}
            </if>
            <if test="model.jobId != null">
                AND bj.job_id = #{model.jobId}
            </if>
            <if test="model.jobKey != null">
                AND bj.job_key = #{model.jobKey}
            </if>
            <if test="model.jobName != null">
                AND bj.job_name = #{model.jobName}
            </if>
            <if test="model.taskId != null">
                AND bj.task_id = #{model.taskId}
            </if>
            <if test="model.gmtCreate != null">
                AND bj.gmt_create = #{model.gmtCreate}
            </if>
            <if test="model.gmtModified != null">
                AND bj.gmt_modified = #{model.gmtModified}
            </if>
            <if test="model.createUserId != null">
                AND bj.create_user_id = #{model.createUserId}
            </if>
            <if test="model.isDeleted != null">
                AND bj.is_deleted = #{model.isDeleted}
            </if>
            <if test="model.type != null">
                AND bj.type = #{model.type}
            </if>
            <if test="model.isRestart != null">
                AND bj.is_restart = #{model.isRestart}
            </if>
            <if test="model.businessDate != null">
                AND bj.business_date = #{model.businessDate}
            </if>
            <if test="model.likeBusinessDate != null">
                AND bj.business_date like '${model.likeBusinessDate}%'
            </if>
            <if test="model.cycTime != null">
                AND bj.cyc_time = #{model.cycTime}
            </if>
            <if test="model.taskIds != null and model.taskIds.size() > 0">
                AND bj.task_id IN
                <foreach item="taskId" index="index" collection="model.taskIds" open="(" separator="," close=")">
                    #{taskId}
                </foreach>
            </if>
            <if test="model.jobStatuses != null and model.jobStatuses.size() > 0">
                AND bj.status IN
                <foreach item="status" index="index" collection="model.jobStatuses" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>

            <if test="model.types != null and model.types.size() > 0">
                AND bj.type IN
                <foreach item="type" index="index" collection="model.types" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>

            <if test="model.execTime != null">
                AND bj.exec_time &gt;= #{model.execTime}
            </if>

            <if test="model.taskTypes != null and model.taskTypes.size() > 0">
                AND bj.task_type IN
                <foreach item="item" index="index" collection="model.taskTypes" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="model.cycStartDay != null and model.cycEndDay != null">
                AND bj.cyc_time <![CDATA[>=]]> #{model.cycStartDay}
                and bj.cyc_time <![CDATA[<]]> #{model.cycEndDay}
            </if>
            <if test="model.jobNameRightLike != null">
                AND bj.job_name LIKE '${model.jobNameRightLike}%'
            </if>

            <if test="model.startGmtCreate != null">
                AND to_days(bj.gmt_create) = to_days(#{model.startGmtCreate})
            </if>
            <if test="model.taskPeriodId != null and model.taskPeriodId.size()>0">
                AND bj.period_type IN
                <foreach collection="model.taskPeriodId" separator="," index="index" item="item" open="(" close=")">
                    ${item}
                </foreach>
            </if>

            <if test="model.flowJobId != null">
                AND bj.flow_job_id = #{model.flowJobId}
            </if>
            <if test="model.needQuerySonNode == false and model.flowJobId == null">
                AND bj.flow_job_id = 0
            </if>
            <if test="model.appType != null">
                AND bj.app_type = #{model.appType}
            </if>
            <if test="model.execStartDay != null and model.execEndDay != null">
                AND bj.exec_start_time &gt;= #{model.execStartDay} and bj.exec_start_time &lt;= #{model.execEndDay}
            </if>
            <if test="model.bizEndDay != null and model.bizStartDay != null">
                AND bj.business_date &gt;= #{model.bizStartDay} and bj.business_date &lt;= #{model.bizEndDay}
            </if>
            <if test="model.businessType != null">
                AND bj.business_type = #{model.businessType}
            </if>
        </trim>
    </sql>

    <sql id="select_where_fragment_without_ts">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND bj.id = #{model.id}
            </if>
            <if test="model.tenantId != null">
                AND bj.tenant_id = #{model.tenantId}
            </if>
            <if test="model.projectId != null">
                AND bj.project_id = #{model.projectId}
            </if>
            <if test="model.jobId != null">
                AND bj.job_id = #{model.jobId}
            </if>
            <if test="model.jobKey != null">
                AND bj.job_key = #{model.jobKey}
            </if>
            <if test="model.jobName != null">
                AND bj.job_name = #{model.jobName}
            </if>
            <if test="model.taskId != null">
                AND bj.task_id = #{model.taskId}
            </if>
            <if test="model.gmtCreate != null">
                AND bj.gmt_create = #{model.gmtCreate}
            </if>
            <if test="model.gmtModified != null">
                AND bj.gmt_modified = #{model.gmtModified}
            </if>
            <if test="model.createUserId != null">
                AND bj.create_user_id = #{model.createUserId}
            </if>
            <if test="model.isDeleted != null">
                AND bj.is_deleted = #{model.isDeleted}
            </if>
            <if test="model.type != null">
                AND bj.type = #{model.type}
            </if>
            <if test="model.isRestart != null">
                AND bj.is_restart = #{model.isRestart}
            </if>
            <if test="model.businessDate != null">
                AND bj.business_date = #{model.businessDate}
            </if>
            <if test="model.likeBusinessDate != null">
                AND bj.business_date like '${model.likeBusinessDate}%'
            </if>
            <if test="model.cycTime != null">
                AND bj.cyc_time = #{model.cycTime}
            </if>
            <if test="model.taskIds != null and model.taskIds.size() > 0">
                AND bj.task_id IN
                <foreach item="taskId" index="index" collection="model.taskIds" open="(" separator="," close=")">
                    #{taskId}
                </foreach>
            </if>
            <if test="model.jobStatuses != null and model.jobStatuses.size() > 0">
                AND bj.status IN
                <foreach item="status" index="index" collection="model.jobStatuses" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>

            <if test="model.execTime != null">
                AND bj.exec_time &gt;= #{model.execTime}
            </if>

            <if test="model.jobNameRightLike != null">
                AND bj.job_name LIKE '${model.jobNameRightLike}%'
            </if>
            <if test="model.bizStartDay != null and model.bizEndDay != null">
                AND bj.business_date &gt;= ${model.bizStartDay} and bj.business_date &lt; ${model.bizEndDay}
            </if>

            <if test="model.startGmtCreate != null">
                AND to_days(bj.gmt_create) = to_days(#{model.startGmtCreate})
            </if>
            <if test="model.taskPeriodId != null and model.taskPeriodId.size()>0">
                AND bj.period_type IN
                <foreach collection="model.taskPeriodId" separator="," index="index" item="item" open="(" close=")">
                    ${item}
                </foreach>
            </if>
            <if test="model.cycStartDay != null and model.cycEndDay != null">
                AND bj.cyc_time &gt;= ${model.cycStartDay} and bj.cyc_time &lt;= ${model.cycEndDay}
            </if>

            <if test="model.flowJobId != null">
                AND bj.flow_job_id = #{model.flowJobId}
            </if>
            <if test="model.appType != null">
                AND bj.app_type = #{model.appType}
            </if>
            <if test="model.types != null and model.types.size() > 0">
                AND bj.type IN
                <foreach item="type" index="index" collection="model.types" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="select_where_batch_job">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND id = #{model.id}
            </if>
            <if test="model.tenantId != null">
                AND tenant_id = #{model.tenantId}
            </if>
            <if test="model.projectId != null">
                AND project_id = #{model.projectId}
            </if>
            <if test="model.jobId != null">
                AND job_id = #{model.jobId}
            </if>
            <if test="model.jobKey != null">
                AND job_key = #{model.jobKey}
            </if>
            <if test="model.jobName != null">
                AND job_name = #{model.jobName}
            </if>
            <if test="model.taskId != null">
                AND task_id = #{model.taskId}
            </if>
            <if test="model.gmtCreate != null">
                AND gmt_create = #{model.gmtCreate}
            </if>
            <if test="model.gmtModified != null">
                AND gmt_modified = #{model.gmtModified}
            </if>
            <if test="model.createUserId != null">
                AND create_user_id = #{model.createUserId}
            </if>
            <if test="model.isDeleted != null">
                AND is_deleted = #{model.isDeleted}
            </if>
            <if test="model.type != null">
                AND type = #{model.type}
            </if>
            <if test="model.isRestart != null">
                AND is_restart = #{model.isRestart}
            </if>
            <if test="model.businessDate != null">
                AND business_date = #{model.businessDate}
            </if>
            <if test="model.likeBusinessDate != null">
                AND business_date like '${model.likeBusinessDate}%'
            </if>
            <if test="model.cycTime != null">
                AND cyc_time = #{model.cycTime}
            </if>
            <if test="model.appType != null">
                AND app_type = #{model.appType}
            </if>
            <if test="model.taskIds != null and model.taskIds.size() > 0">
                AND task_id IN
                <foreach item="taskId" index="index" collection="model.taskIds" open="(" separator="," close=")">
                    #{taskId}
                </foreach>
            </if>
            <if test="model.jobStatuses != null and model.jobStatuses.size() > 0">
                AND status IN
                <foreach item="status" index="index" collection="model.jobStatuses" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="model.taskTypes != null and model.taskTypes.size() > 0">
                AND task_type IN
                <foreach item="item" index="index" collection="model.taskTypes" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="model.jobNameRightLike != null">
                AND job_name LIKE '${model.jobNameRightLike}%'
            </if>
            <if test="model.bizStartDay != null and model.bizEndDay != null">
                AND business_date &gt;= ${model.bizStartDay} and business_date &lt; ${model.bizEndDay}
            </if>

            <if test="model.startGmtCreate != null">
                AND to_days(gmt_create) = to_days(#{model.startGmtCreate})
            </if>
            <if test="model.taskPeriodId != null and model.taskPeriodId.size()>0">
                AND period_type IN
                <foreach collection="model.taskPeriodId" separator="," index="index" item="item" open="(" close=")">
                    ${item}
                </foreach>
            </if>

            <if test="model.cycStartDay != null and model.cycEndDay != null">
                AND cyc_time <![CDATA[>=]]> #{model.cycStartDay}
                AND cyc_time <![CDATA[<]]> #{model.cycEndDay}
            </if>

            <if test="model.flowJobId != null">
                AND flow_job_id = #{model.flowJobId}
            </if>
            <if test="model.queryWorkFlowModel == 1">
                AND flow_job_id = "0"
            </if>
            <if test="model.queryWorkFlowModel == 2">
                AND flow_job_id != "0"
            </if>
            <if test="model.queryWorkFlowModel == 4">
                AND task_type != 10
            </if>
            <if test="model.projectIds != null and model.projectIds.size()>0">
                AND project_id in
                <foreach collection="model.projectIds" open="(" close=")" separator="," item="projectId">
                    #{projectId}
                </foreach>
            </if>
            <if test="model.execStartDay != null and model.execEndDay != null">
                AND exec_start_time &gt;= ${model.execStartDay} and exec_start_time &lt;= ${model.execEndDay}
            </if>
            <if test="model.types != null and model.types.size() > 0">
                AND type IN
                <foreach item="type" index="index" collection="model.types" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
        </trim>
    </sql>


    <sql id="page_condition">
        <trim prefix="ORDER BY " prefixOverrides=",">
            <if test="model.execTimeSort != null and model.execTimeSort != ''">
                , bj.exec_time ${model.execTimeSort}
            </if>
            <if test="model.execStartSort != null and model.execStartSort != ''">
                , bj.exec_start_time ${model.execStartSort}
            </if>
            <if test="model.execEndSort != null and model.execEndSort != ''">
                , bj.exec_end_time ${model.execEndSort}
            </if>
            <if test="model.cycSort != null and model.cycSort != ''">
                , bj.cyc_time ${model.cycSort}
            </if>
            <if test="model.businessDateSort != null and model.businessDateSort != ''">
                , bj.business_date ${model.businessDateSort}
            </if>
            <if test="model.retryNumSort != null and model.retryNumSort != ''">
                , bj.retry_num ${model.retryNumSort}
            </if>
            <if test="orderBy != null and orderBy != ''">
                , bj.${orderBy} ${sort}
            </if>
            , bj.gmt_create desc
        </trim>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="tenantId != null and tenantId > 0">
                tenant_id = #{tenantId},
            </if>
            <if test="projectId != null and projectId > 0">
                project_id = #{projectId},
            </if>
            <if test="jobId != null">
                job_id = #{jobId},
            </if>
            <if test="jobKey != null">
                job_key = #{jobKey},
            </if>
            <if test="jobName != null">
                job_name = #{jobName},
            </if>
            <if test="taskId != null">
                task_id = #{taskId},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="isRestart != null">
                is_restart = #{isRestart},
            </if>
            <if test="businessDate != null">
                business_date = #{businessDate},
            </if>
            <if test="cycTime != null">
                cyc_time = #{cycTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="dtuicTenantId !=null and dtuicTenantId > 0">
                dtuic_tenant_id = #{dtuicTenantId},
            </if>
            <if test="appType!=null">
                app_type = #{appType},
            </if>
            <if test="logInfo!=null">
                log_info = #{logInfo},
            </if>
            <if test="retryNum != null">
                retry_num = #{retryNum},
            </if>
            <if test="phaseStatus != null">
                phase_status = #{phaseStatus},
            </if>
            <if test="versionId != null">
                version_id = #{versionId},
            </if>
            <if test="submitUserName != null">
                submit_user_name = #{submitUserName},
            </if>
        </set>
    </sql>

    <select id="getOne" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <select id="listByJobIds" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE id in
        <foreach item="id" index="index" collection="jobIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND is_deleted = 0
    </select>

    <select id="listAfterOrBeforeJobs" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        from schedule_job bj
        where task_id = #{taskId}
        AND app_type = #{appType} AND type = #{type}
        <choose>
            <when test="isAfter">
                AND cyc_time > #{cycTime}
            </when>
            <otherwise>
                <![CDATA[ AND cyc_time < ]]> #{cycTime}
            </otherwise>
        </choose>
    </select>

    <select id="getByJobKeyAndType" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE job_key = #{jobKey} AND type = #{type} AND is_deleted = 0
    </select>

    <select id="getByJobKey" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE job_key = #{jobKey} AND is_deleted = 0
    </select>


    <select id="countByStatusAndType" resultType="java.util.HashMap">
        SELECT status,COUNT(1) as count
        FROM schedule_job ts
        WHERE ts.is_deleted = 0
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND ts.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1">
            AND ts.project_id = #{projectId}
        </if>
        <if test="tenantId!=null">
            AND ts.tenant_id = #{tenantId}
        </if>
        AND ts.type = #{type}
        AND ts.app_type = #{appType}
        AND ts.task_type != 10
        <if test="startTime != null and startTime != ''">
            AND ts.cyc_time <![CDATA[>=]]> #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            AND ts.cyc_time <![CDATA[<]]> #{endTime}
        </if>
        <if test="statuses != null ">
            AND ts.status in
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        group by status
    </select>

    <select id="selectStatusAndType" resultType="java.util.HashMap">
        SELECT if(ts.is_deleted = 1,CONCAT(ts.name,'(已删除)'),ts.name) AS name, bj.status AS status,bj.exec_start_time AS
        execStartTime
        FROM schedule_job bj
        LEFT JOIN schedule_task_shade ts on bj.task_id = ts.task_id
        WHERE bj.is_deleted = 0
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND bj.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1">
            AND bj.project_id = #{projectId}
        </if>
        <if test="tenantId!=null">
            AND bj.tenant_id = #{tenantId}
        </if>
        AND bj.type = #{type}
        AND bj.app_type = #{appType}
        AND ts.app_type = #{appType}
        AND bj.task_type != 10
        <if test="startTime != null and startTime != ''">
            AND bj.cyc_time <![CDATA[>=]]> #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            AND bj.cyc_time <![CDATA[<]]> #{endTime}
        </if>
        <if test="statuses != null ">
            AND bj.status in
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        ORDER BY bj.exec_start_time LIMIT #{startPage}, #{pageSize}
    </select>


    <select id="listTopRunTime" resultType="java.util.HashMap">
        SELECT bj.id AS id, bj.task_id AS taskId, bj.cyc_time AS cycTime, ifnull(bj.type, 0) AS type,bj.task_type as
        taskType,
        bj.exec_time AS execTime,bj.is_deleted as isDeleted,bj.create_user_id AS createUserId
        FROM schedule_job bj
        WHERE bj.is_deleted = 0
        AND bj.app_type = #{appType}
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND bj.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1">
            AND bj.project_id = #{projectId}
        </if>
        AND bj.exec_start_time &gt;= #{startTime} AND bj.exec_start_time &lt;= #{endTime}
        ORDER BY bj.exec_time desc limit #{pageQuery.start}, #{pageQuery.pageSize}
    </select>

    <select id="listTopErrorByType" resultType="com.dtstack.engine.api.vo.JobTopErrorVO">
        SELECT bj.task_id AS taskId, count(1) as errorCount
        FROM schedule_job bj
        WHERE bj.is_deleted = 0
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND bj.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1">
            AND bj.project_id = #{projectId}
        </if>
        <if test="tenantId!=null">
            AND bj.tenant_id = #{tenantId}
        </if>
        AND bj.app_type = #{appType}
        AND bj.status in
        <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
            #{status}
        </foreach>
        AND bj.type = #{type}
        AND bj.cyc_time is not null and bj.cyc_time >= #{cycTime}
        group by bj.task_id
        ORDER BY count(1) desc limit #{pageQuery.start}, #{pageQuery.pageSize}
    </select>

    <select id="listThirtyDayJobs" resultType="java.util.HashMap">
        SELECT DATE_FORMAT(bj.cyc_time, '%m/%d') AS day, COUNT(1) AS cnt
        FROM schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        WHERE bj.cyc_time is not null and to_days(bj.cyc_time) >= (to_days(NOW()) -30)
        and bj.type = #{type}
        and bj.project_id = #{projectId}
        and bj.tenant_id = #{tenantId}
        and bj.is_deleted = 0
        and bj.app_type = ts.app_type
        <if test="taskTypes != null and taskTypes.size()>0">
            and ts.task_type in
            <foreach collection="taskTypes" item="taskType" open="(" close=")" separator=",">
                #{taskType}
            </foreach>
        </if>
        <if test="statusList != null and statusList.size()>0">
            and bj.status in
            <foreach collection="statusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY day
    </select>

    <select id="countScienceJobStatus" resultType="java.util.HashMap">
        SELECT COUNT(1) AS total,
        SUM(case when bj.status = 4 or bj.status = 16 then 1 else 0 end) AS deployCount,
        SUM(case when bj.status = 8 then 1 else 0 end) AS failCount,
        SUM(case when bj.status = #{status} then 1 else 0 end) AS successCount
        FROM schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        WHERE bj.type = #{type}
        and bj.tenant_id = #{tenantId}
        and bj.is_deleted = 0
        and bj.flow_job_id = 0
        and bj.app_type = ts.app_type
        <if test="taskTypes != null and taskTypes.size()>0">
            and ts.task_type in
                <foreach collection="taskTypes" item="taskType" open="(" close=")" separator=",">
                    #{taskType}
                </foreach>
        </if>
        <if test="cycStartDay != null and cycEndDay != null">
            AND bj.cyc_time &gt;= ${cycStartDay} and bj.cyc_time &lt;= ${cycEndDay}
        </if>
        <if test="projectIds != null and projectIds.size()>0">
            and bj.project_id in
            <foreach collection="projectIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="generalScienceCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        from (
        select <include refid="select_filed_all"/>,'' as groupDate from schedule_job
        <include refid="select_where_batch_job"/>
        and period_type not in (0,1)

        union
        select <include refid="select_filed_all"/> ,left(business_date,8) as groupDate from schedule_job
        <include refid="select_where_batch_job"/>
        and period_type in (0,1)
        group by task_id,groupDate
        )bj
        <include refid="select_where_batch_job"/>
        <if test="model.taskIds != null and model.taskIds.size > 0">
            or bj.task_id in
            <foreach collection="model.taskIds" item="taskId" open="(" separator="," close=")">
                #{taskId}
            </foreach>
        </if>
        limit 1
    </select>



    <select id="listTodayJobs" resultType="java.util.HashMap">
        SELECT DATE_FORMAT(bj.exec_start_time, '%H') AS hour, COUNT(1) AS data
        FROM schedule_job bj
        WHERE bj.exec_start_time is not null and bj.exec_start_time >= #{today}
        AND bj.type = #{type}
        AND bj.is_deleted = 0
        <if test="appType != null and appType != -1">
            AND bj.app_type = #{appType}
        </if>
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND bj.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1 ">
            AND bj.project_id = #{projectId}
        </if>
        <if test="tenantId!=null">
            AND bj.tenant_id = #{tenantId}
        </if>
        <if test="statusList != null and statusList.size()>0">
            AND bj.status IN
            <foreach collection="statusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY hour
    </select>

    <select id="generalScienceQuery" parameterType="com.dtstack.engine.api.pager.PageQuery" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        from (
        select
        <include refid="select_filed_all_bj"/>,'' as groupDate from schedule_job
        <include refid="select_where_batch_job"/>
        and period_type not in (0,1)
        union
        select
        <include refid="select_content_fragment"/>,
        left(bj.business_date,8) as groupDate
        from schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.period_type in (0,1)
        group by bj.task_id,groupDate
        )bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.app_type = ts.app_type
        <if test="model.pageQuery == true">
            <include refid="page_condition"/>
        </if>

    </select>

    <select id="listYesterdayJobs" resultType="java.util.HashMap">
        SELECT DATE_FORMAT(bj.exec_start_time, '%H') AS hour, COUNT(1) AS data
        FROM schedule_job bj
        WHERE bj.exec_start_time is not null and bj.exec_start_time >= #{yesterday}
        and bj.exec_start_time &lt; #{today}
        and bj.type = #{type}
        <if test="appType != null and appType != -1">
            AND bj.app_type = #{appType}
        </if>
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND bj.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1">
            AND bj.project_id = #{projectId}
        </if>
        <if test="tenantId!=null">
            AND bj.tenant_id = #{tenantId}
        </if>
        and bj.is_deleted = 0
        <if test="statusList != null and statusList.size()>0">
            and bj.status in
            <foreach collection="statusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY hour
    </select>

    <select id="listMonthJobs" resultType="java.util.HashMap">
        SELECT DATE_FORMAT(bj.exec_start_time, '%H') AS hour, COUNT(1) AS data
        FROM schedule_job bj
        WHERE bj.exec_start_time is not null and bj.exec_start_time >= #{lastMonth}
        and bj.type = #{type}
        <if test="appType != null and appType != -1">
            AND bj.app_type = #{appType}
        </if>
        <if test="dtuicTenantId != null and dtuicTenantId != -1">
            AND bj.dtuic_tenant_id = #{dtuicTenantId}
        </if>
        <if test="projectId!=null and projectId != -1 ">
            AND bj.project_id = #{projectId}
        </if>
        <if test="tenantId!=null">
            AND bj.tenant_id = #{tenantId}
        </if>
        and bj.is_deleted = 0
        <if test="statusList != null and statusList.size()>0">
            and bj.status in
            <foreach collection="statusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY hour
    </select>

    <select id="listJobByJobKeys" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        where job_key IN
        <foreach item="jobKey" index="index" collection="jobKeys" open="(" separator="," close=")">
            #{jobKey}
        </foreach>
        AND is_deleted = 0
    </select>

    <select id="listRuleJobByJobKeys" resultType="com.dtstack.engine.api.domain.ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        where job_key IN
        <foreach item="jobKey" index="index" collection="jobKeys" open="(" separator="," close=")">
            #{jobKey}
        </foreach>
        AND is_deleted = 0 AND task_rule = #{ruleCode}
    </select>

    <select id="listIdByTaskIdAndStatus" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        where bj.task_id = #{taskId}
        AND bj.status IN
        <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
            #{status}
        </foreach>
        AND bj.is_deleted = 0
        AND bj.app_type = #{appType}
        <if test="cycTime!=null">
            AND bj.cyc_time >= #{cycTime}
        </if>
        <if test="type!=null">
            AND bj.type = #{type}
        </if>
    </select>

    <select id="listJobIdByTaskIdAndStatus" resultType="java.lang.String">
        SELECT
        bj.job_id
        FROM schedule_job bj
        where  bj.task_id = #{taskId}
        AND bj.app_type =#{appType}
        AND bj.status IN
        <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
            #{status}
        </foreach>
        AND bj.is_deleted = 0
    </select>

    <select id="listTaskExeTimeInfo" resultType="java.util.HashMap">
        select bj.job_id AS jobId, bj.exec_start_time AS execStartTime, bj.exec_end_time AS execEndTime, bj.exec_time
        AS execTime
        from schedule_job bj
        where bj.task_id = #{taskId}
        AND bj.status IN
        <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
            #{status}
        </foreach>
        AND bj.is_deleted = 0 AND bj.is_deleted = 0
        AND bj.app_type = #{appType}
        order by ${pageQuery.orderBy} ${pageQuery.sort} limit #{pageQuery.start} , #{pageQuery.pageSize}
    </select>

    <select id="getByJobId" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>,bj.engine_log
        FROM schedule_job bj
        where job_id = #{jobId}
        <if test="isDeleted!=null">
            and is_deleted = #{isDeleted}
        </if>
    </select>

    <select id="getId" resultType="java.lang.Long">
        SELECT
        id
        FROM schedule_job bj
        where job_id = #{jobId} AND is_deleted = 0
    </select>

    <sql id="groupColumn">
         id,tenant_id,project_id,job_id,job_key,job_name,task_id,gmt_create,max(gmt_modified) as gmt_modified,create_user_id,is_deleted,type,is_restart,business_date,cyc_time,dependency_type,flow_job_id
      ,period_type ,left(business_date,8) as groupDate
    </sql>

    <select id="generalQuery" parameterType="com.dtstack.engine.api.pager.PageQuery" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        <include refid="select_where_fragment"/>
        <include refid="queryWorkFlow"/>
        <if test="model.jobIds != null and model.jobIds.size > 0">
            or bj.job_id in
            <foreach collection="model.jobIds" item="jobId" open="(" separator="," close=")">
                #{jobId}
            </foreach>
        </if>
        <if test="model.pageQuery == true">
            <include refid="page_condition"/>
        </if>

    </select>

    <select id="minOrHourJobQuery" parameterType="com.dtstack.engine.api.pager.PageQuery" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        from  schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.app_type = ts.app_type
        <include refid="queryWorkFlow"/>
        <if test="model.jobIds != null and model.jobIds.size > 0">
            or bj.job_id in
            <foreach collection="model.jobIds" item="jobId" open="(" separator="," close=")">
                #{jobId}
            </foreach>
        </if>
        <if test="model.ownerUserId != null">
            AND ts.owner_user_id = #{model.ownerUserId}
        </if>
        <if test="model.pageQuery == true">
            <include refid="page_condition"/>
        </if>
    </select>

    <select id="generalCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM schedule_job bj
        <include refid="select_where_fragment"/>
        <include refid="queryWorkFlow"/>
        <if test="model.jobIds != null and model.jobIds.size > 0">
            or bj.job_id in
            <foreach collection="model.jobIds" item="jobId" open="(" separator="," close=")">
                #{jobId}
            </foreach>
        </if>
        limit 1
    </select>

    <select id="generalQueryWithMinAndHour" parameterType="com.dtstack.engine.api.pager.PageQuery" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        from (
        select
        <include refid="select_filed_all_bj"/>
        ,'' as groupDate from schedule_job
        <include refid="select_where_batch_job"/>
        union
        select
        <include refid="select_content_fragment"/>,
        left(bj.business_date,8) as groupDate
        from schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.app_type = ts.app_type
        group by bj.task_id,groupDate
        )bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.app_type = ts.app_type
        <if test="model.pageQuery == true">
            <include refid="page_condition"/>
        </if>
    </select>

    <select id="generalCountWithMinAndHour" resultType="java.lang.Integer">
        SELECT COUNT(1)
        from (
        select <include refid="select_filed_all"/> ,'' as groupDate from schedule_job
        <include refid="select_where_batch_job"/>

        union
        select <include refid="select_filed_all"/> ,left(business_date,8) as groupDate from schedule_job
        <include refid="select_where_batch_job"/>
        group by task_id,groupDate
        )bj
        <include refid="select_where_batch_job"/>
        <if test="model.taskIds != null and model.taskIds.size > 0">
            or bj.task_id in
            <foreach collection="model.taskIds" item="taskId" open="(" separator="," close=")">
                #{taskId}
            </foreach>
        </if>
        limit 1
    </select>

    <select id="syncQueryJob" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
         FROM schedule_job bj
        <include refid="select_where_batch_job"/>
           AND is_deleted = 0
        ORDER BY id DESC
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
    </select>

    <select id="minOrHourJobCount" resultType="java.lang.Integer">
        select count(1)
        FROM schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        <include refid="queryWorkFlow"/>
        <if test="model.jobIds != null and model.jobIds.size > 0">
            or bj.job_id in
            <foreach collection="model.jobIds" item="jobId" open="(" separator="," close=")">
                #{jobId}
            </foreach>
        </if>
        <if test="model.ownerUserId != null">
            AND ts.owner_user_id = #{model.ownerUserId}
        </if>
    </select>

    <select id="getJobsStatusStatistics" resultType="StatusCount">
        SELECT status, COUNT(1) as count
        FROM schedule_job bj
        <include refid="select_where_batch_job"/>
        group by status
    </select>

    <sql id="queryWorkFlow">
        <if test="model.queryWorkFlowModel == 1">
            AND bj.flow_job_id = "0"
        </if>
        <if test="model.queryWorkFlowModel == 2">
            AND bj.flow_job_id != "0"
        </if>
        <if test="model.queryWorkFlowModel == 4">
            AND bj.task_type != 10
        </if>
    </sql>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO schedule_job
        (tenant_id,project_id,dtuic_tenant_id,app_type,job_id,job_key,job_name,task_id,gmt_create,gmt_modified,create_user_id,is_deleted,type,is_restart,business_date,cyc_time,dependency_type,flow_job_id,period_type,next_cyc_time,task_type,node_address,max_retry_num,version_id,fill_id,task_rule,business_type)
        VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.tenantId},#{item.projectId},#{item.dtuicTenantId},#{item.appType},#{item.jobId},#{item.jobKey},#{item.jobName},#{item.taskId},#{item.gmtCreate},#{item.gmtModified},#{item.createUserId},#{item.isDeleted},#{item.type},
            #{item.isRestart},#{item.businessDate},#{item.cycTime},#{item.dependencyType},#{item.flowJobId},#{item.periodType},#{item.nextCycTime},#{item.taskType},#{item.nodeAddress},#{item.maxRetryNum},#{item.versionId},#{item.fillId},#{item.taskRule},#{item.businessType})
        </foreach>
    </insert>

    <update id="update" parameterType="ScheduleJob">
        UPDATE
        schedule_job
        <include refid="update_fragment"/>
        WHERE job_id = #{jobId} AND is_deleted = 0
    </update>

    <update id="updateStatusWithExecTime" parameterType="ScheduleJob">
        UPDATE
        schedule_job
        SET
        <if test="execStartTime != null">
            exec_start_time = #{execStartTime},
        </if>
        <if test="execEndTime != null">
            exec_end_time = #{execEndTime},
        </if>
        <if test="execTime != null">
            exec_time = #{execTime},
        </if>
        status = #{status},gmt_modified=now()
        WHERE job_id = #{jobId} AND is_deleted = 0 AND app_type = #{appType}
    </update>

    <select id="listFillJobName" resultType="java.lang.String">
        SELECT DISTINCT substring_index(bj.job_name, '-', 1)
        FROM schedule_job bj
        <include refid="select_where_fragment_without_ts"/>
        <include refid="page_condition"/>
    </select>

    <select id="countFillJobNameDistinct" resultType="java.lang.Integer">
        SELECT count(DISTINCT bj.fill_id) FROM
        schedule_job bj
        LEFT JOIN schedule_task_shade ts ON bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
    </select>


    <select id="countFillJobNameDistinctWithOutTask" resultType="java.lang.Integer">
        SELECT count(DISTINCT bj.fill_id) FROM
        schedule_job bj
        <include refid="select_where_batch_job"/>
    </select>

    <select id="countFillJobName" resultType="java.lang.Integer">
        SELECT count(job_name)
        FROM schedule_job bj
        <include refid="select_where_fragment_without_ts"/>
    </select>

    <select id="listNeedStopFillDataJob" resultType = "ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE bj.job_name like #{fillDataJobName} AND bj.status IN
        <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
            #{status}
        </foreach>
        <if test="projectId !=null">
            and bj.project_id = #{projectId}
        </if>
        <if test="appType!=null">
            and bj.app_type = #{appType}
        </if>
        and bj.is_deleted = 0
    </select>

    <select id="listFillJobBizDate" resultType="java.lang.String">
        SELECT DISTINCT SUBSTR(business_date FROM 1 FOR 8)
        FROM schedule_job bj
        <include refid="select_where_fragment_without_ts"/>
    </select>

    <select id="listTaskExeInfo" resultType="java.util.HashMap">
        select a.exec_start_time as execStartTime, a.exec_end_time as execEndTime,  a.job_id as jobId, ifnull(a.type, 0) as type,
               ifnull(a.status, 0) as status, a.exec_time as execTime from schedule_job a
        where a.task_id = #{taskId} and a.project_id = #{projectId} and a.app_type = #{appType}
        order by a.exec_start_time desc limit #{limitNum};
    </select>

    <select id="getSubJobsAndStatusByFlowId" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE flow_job_id = #{jobId} AND is_deleted = 0 AND flow_job_id != '0'
    </select>

    <select id="countFillDataAllStatusByJobName" resultType="java.util.HashMap">
        SELECT
        bj.status*1 as status,count(bj.status) as count
        FROM
        schedule_job bj
        WHERE
        bj.is_deleted = 0
        AND bj.job_name LIKE '${jobName}%'
        <if test="jobIds != null and jobIds.size > 0">
            AND bj.job_id NOT IN
            <foreach collection="jobIds" item="jobId" index="index" open="(" separator="," close=")">
                #{jobId}
            </foreach>
        </if>
        AND bj.type = 1
        GROUP BY bj.status
    </select>

    <select id="getWorkFlowSubJobId" resultType="ScheduleJob">
        SELECT <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE flow_job_id in
        <foreach item="id" index="index" collection="jobIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND flow_job_id != '0'
        AND is_deleted = 0
    </select>

    <select id="getSubJobsByFlowIds" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE flow_job_id in
        <foreach item="flowId" index="index" collection="flowIds" open="(" separator="," close=")">
            #{flowId}
        </foreach>
        AND bj.is_deleted = 0
    </select>

    <select id="getTaskTypeByJobId" resultType="java.lang.Integer">
        SELECT
            bj.task_type
        FROM
            schedule_job bj
            LEFT JOIN schedule_task_shade bt ON bj.task_id = bt.task_id
        WHERE
            bj.job_id = #{jobId} and bj.is_deleted = 0 and bt.is_deleted = 0
    </select>

    <select id="getFlowJobIdsByJobName" resultType="java.lang.String">
        SELECT
			flow_job_id
			FROM
			schedule_job bj
			WHERE
			bj.is_deleted = 0
			AND bj.type = 1
			AND bj.job_name LIKE '${jobName}%'
			AND bj.flow_job_id != '0'
			GROUP BY bj.flow_job_id
    </select>

    <select id="countByFillDataAllStatus" resultType="java.util.HashMap">
        SELECT
        bj.status*1 as status,
        count(bj.status) as count,
        bj.fill_id as fillId
        FROM
        schedule_job bj
        where
        bj.is_deleted = 0
        AND bj.task_type != 10
        AND bj.type = 1
        AND bj.app_type = #{appType}
        AND bj.fill_id in
        <foreach collection="fillIdList" index="index" item="fillId" open="(" close=")" separator=",">
            #{fillId}
        </foreach>
        group by bj.fill_id,bj.status
    </select>

    <select id="listFillIdList" resultType="java.lang.String">
        SELECT DISTINCT
        bj.fill_id
        FROM schedule_job bj
        <include refid="select_where_fragment"/>
        <include refid="page_condition"/>
    </select>


    <select id="listFillIdListWithOutTask" resultType="java.lang.String">
        SELECT DISTINCT
        bj.fill_id
        FROM schedule_job bj
        <include refid="select_where_batch_job"/>
        and fill_id is NOT null
        <include refid="page_condition"/>
    </select>

    <select id="queryFillData" resultType="ScheduleJob">
        select
        <include refid="select_content_fragment"/>
        from
        schedule_job bj
        left join schedule_task_shade ts on bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.fill_id = (
        SELECT id from schedule_fill_data_job WHERE job_name = #{model.fillDataJobName})
        <include refid="queryWorkFlow"/>
        <if test="model.ownerUserId != null">
            AND ts.owner_user_id = #{model.ownerUserId}
        </if>
        <if test="model.appType != null">
            and bj.app_type =#{model.appType} and ts.app_type = #{model.appType}
        </if>
        <include refid="page_condition"/>
    </select>

    <select id="countByFillData" resultType="java.lang.Integer">
        select count(bj.id)
        from schedule_job bj
        left join schedule_task_shade ts on bj.task_id = ts.task_id
        <include refid="select_where_fragment"/>
        and bj.fill_id  = (
        SELECT id from schedule_fill_data_job WHERE job_name = #{model.fillDataJobName})
        <include refid="queryWorkFlow"/>
        <if test="model.ownerUserId != null">
            AND ts.owner_user_id = #{model.ownerUserId}
        </if>
        <if test="model.appType != null">
            and bj.app_type =#{model.appType} and ts.app_type = #{model.appType}
        </if>
    </select>

    <select id="getWorkFlowTopNode" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM
        schedule_job bj
        WHERE
        bj.job_key IN ( SELECT job_key FROM schedule_job_job WHERE parent_job_key = ( SELECT job_key FROM schedule_job
        WHERE job_id = #{jobId} ) )
        AND bj.flow_job_id != '0'
    </select>

    <select id="listByJobIdList" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        where job_id in
        <foreach collection="jobIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <if test="projectId != null"> and project_id = #{projectId} </if>
    </select>

    <select id="listJobIdByTaskType" resultType="java.lang.String">
        SELECT
        job_id
        from schedule_job
        where task_type = #{taskType} and is_deleted = 0
    </select>

    <select id="getStatusByJobId" resultType="java.lang.Integer">
        SELECT
            status
        FROM schedule_job
        WHERE job_id = #{jobId} AND is_deleted = 0
    </select>

    <select id="countTasksByCycTimeTypeAndAddress" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM schedule_job
        WHERE node_address = #{nodeAddress}
        AND type = #{scheduleType}
        AND task_type != 10
        <if test="cycStartTime != null">
            AND cyc_time &gt;= #{cycStartTime}
        </if>
        <if test="cycEndTime != null">
            AND cyc_time &lt; #{cycEndTime}
        </if>
        AND (status = 0 or (status = 10 and task_type in (10, 14)))
        AND is_deleted = 0
    </select>

    <select id="listSimpleJobByStatusAddress" resultType="SimpleScheduleJobPO">
        SELECT id, job_id, type, phase_status
        FROM schedule_job
        WHERE id > #{startId} AND (node_address = #{nodeAddress} or node_address is null)
        <if test="statuses != null">
            AND status IN
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        AND is_deleted = 0
        order by id asc limit 500
    </select>

    <update id="updateNodeAddress">
        UPDATE
        schedule_job
        set node_address = #{nodeAddress}
        WHERE id IN
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <update id="updateJobStatusByIds">
        UPDATE schedule_job
        SET status = #{status},gmt_modified = now()
        WHERE is_deleted=0
        AND job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0;
    </update>

    <update id="stopUnsubmitJob">
        UPDATE  schedule_job
        set status = #{status} where status = 0
        and job_name like #{likeName}
        <if test="projectId!=null">
            and project_id = #{projectId}
        </if>
        <if test="appType !=null">
            and app_type = #{appType}
        </if>
    </update>

    <select id="getByTaskIdAndStatusOrderByIdLimit" resultType="ScheduleJob">
        SELECT
            <include refid="select_filed_all"/>
        FROM schedule_job
        WHERE task_id = #{taskId} and  #{time} > STR_TO_DATE(cyc_time,"%Y%m%d%H%i%s")
          and status = #{status}
          and is_deleted = 0
          and app_type = #{appType}
        order by cyc_time desc limit 1
    </select>

    <select id="listExecJobByCycTimeTypeAddress" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE
        node_address = #{nodeAddress}
        <if test="isEq">
            AND id >= #{startId}
        </if>
        <if test="!isEq">
            AND id > #{startId}
        </if>
        <if test="scheduleType != null">
            AND type = #{scheduleType}
        </if>
        <if test="cycStartTime != null">
            AND cyc_time &gt;= #{cycStartTime}
        </if>
        <if test="cycEndTime != null">
            AND cyc_time &lt; #{cycEndTime}
        </if>
        <if test="lastTime != null">
            AND gmt_modified &gt;= #{lastTime}
        </if>
        <if test="isRestart != null">
            AND is_restart = #{isRestart}
        </if>
        AND (status = 0 or ((status = 10 or status=4) and task_type in (10, 14,27)))
        AND is_deleted = 0
        AND `phase_status` = #{phaseStatus}
        order by id, cyc_time asc limit 500
    </select>

    <update id="updateJobInfoByJobId">
        UPDATE schedule_job
        <set>
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="execStartTime != null">
                exec_start_time = #{execStartTime},
            </if>
            <if test="execEndTime != null">
                exec_end_time = #{execEndTime},
                exec_time = timestampdiff(SECOND, exec_start_time, now()),
            </if>
            <if test="retryNum!=null">
                retry_num = #{retryNum},
            </if>
            gmt_modified = now()
        </set>
        WHERE job_id = #{jobId}
        <if test="stopStatuses!=null and stopStatuses.size() > 0">
            AND status NOT IN
            <foreach item="stopStatus" index="index" collection="stopStatuses" open="(" separator="," close=")">
                #{stopStatus}
            </foreach>
        </if>
        AND is_deleted=0
    </update>


    <update id="updateStatusByJobId">
        UPDATE schedule_job
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="logInfo != null">
                log_info = #{logInfo},
            </if>
            <if test="versionId != null">
                version_id = #{versionId},
            </if>
            <if test="execStartTime != null">
                exec_start_time = #{execStartTime},
            </if>
            <if test="execEndTime != null">
                exec_end_time = #{execEndTime},
            </if>
            gmt_modified = now()
        </set>
        WHERE job_id = #{jobId}
        AND is_deleted=0
    </update>

    <update id="updateNullTime">
        update
            schedule_job
        set
            exec_start_time = null ,
            exec_end_time = null
        WHERE job_id = #{jobId}
          AND is_deleted=0
    </update>

    <select id="listByBusinessDateAndPeriodTypeAndStatusList" resultType="ScheduleJob">
        select
        <include refid="select_content_fragment"/>
        from schedule_job bj
        LEFT JOIN schedule_task_shade ts on ts.task_id = bj.task_id
        WHERE
        ts.flow_id = 0
        <if test="model.taskPeriodId != null and model.taskPeriodId.size()>0">
            AND bj.period_type IN
            <foreach collection="model.taskPeriodId" separator="," index="index" item="item" open="(" close=")">
                ${item}
            </foreach>
        </if>
        <if test="model.jobStatuses != null and model.jobStatuses.size() > 0">
            AND bj.status IN
            <foreach item="status" index="index" collection="model.jobStatuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <if test="model.bizStartDay != null and model.bizEndDay != null">
            AND bj.business_date &gt;= ${model.bizStartDay} and bj.business_date &lt; ${model.bizEndDay}
        </if>
        AND bj.tenant_id = ${model.tenantId} AND bj.project_id = ${model.projectId} AND bj.is_deleted = 0
        AND bj.type = 0
    </select>

    <select id="listJobByCyctimeAndJobName" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE cyc_time like '${preCycTime}%'
        AND job_name LIKE '${preJobName}%'
        AND is_deleted = 0
        <if test="scheduleType != null">
            AND type = #{scheduleType}
        </if>
    </select>

    <select id="listJobByCyctimeAndJobNameBatch" resultType="ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE id > #{startId}
        AND cyc_time LIKE '${preCycTime}%'
        AND job_name LIKE '${preJobName}%'
        AND is_deleted = 0
        <if test="scheduleType != null">
            AND type = #{scheduleType}
        </if>
        limit #{batchJobSize}
    </select>

    <select id="countJobByCyctimeAndJobName" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM schedule_job bj
        WHERE cyc_time like '${preCycTime}%'
        AND job_name LIKE '${preJobName}%'
        AND is_deleted = 0
        <if test="scheduleType != null">
            AND type = #{scheduleType}
        </if>
    </select>

    <delete id="deleteByJobKey">
        delete from schedule_job
        where job_key in
        <foreach collection="jobKeyList" item="jobKey" open="(" separator="," close=")">
            #{jobKey}
        </foreach>
    </delete>

    <select id="listJobsByTaskIdAndApptype" resultType="ScheduleJob">
        select
        <include refid="select_content_fragment"/>
        from schedule_job bj
        where bj.task_id in
        <foreach collection="taskIds" item="taskId" close=")" open="(" separator="," >
            #{taskId}
        </foreach>
        and bj.app_type = #{appType}
    </select>


    <select id="getAllNodeAddress" resultType="java.lang.String">
        SELECT DISTINCT(node_address) as nodeAddress
        FROM schedule_job
        WHERE is_deleted = 0
    </select>


    <insert id="insert" parameterType="ScheduleJob" useGeneratedKeys="true" keyProperty="id">
	   INSERT INTO schedule_job
        (gmt_create, gmt_modified, tenant_id, project_id, dtuic_tenant_id, app_type, job_id, job_key, job_name, task_id,
        create_user_id, is_deleted, `type`, is_restart, business_date, cyc_time, dependency_type, flow_job_id,
        status, task_type, max_retry_num, node_address, version_id, compute_type,period_type,business_type)
	   VALUES
	   (now(), now(), #{tenantId}, #{projectId}, #{dtuicTenantId}, #{appType}, #{jobId}, #{jobKey}, #{jobName}, #{taskId},
	   #{createUserId}, #{isDeleted}, #{type}, #{isRestart}, #{businessDate}, #{cycTime}, #{dependencyType}, #{flowJobId},
	   #{status}, #{taskType}, #{maxRetryNum}, #{nodeAddress}, #{versionId}, #{computeType},#{periodType},#{businessType})
    </insert>


    <update id="jobFail">
        update schedule_job set exec_start_time = IFNULL(exec_start_time,now()), exec_end_time=now(), exec_time=timestampdiff(SECOND, exec_start_time, now()),gmt_modified=now(),status=#{status}, log_info = #{logInfo} where job_id=#{jobId};
    </update>

    <update id="updateJobStatus">
	   update schedule_job set gmt_modified=now(),status=#{status} where job_id=#{jobId};
   </update>

    <update id="updateTaskStatusNotStopped">
        update schedule_job set gmt_modified=now(),status=#{status} where job_id=#{jobId} and status not in
        <foreach item="stopStatus" index="index" collection="stopStatuses" open="(" separator="," close=")">
            #{stopStatus}
        </foreach>
    </update>

    <update id="updateJobPluginId">
        update schedule_job set gmt_modified=now(), plugin_info_id=#{pluginId} where job_id=#{jobId};
    </update>

    <update id="updateJobSubmitSuccess">
	   update schedule_job
	   set log_info = #{submitLog}, engine_job_id=#{engineId}, application_id=#{appId},
	    gmt_modified=now(), exec_start_time=now(),job_extra_info = #{jobGraph}
	   where job_id=#{jobId};
   </update>

    <update id="updateJobStatusAndExecTime">
	   update schedule_job set gmt_modified=now(), exec_end_time=now(), status=#{status}, exec_time=timestampdiff(SECOND, exec_start_time, now()) where job_id=#{jobId};
   </update>

    <select id="getRdosJobByJobId" resultType="ScheduleJob">
       select <include refid="select_filed_all"/> from schedule_job where job_id=#{jobId} and is_deleted=0 limit 1;
   </select>

    <select id="getRdosJobByJobIds" resultType="ScheduleJob">
        select id,job_id, engine_job_id,application_id,plugin_info_id,status,engine_log,log_info,exec_start_time,exec_end_time,exec_time,retry_num,retry_task_params,gmt_create,gmt_modified,is_deleted,compute_type,dtuic_tenant_id
        from schedule_job
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0;
    </select>

    <update id="updateEngineLog">
        update schedule_job set engine_log = #{engineLog},gmt_modified=now() where job_id = #{jobId}
    </update>

    <update id="updateRetryTaskParams">
        update schedule_job set retry_task_params = #{retryTaskParams},gmt_modified=now() where job_id = #{jobId}
    </update>

    <select id="getByName" parameterType="java.lang.String" resultType="ScheduleJob">
        select <include refid="select_filed_all"/> from schedule_job where job_name = #{jobName} and is_deleted=0 LIMIT 1;
    </select>

    <update id="updateRetryNum">
	   update schedule_job set retry_num=#{retryNum}, gmt_modified=now() where job_id=#{jobId};
   </update>

    <select id="getJobIdsByStatus" resultType="java.lang.String">
        select job_id from schedule_job
        where status = #{status}
        <if test="computeType != null">
            and compute_type = #{computeType}
        </if>
        and is_deleted=0
    </select>

    <select id="listJobStatus" resultType="ScheduleJob">
        select <include refid="select_content_fragment"/>
        from schedule_job bj
        where bj.gmt_modified &gt;= #{time} and bj.compute_type = #{computeType}
        <if test="appType != null">
            and bj.app_type = #{appType}
        </if>
        and bj.is_deleted=0 and bj.status != 0
    </select>

    <select id="getListMinId" resultType="java.lang.Long">
        SELECT
            min(id)
        FROM schedule_job bj
        WHERE node_address = #{nodeAddress}
        <if test="scheduleType != null">
            AND type = #{scheduleType}
        </if>
        <if test="cycStartTime != null">
            AND cyc_time &gt;= #{cycStartTime}
        </if>
        <if test="cycEndTime != null">
            AND cyc_time &lt; #{cycEndTime}
        </if>
        <if test="isRestart != null">
            AND is_restart = #{isRestart}
        </if>
        AND (status = 0 or ((status = 10 or status=4) and task_type in (10, 14, 27)))
        AND is_deleted = 0
        AND `phase_status` = #{phaseStatus}
    </select>

    <update id="updateJobStatusByJobIds">
        update schedule_job
        set gmt_modified=now(), status=#{status}
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0;
    </update>
    <update id="updatePhaseStatusById">
        update `schedule_job`
        set `phase_status`=#{update}
        where `id` = #{id}
        and `phase_status` = #{original}
        and `is_deleted`=0;
    </update>
    <update id="updateListPhaseStatus">
        update `schedule_job`
        set `phase_status`=#{update}
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and `is_deleted`=0;
    </update>

    <update id="updateJobStatusAndPhaseStatus">
        update schedule_job set gmt_modified=now(),status=#{status},`phase_status` = #{phaseStatus},
        <if test="isRestart!=null">
            `is_restart` = #{isRestart},
        </if>
        application_id = null, engine_job_id = null, engine_log = null, log_info = null,
        retry_task_params = null, exec_end_time = null, exec_start_time = null, exec_time = 0, gmt_modified=now(),retry_num = 0
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and `is_deleted`=0;
    </update>

    <update id="updateStatusByJobIdEqualsStatus">
        UPDATE schedule_job
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            gmt_modified = now(),
            exec_start_time = now()
        </set>
        WHERE job_id = #{jobId} AND status = #{status1}
        AND is_deleted=0
    </update>
    <update id="updateLogInfoByJobId">
        UPDATE schedule_job
        SET
            log_info = #{msg},
            gmt_modified = now()
        WHERE job_id = #{jobId}
        AND is_deleted=0
    </update>

    <select id="getJobExtraInfo" resultType="java.lang.String">
        select job_extra_info from schedule_job where job_id = #{jobId}
    </select>

    <update id="updateJobStatusAndPhaseStatusByIds">
        update schedule_job set
            `gmt_modified`=now(),
            `status`=#{status},
            `phase_status` = #{phaseStatus},
            `gmt_modified`=now()
        where job_id IN
        <foreach collection="jobIds" item="jobId" separator="," close=")" open="(" >
            #{jobId}
        </foreach>
    </update>

    <select id="getJobGraph" resultType="java.lang.String">
        select job_graph from schedule_job where job_id = #{jobId}
    </select>

    <select id="getLastScheduleJob" resultType="ScheduleJob">
        select
        <include refid="select_content_fragment"/>
        from schedule_job bj
        where bj.task_id = #{taskId}
        and bj.id &lt; ${id}
        order by id desc
        limit 1;
    </select>

    <select id="listJobByStatusAddressAndPhaseStatus"
            resultType="com.dtstack.engine.api.domain.po.SimpleScheduleJobPO">
        SELECT id, job_id, type, phase_status
        FROM schedule_job
        WHERE id > #{startId} AND (node_address = #{nodeAddress} or node_address is null)
        <if test="statuses != null">
            AND status IN
            <foreach item="status" index="index" collection="statuses" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        AND is_deleted = 0
        AND `phase_status` = #{phaseStatus}
        order by id asc limit 500
    </select>

    <select id="getSubJobsAndStatusByFlowIdLimit" resultType="com.dtstack.engine.api.domain.ScheduleJob">
        SELECT
        <include refid="select_content_fragment"/>
        FROM schedule_job bj
        WHERE flow_job_id = #{jobId} AND is_deleted = 0 order by cyc_time desc LIMIT 1
    </select>


</mapper>
