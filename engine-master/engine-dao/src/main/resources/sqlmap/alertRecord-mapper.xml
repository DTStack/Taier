<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.dao.AlertRecordDao">

    <sql id="filed">
        id`, `alert_channel_id`, `alert_gate_type`,
        `alert_content_id`, `tenant_id`, `app_type`,
        `user_id`, `read_status`, `title`,
        `status`, `job_id`, `alert_record_status`,
        `alert_record_send_status`, `failure_reason`, `is_deleted`,
        `node_address`, `send_time`, `send_end_time`,
        `gmt_create`, `gmt_modified`,`context`
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into alert_record (
        `alert_channel_id`,
        `alert_gate_type`,
        `alert_content_id`,
        `tenant_id`,
        `app_type`,
        `user_id`,
        `read_status`,
        `title`,
        `status`,
        `job_id`,
        `alert_record_status`,
        `alert_record_send_status`,
        `failure_reason`,
        `is_deleted`,
        `node_address`,
        `send_time`,
        `send_end_time`,
        `gmt_create`,
        `gmt_modified`,
        `context`,
        `read_id`
        )
        values
        <foreach collection="records" item="record" separator=",">
            (
            #{record.alertChannelId},
            #{record.alertGateType},
            #{record.alertContentId},
            #{record.tenantId},
            #{record.appType},
            #{record.userId},
            #{record.readStatus},
            #{record.title},
            #{record.status},
            #{record.jobId},
            #{record.alertRecordStatus},
            #{record.alertRecordSendStatus},
            #{record.failureReason},
            #{record.isDeleted},
            #{record.nodeAddress},
            #{record.sendTime},
            #{record.sendEndTime},
            #{record.gmtCreate},
            #{record.gmtModified},
            #{record.context},
            #{record.readId}
            )
        </foreach>
    </insert>

    <update id="updateByMapAndIds">
        update alert_record
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.alertChannelId != null">
                `alert_channel_id` = #{record.alertChannelId,jdbcType=BIGINT},
            </if>
            <if test="record.alertGateType != null">
                `alert_gate_type` = #{record.alertGateType,jdbcType=SMALLINT},
            </if>
            <if test="record.alertContentId != null">
                `alert_content_id` = #{record.alertContentId,jdbcType=INTEGER},
            </if>
            <if test="record.tenantId != null">
                `tenant_id` = #{record.tenantId,jdbcType=INTEGER},
            </if>
            <if test="record.appType != null">
                `app_type` = #{record.appType,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                `user_id` = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.readStatus != null">
                `read_status` = #{record.readStatus,jdbcType=BIT},
            </if>
            <if test="record.title != null">
                `title` = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=BIT},
            </if>
            <if test="record.jobId != null">
                `job_id` = #{record.jobId,jdbcType=VARCHAR},
            </if>
            <if test="record.alertRecordStatus != null">
                `alert_record_status` = #{record.alertRecordStatus,jdbcType=TINYINT},
            </if>
            <if test="record.alertRecordSendStatus != null">
                `alert_record_send_status` = #{record.alertRecordSendStatus,jdbcType=TINYINT},
            </if>
            <if test="record.failureReason != null">
                `failure_reason` = #{record.failureReason,jdbcType=VARCHAR},
            </if>
            <if test="record.isDeleted != null">
                `is_deleted` = #{record.isDeleted,jdbcType=BIT},
            </if>
            <if test="record.nodeAddress != null">
                `node_address` = #{record.nodeAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.sendTime != null">
                `send_time` = #{record.sendTime,jdbcType=VARCHAR},
            </if>
            <if test="record.sendEndTime != null">
                `send_end_time` = #{record.sendEndTime,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null">
                `gmt_create` = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                `gmt_modified` = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.context != null">
                `send_content` = #{record.context},
            </if>
        </set>
        WHERE
            <foreach collection="params.entrySet()" index="key" item="value" separator="AND" >
                ${key} = #{value}
            </foreach>
            <if test="recordIds!=null">
                AND `id` IN
                <foreach collection="recordIds" item="recordId" separator="," close=")" open="(" >
                    ${recordId}
                </foreach>
            </if>
    </update>

    <update id="updateByMap" parameterType="com.dtstack.engine.domain.AlertRecord">
        update alert_record
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.alertChannelId != null">
                `alert_channel_id` = #{record.alertChannelId,jdbcType=BIGINT},
            </if>
            <if test="record.alertGateType != null">
                `alert_gate_type` = #{record.alertGateType,jdbcType=SMALLINT},
            </if>
            <if test="record.alertContentId != null">
                `alert_content_id` = #{record.alertContentId,jdbcType=INTEGER},
            </if>
            <if test="record.tenantId != null">
                `tenant_id` = #{record.tenantId,jdbcType=INTEGER},
            </if>
            <if test="record.appType != null">
                `app_type` = #{record.appType,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                `user_id` = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.readStatus != null">
                `read_status` = #{record.readStatus,jdbcType=BIT},
            </if>
            <if test="record.title != null">
                `title` = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=BIT},
            </if>
            <if test="record.jobId != null">
                `job_id` = #{record.jobId,jdbcType=VARCHAR},
            </if>
            <if test="record.alertRecordStatus != null">
                `alert_record_status` = #{record.alertRecordStatus,jdbcType=TINYINT},
            </if>
            <if test="record.alertRecordSendStatus != null">
                `alert_record_send_status` = #{record.alertRecordSendStatus,jdbcType=TINYINT},
            </if>
            <if test="record.failureReason != null">
                `failure_reason` = #{record.failureReason,jdbcType=VARCHAR},
            </if>
            <if test="record.isDeleted != null">
                `is_deleted` = #{record.isDeleted,jdbcType=BIT},
            </if>
            <if test="record.nodeAddress != null">
                `node_address` = #{record.nodeAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.sendTime != null">
                `send_time` = #{record.sendTime,jdbcType=VARCHAR},
            </if>
            <if test="record.sendEndTime != null">
                `send_end_time` = #{record.sendEndTime,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null">
                `gmt_create` = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                `gmt_modified` = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.context != null">
                `context` = #{record.context},
            </if>
        </set>
        WHERE
        <foreach collection="params.entrySet()"  index="key" item="value" separator="AND" >
            ${key} = #{value}
        </foreach>

    </update>

    <select id="selectQuery" resultType="com.dtstack.engine.domain.AlertRecord">
        SELECT
        `id`, `tenant_id`,`app_type`,`alert_content_id`, `user_id`, `read_status`,`title`,`status`,`gmt_create`, `gmt_modified`,`context`,`read_id`
        FROM alert_record
        WHERE
        <trim suffixOverrides="AND">
            <if test="record.id != null">
                `id` = #{record.id} AND
            </if>
            <if test="record.alertChannelId != null">
                `alert_channel_id` = #{record.alertChannelId} AND
            </if>
            <if test="record.alertGateType != null">
                `alert_gate_type` = #{record.alertGateType} AND
            </if>
            <if test="record.alertContentId != null">
                `alert_content_id` = #{record.alertContentId} AND
            </if>
            <if test="record.tenantId != null">
                `tenant_id` = #{record.tenantId} AND
            </if>
            <if test="record.appType != null">
                `app_type` = #{record.appType} AND
            </if>
            <if test="record.userId != null">
                `user_id` = #{record.userId} AND
            </if>
            <if test="record.readStatus != null">
                `read_status` = #{record.readStatus} AND
            </if>
            <if test="record.title != null">
                `title` = #{record.title} AND
            </if>
            <if test="record.status != null">
                `status` = #{record.status} AND
            </if>
            <if test="record.jobId != null">
                `job_id` = #{record.jobId} AND
            </if>
            <if test="record.alertRecordStatus != null">
                `alert_record_status` = #{record.alertRecordStatus} AND
            </if>
            <if test="record.alertRecordSendStatus != null">
                `alert_record_send_status` = #{record.alertRecordSendStatus} AND
            </if>
            <if test="record.failureReason != null">
                `failure_reason` = #{record.failureReason} AND
            </if>
            <if test="record.isDeleted != null">
                `is_deleted` = #{record.isDeleted} AND
            </if>
            <if test="record.nodeAddress != null">
                `node_address` = #{record.nodeAddress} AND
            </if>
            <if test="record.sendTime != null">
                `send_time` = #{record.sendTime} AND
            </if>
            <if test="record.sendEndTime != null">
                `send_end_time` = #{record.sendEndTime} AND
            </if>
            <if test="record.gmtCreate != null">
                `gmt_create` = #{record.gmtCreate} AND
            </if>
            <if test="record.gmtModified != null">
                `gmt_modified` = #{record.gmtModified} AND
            </if>
            <if test="record.context != null">
                `context` = #{record.context} AND
            </if>
        </trim>
        ORDER BY id DESC
    </select>

    <select id="findMinIdByStatus" resultType="java.lang.Long">
        SELECT min(id)
        FROM alert_record
        WHERE
        `gmt_create` &gt;= FROM_UNIXTIME(#{startDate}/1000)
        AND `gmt_create` &lt;= FROM_UNIXTIME(#{endDate}/1000)
        AND `node_address` = #{nodeAddress}
        AND `alert_record_status`=#{sendStatus}
        AND `is_deleted`=0
    </select>

    <select id="findListByStatus" resultType="com.dtstack.engine.domain.AlertRecord">
        SELECT
            `id`,`context`
        FROM alert_record
        WHERE
        `node_address` = #{nodeAddress}
        AND `is_deleted`=0
        <if test="sendStatusList!=null and sendStatusList.size()>0">
            AND `alert_record_status`IN
            <foreach collection="sendStatusList" separator="," open="(" close=")" item="sendStatus">
                #{sendStatus}
            </foreach>
        </if>
        <if test="minId!=null">
            AND `id` > #{minId}
        </if>
        <if test="startDate!=null" >
            AND `gmt_create` &gt;= FROM_UNIXTIME(#{startDate}/1000)
        </if>
        <if test="endDate!=null">
            AND `gmt_create` &lt;= FROM_UNIXTIME(#{endDate}/1000)
        </if>
        <if test="alertRecordSendStatus != null">
            AND `alert_record_send_status` = #{alertRecordSendStatus}
        </if>
        order by id asc
        LIMIT 500
    </select>

</mapper>