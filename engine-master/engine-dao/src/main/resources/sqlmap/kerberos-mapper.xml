<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.dao.KerberosDao">

    <sql id="select_content_fragment">
      id,cluster_id,open_kerberos,name,remote_path,principal,gmt_create,gmt_modified,is_deleted,component_type,krb_name,principals,merge_krb_content
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="clusterId != null">
                cluster_id = #{clusterId},
            </if>
            <if test="openKerberos != null">
                open_kerberos = #{openKerberos},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="remotePath != null">
                remote_path = #{remotePath},
            </if>
            <if test="principal != null">
                principal = #{principal},
            </if>
            <if test="principals != null">
                principals = #{principals},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="componentType != null">
                component_type = #{componentType},
            </if>
            <if test="krbName != null">
                krb_name = #{krbName},
            </if>
            <if test="mergeKrbContent != null">
                merge_krb_content = #{mergeKrbContent},
            </if>
            gmt_modified =now()
        </set>
    </sql>

    <select id="getByComponentType" resultType="KerberosConfig">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_kerberos
        WHERE cluster_id = #{clusterId} and is_deleted = 0
        and component_type = #{componentType}
        <if test="componentVersion != null">
            and component_version = #{componentVersion}
        </if>
        limit 1
    </select>

    <select id="getByClusters" resultType="KerberosConfig">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_kerberos
        WHERE cluster_id = #{clusterId} and is_deleted = 0
    </select>

    <insert id="insert" parameterType="KerberosConfig" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO console_kerberos(cluster_id,open_kerberos,name,remote_path,principal,principals,component_type,krb_name)
        VALUES (#{clusterId},#{openKerberos},#{name},#{remotePath},#{principal},#{principals},#{componentType},#{krbName})
    </insert>


    <update id="update">
        UPDATE console_kerberos
        <include refid="update_fragment"/>
        where id = #{id} and is_deleted = 0
    </update>


    <update id="delete">
        UPDATE console_kerberos set is_deleted = 1
        where cluster_id = #{clusterId} and component_type = #{componentType}
    </update>

    <update id="deleteByComponentId">
        UPDATE console_kerberos SET is_deleted = 1
        WHERE cluster_id =  (SELECT cluster_id from console_engine cn WHERE cn.id =(SELECT engine_id from console_component WHERE id = #{componentId}))
        AND component_type = (SELECT component_type_code from console_component WHERE id = #{componentId})
    </update>

    <select id="listAll" resultType="KerberosConfig">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_kerberos
        WHERE is_deleted = 0
    </select>
</mapper>
