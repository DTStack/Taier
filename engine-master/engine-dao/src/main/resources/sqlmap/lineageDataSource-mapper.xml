<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.lineage.dao.LineageDataSourceDao">

    <sql id="select_content_fragment">
      id,dt_uic_tenant_id,real_source_id,source_name,source_key,app_type,source_type,data_json,kerberos_conf,open_kerberos,app_source_id,inner_source,component_id,gmt_create,gmt_modified,is_deleted
    </sql>

    <sql id="select_where_fragment">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="id != null and id > 0">
                AND id = #{id}
            </if>
            <if test="appType !=null">
                AND app_type = #{appType}
            </if>
            <if test="isDeleted !=null">
                AND is_deleted = #{isDeleted}
            </if>
            <if test="sourceType !=null">
                AND source_type = #{sourceType}
            </if>
            <if test="sourceName !=null">
                AND source_name = #{sourceName}
            </if>
            <if test="dtUicTenantId !=null">
                AND dt_uic_tenant_id = #{dtUicTenantId}
            </if>
            <if test="appType !=null">
                AND app_type = #{appType}
            </if>
            <if test="sourceKey !=null">
                AND source_key like concat( '%',#{sourceKey},'%')
            </if>
        </trim>
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="sourceName!=null">
                source_name = #{sourceName},
            </if>
            <if test="sourceKey!=null">
                source_key = #{sourceKey},
            </if>
            <if test="appType!=null">
                app_type = #{appType},
            </if>
            <if test="dataJson!=null">
                data_json = #{dataJson},
            </if>
            <if test="sourceType!=null">
                source_type = #{sourceType},
            </if>
            <if test="appSourceId!=null">
                app_source_id = #{appSourceId},
            </if>
            <if test="kerberosConf!=null">
                kerberos_conf = #{kerberosConf},
            </if>
            <if test="openKerberos!=null">
                open_kerberos = #{openKerberos},
            </if>
            <if test="innerSource!=null">
                inner_source = #{innerSource},
            </if>
            <if test="componentId!=null">
                component_id = #{componentId},
            </if>
            <if test="isDeleted!=null">
                is_deleted = #{isDeleted},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified},
            </if>
        </set>
    </sql>

    <insert id="insertDataSource" parameterType="com.dtstack.engine.api.domain.LineageDataSource" useGeneratedKeys="true" keyProperty="id">
        insert into lineage_data_source(dt_uic_tenant_id,real_source_id,source_name,source_key,app_type,source_type,data_json,kerberos_conf,open_kerberos,app_source_id,inner_source,component_id)
        values
         (#{dtUicTenantId},#{realSourceId},#{sourceName},#{sourceKey},#{appType},#{sourceType},#{dataJson},#{kerberosConf},#{openKerberos},#{appSourceId},#{innerSource},#{componentId})
    </insert>

    <update id="updateDataSource" parameterType="com.dtstack.engine.api.domain.LineageDataSource">
        update lineage_data_source
        <include refid="update_fragment"/>
        where id = #{id}
    </update>

    <delete id="deleteDataSource">
        update lineage_data_source set is_deleted = 1 where id = #{id}
    </delete>

    <select id="getOne" resultType="com.dtstack.engine.api.domain.LineageDataSource">
        select
        <include refid="select_content_fragment"/>
        from lineage_data_source
        where id = #{id} and is_deleted = 0
    </select>

    <select id="generalCount" resultType="java.lang.Integer">

       select
       count(id)
       from  lineage_data_source
       <include refid="select_where_fragment" />
    </select>


    <select id="generalQuery" resultType="com.dtstack.engine.api.domain.LineageDataSource">
        SELECT
        <include refid="select_content_fragment"/>
        FROM lineage_data_source
        <include refid="select_where_fragment"/>
        <if test="orderBy != null and sort != null">
            order by ${orderBy} ${sort}
        </if>
        <if test="orderBy != null and sort == null">
            order by ${orderBy} desc
        </if>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </select>

    <select id="getOneByAppTypeAndId" resultType="com.dtstack.engine.api.domain.LineageDataSource">

        select
        <include refid="select_content_fragment" />
        from lineage_data_source
        where app_type = #{appType}
        and id = #{sourceId}
        and is_deleted = 0
    </select>


    <select id="getDataSourceByParams" resultType="com.dtstack.engine.api.domain.LineageDataSource">

        select
        <include refid="select_content_fragment" />
        from lineage_data_source
        <include refid="select_where_fragment" />

    </select>


    <select id="getDataSourcesByIdList" resultType="com.dtstack.engine.api.domain.LineageDataSource">

        select
        <include refid="select_content_fragment" />
        from lineage_data_source
        where
        id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
        and is_deleted = 0;

    </select>


</mapper>
