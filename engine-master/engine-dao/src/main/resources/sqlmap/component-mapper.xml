<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.dao.ComponentDao">

    <sql id="select_content_fragment">
      id,engine_id,component_name,component_type_code,gmt_create,gmt_modified,is_deleted,hadoop_version,upload_file_name,kerberos_file_name,store_type
    </sql>

    <sql id="update_fragment">
        <set>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="uploadFileName!=null">
                upload_file_name = #{uploadFileName},
            </if>
            <if test="hadoopVersion!=null">
                hadoop_version = #{hadoopVersion},
            </if>
            <if test="kerberosFileName != null">
                kerberos_file_name = #{kerberosFileName},
            </if>
            <if test="storeType != null">
                store_type = #{storeType},
            </if>
            gmt_modified =now()
        </set>
    </sql>

    <select id="getOne" resultType="Component">
        select <include refid="select_content_fragment"/>
        from console_component
        where id = #{id} and is_deleted = 0
    </select>

    <insert id="insert" parameterType="Component" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO console_component(engine_id,component_name,component_type_code,upload_file_name,hadoop_version,kerberos_file_name,store_type)
        VALUES (#{engineId},#{componentName},#{componentTypeCode},#{uploadFileName},#{hadoopVersion},#{kerberosFileName},#{storeType})
    </insert>

    <update id="update">
        update console_component
        <include refid="update_fragment"/>
        where id = #{id} and is_deleted = 0
    </update>

    <select id="listByEngineIds" resultType="Component">
        select <include refid="select_content_fragment"/>
        from console_component
        where  is_deleted = 0
        <if test="engineIds.size() > 0">
            and engine_id in
            <foreach collection="engineIds" item="engineId" open="(" separator="," close=")">
                #{engineId}
            </foreach>
        </if>
    </select>

    <select id="getByEngineIdAndComponentType" resultType="Component">
        select <include refid="select_content_fragment"/>
        from console_component
        where engine_id = #{engineId} and component_type_code = #{type} and is_deleted = 0 LIMIT 1
    </select>



    <select id="getByClusterIdAndComponentType" resultType="Component">
        SELECT
        c.id,c.engine_id,c.component_name,c.component_type_code,c.gmt_create,c.gmt_modified,c.is_deleted,
        c.hadoop_version,c.upload_file_name,c.kerberos_file_name
        FROM
        console_component c
        LEFT JOIN console_engine ENGINE ON ENGINE.id = c.engine_id
        LEFT JOIN console_cluster cluster ON cluster.id = ENGINE.cluster_id
        WHERE
        cluster.id = #{clusterId} and c.component_type_code = #{type} and c.is_deleted = 0 LIMIT 1
    </select>



    <select id="getClusterIdByComponentId" resultType="java.lang.Long">
        SELECT
        ce.cluster_id
        FROM
        console_component cc
        LEFT JOIN console_engine ce ON cc.engine_id = ce.id
        WHERE
        cc.id = #{componentId}
        and cc.is_deleted = 0
        and ce.is_deleted = 0
    </select>

    <delete id="deleteById">
        delete from console_component where id = #{componentId}
    </delete>

    <select id="getByTenantIdComponentType" resultType="Component">
        select
        cc.id,cc.engine_id,cc.component_name,cc.component_type_code,cc.gmt_create,cc.gmt_modified,cc.is_deleted,
        cc.hadoop_version,cc.upload_file_name,cc.kerberos_file_name
        from
        console_component cc
        INNER JOIN console_engine_tenant cet
        on cc.engine_id = cet.engine_id
        and cet.tenant_id =  #{tenantId}
        where cc.component_type_code = #{componentType}
        and cc.is_deleted = 0
    </select>

    <select id="listByTenantId" resultType="Component">
        select
        cc.id,cc.component_name,cc.component_type_code
        from console_component cc
        INNER JOIN console_engine_tenant cet
        on cc.engine_id = cet.engine_id
        and cet.tenant_id =  #{tenantId}
        where cc.is_deleted = 0
    </select>
</mapper>
